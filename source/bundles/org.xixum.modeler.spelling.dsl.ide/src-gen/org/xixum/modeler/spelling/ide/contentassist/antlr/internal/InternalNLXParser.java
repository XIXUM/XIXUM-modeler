package org.xixum.modeler.spelling.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xixum.modeler.spelling.services.NLXGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
interface InternalNLXParserSignatures {
     void entryRuleModel() throws RecognitionException;
     void ruleModel() throws RecognitionException;
     void entryRuleSentenceType() throws RecognitionException;
     void ruleSentenceType() throws RecognitionException;
     void entryRuleParagraph() throws RecognitionException;
     void ruleParagraph() throws RecognitionException;
     void entryRuleParagraphBlock() throws RecognitionException;
     void ruleParagraphBlock() throws RecognitionException;
     void entryRuleBlockElement() throws RecognitionException;
     void ruleBlockElement() throws RecognitionException;
     void entryRuleFootNote() throws RecognitionException;
     void ruleFootNote() throws RecognitionException;
     void entryRuleTableLine() throws RecognitionException;
     void ruleTableLine() throws RecognitionException;
     void entryRuleTableBorder() throws RecognitionException;
     void ruleTableBorder() throws RecognitionException;
     void entryRuleTableRow() throws RecognitionException;
     void ruleTableRow() throws RecognitionException;
     void entryRuleTableColumnSeparator() throws RecognitionException;
     void ruleTableColumnSeparator() throws RecognitionException;
     void entryRuleTable() throws RecognitionException;
     void ruleTable() throws RecognitionException;
     void entryRuleLineSentenceChain() throws RecognitionException;
     void ruleLineSentenceChain() throws RecognitionException;
     void entryRuleSentenceChain() throws RecognitionException;
     void ruleSentenceChain() throws RecognitionException;
     void entryRuleSentenceChainX() throws RecognitionException;
     void ruleSentenceChainX() throws RecognitionException;
     void entryRuleSentence() throws RecognitionException;
     void ruleSentence() throws RecognitionException;
     void entryRuleLineSentence() throws RecognitionException;
     void ruleLineSentence() throws RecognitionException;
     void entryRuleFreeSentence() throws RecognitionException;
     void ruleFreeSentence() throws RecognitionException;
     void entryRuleSentenceX() throws RecognitionException;
     void ruleSentenceX() throws RecognitionException;
     void entryRuleListSentence() throws RecognitionException;
     void ruleListSentence() throws RecognitionException;
     void entryRuleChapterSentence() throws RecognitionException;
     void ruleChapterSentence() throws RecognitionException;
     void entryRuleSubSentence() throws RecognitionException;
     void ruleSubSentence() throws RecognitionException;
     void entryRuleTrailSubSentence() throws RecognitionException;
     void ruleTrailSubSentence() throws RecognitionException;
     void entryRuleFreeSubSentence() throws RecognitionException;
     void ruleFreeSubSentence() throws RecognitionException;
     void entryRuleLineSubSentence() throws RecognitionException;
     void ruleLineSubSentence() throws RecognitionException;
     void entryRuleListPoint() throws RecognitionException;
     void ruleListPoint() throws RecognitionException;
     void entryRuleListPointNum() throws RecognitionException;
     void ruleListPointNum() throws RecognitionException;
     void entryRuleNoNElement() throws RecognitionException;
     void ruleNoNElement() throws RecognitionException;
     void entryRuleBrackets() throws RecognitionException;
     void ruleBrackets() throws RecognitionException;
     void entryRuleNoNElementX() throws RecognitionException;
     void ruleNoNElementX() throws RecognitionException;
     void entryRuleNoNElementX2() throws RecognitionException;
     void ruleNoNElementX2() throws RecognitionException;
     void entryRuleElements() throws RecognitionException;
     void ruleElements() throws RecognitionException;
     void entryRuleAllElements() throws RecognitionException;
     void ruleAllElements() throws RecognitionException;
     void entryRuleBracketSentence() throws RecognitionException;
     void ruleBracketSentence() throws RecognitionException;
     void entryRuleExtBracketSentence() throws RecognitionException;
     void ruleExtBracketSentence() throws RecognitionException;
     void entryRuleExtBracketSentenceC() throws RecognitionException;
     void ruleExtBracketSentenceC() throws RecognitionException;
     void entryRuleFullStop() throws RecognitionException;
     void ruleFullStop() throws RecognitionException;
     void entryRuleWord() throws RecognitionException;
     void ruleWord() throws RecognitionException;
     void entryRuleWordShort() throws RecognitionException;
     void ruleWordShort() throws RecognitionException;
     void entryRuleFragmentX() throws RecognitionException;
     void ruleFragmentX() throws RecognitionException;
     void entryRuleFragment() throws RecognitionException;
     void ruleFragment() throws RecognitionException;
     void entryRuleAsterisk() throws RecognitionException;
     void ruleAsterisk() throws RecognitionException;
     void entryRuleHashP() throws RecognitionException;
     void ruleHashP() throws RecognitionException;
     void entryRuleItWord() throws RecognitionException;
     void ruleItWord() throws RecognitionException;
     void entryRuleWhitespace() throws RecognitionException;
     void ruleWhitespace() throws RecognitionException;
     void entryRuleItWordEl() throws RecognitionException;
     void ruleItWordEl() throws RecognitionException;
     void entryRuleItWordElurl() throws RecognitionException;
     void ruleItWordElurl() throws RecognitionException;
     void entryRuleItWordElX() throws RecognitionException;
     void ruleItWordElX() throws RecognitionException;
     void entryRuleItWordElXx() throws RecognitionException;
     void ruleItWordElXx() throws RecognitionException;
     void entryRuleSeparatorsL() throws RecognitionException;
     void ruleSeparatorsL() throws RecognitionException;
     void entryRuleSeparatorsIt() throws RecognitionException;
     void ruleSeparatorsIt() throws RecognitionException;
     void entryRuleAllSep() throws RecognitionException;
     void ruleAllSep() throws RecognitionException;
     void entryRuleQuote() throws RecognitionException;
     void ruleQuote() throws RecognitionException;
     void entryRuleUnit() throws RecognitionException;
     void ruleUnit() throws RecognitionException;
     void entryRuleSimpleUnit() throws RecognitionException;
     void ruleSimpleUnit() throws RecognitionException;
     void entryRuleChapter_Unit_HI() throws RecognitionException;
     void ruleChapter_Unit_HI() throws RecognitionException;
     void entryRuleChapter_Unit_Low() throws RecognitionException;
     void ruleChapter_Unit_Low() throws RecognitionException;
     void entryRuleHashNumber() throws RecognitionException;
     void ruleHashNumber() throws RecognitionException;
     void entryRuleChapterAlpha() throws RecognitionException;
     void ruleChapterAlpha() throws RecognitionException;
     void entryRuleChapterIntermediate() throws RecognitionException;
     void ruleChapterIntermediate() throws RecognitionException;
     void entryRuleSymbolsX() throws RecognitionException;
     void ruleSymbolsX() throws RecognitionException;
     void entryRuleSpecialCh() throws RecognitionException;
     void ruleSpecialCh() throws RecognitionException;
     void entryRuleSymbols() throws RecognitionException;
     void ruleSymbols() throws RecognitionException;
     void entryRuleShortcutGen() throws RecognitionException;
     void ruleShortcutGen() throws RecognitionException;
     void entryRuleShortcutLib() throws RecognitionException;
     void ruleShortcutLib() throws RecognitionException;
     void entryRuleShortCut() throws RecognitionException;
     void ruleShortCut() throws RecognitionException;
     void entryRuleIgnoredText() throws RecognitionException;
     void ruleIgnoredText() throws RecognitionException;
     void entryRulesimpleNum() throws RecognitionException;
     void rulesimpleNum() throws RecognitionException;
     void entryRuleItNum() throws RecognitionException;
     void ruleItNum() throws RecognitionException;
     void entryRuleSpecialSymbols() throws RecognitionException;
     void ruleSpecialSymbols() throws RecognitionException;
     void entryRuledecimalNumEN() throws RecognitionException;
     void ruledecimalNumEN() throws RecognitionException;
     void entryRuledecimalNumDE() throws RecognitionException;
     void ruledecimalNumDE() throws RecognitionException;
     void entryRulechapterNum() throws RecognitionException;
     void rulechapterNum() throws RecognitionException;
     void entryRuleNumber() throws RecognitionException;
     void ruleNumber() throws RecognitionException;
     void entryRuleUrlAdress() throws RecognitionException;
     void ruleUrlAdress() throws RecognitionException;
     void entryRuleEmailAT() throws RecognitionException;
     void ruleEmailAT() throws RecognitionException;
     void entryRuleMailAdress() throws RecognitionException;
     void ruleMailAdress() throws RecognitionException;
     void entryRuleFormula() throws RecognitionException;
     void ruleFormula() throws RecognitionException;
     void entryRuleArray() throws RecognitionException;
     void ruleArray() throws RecognitionException;
     void entryRuleNew_Line() throws RecognitionException;
     void ruleNew_Line() throws RecognitionException;
     void rule__SentenceType__Alternatives_1() throws RecognitionException;
     void rule__Paragraph__Alternatives() throws RecognitionException;
     void rule__BlockElement__Alternatives() throws RecognitionException;
     void rule__TableBorder__Alternatives() throws RecognitionException;
     void rule__SentenceChain__Alternatives_3() throws RecognitionException;
     void rule__SentenceChainX__Alternatives_3_0() throws RecognitionException;
     void rule__ListSentence__Alternatives_1() throws RecognitionException;
     void rule__ChapterSentence__Alternatives_0() throws RecognitionException;
     void rule__SubSentence__Alternatives_1() throws RecognitionException;
     void rule__FreeSubSentence__Alternatives_1() throws RecognitionException;
     void rule__FreeSubSentence__Alternatives_3_0() throws RecognitionException;
     void rule__FreeSubSentence__Alternatives_4() throws RecognitionException;
     void rule__ListPoint__Alternatives() throws RecognitionException;
     void rule__ListPointNum__Alternatives() throws RecognitionException;
     void rule__ListPointNum__Alternatives_0_1() throws RecognitionException;
     void rule__ListPointNum__Alternatives_1_1() throws RecognitionException;
     void rule__NoNElement__Alternatives() throws RecognitionException;
     void rule__Brackets__Alternatives() throws RecognitionException;
     void rule__NoNElementX__Alternatives() throws RecognitionException;
     void rule__NoNElementX2__Alternatives() throws RecognitionException;
     void rule__Elements__Alternatives() throws RecognitionException;
     void rule__AllElements__Alternatives() throws RecognitionException;
     void rule__BracketSentence__SeparatorAlternatives_3_0() throws RecognitionException;
     void rule__BracketSentence__Alternatives_4() throws RecognitionException;
     void rule__ExtBracketSentence__SeparatorAlternatives_3_0() throws RecognitionException;
     void rule__ExtBracketSentenceC__SeparatorAlternatives_3_0() throws RecognitionException;
     void rule__FullStop__Alternatives() throws RecognitionException;
     void rule__Word__Alternatives_0() throws RecognitionException;
     void rule__FragmentX__Alternatives() throws RecognitionException;
     void rule__Fragment__Alternatives() throws RecognitionException;
     void rule__Asterisk__Alternatives() throws RecognitionException;
     void rule__ItWord__Alternatives_0() throws RecognitionException;
     void rule__ItWord__Alternatives_0_0_0() throws RecognitionException;
     void rule__ItWord__Alternatives_0_0_0_0_0() throws RecognitionException;
     void rule__ItWord__Alternatives_0_0_0_0_1() throws RecognitionException;
     void rule__ItWord__Alternatives_0_0_0_1() throws RecognitionException;
     void rule__ItWord__Alternatives_0_1_0() throws RecognitionException;
     void rule__ItWord__Alternatives_0_1_1() throws RecognitionException;
     void rule__Whitespace__Alternatives() throws RecognitionException;
     void rule__ItWordEl__Alternatives() throws RecognitionException;
     void rule__ItWordElurl__Alternatives() throws RecognitionException;
     void rule__ItWordElX__Alternatives() throws RecognitionException;
     void rule__ItWordElXx__Alternatives() throws RecognitionException;
     void rule__SeparatorsL__Alternatives() throws RecognitionException;
     void rule__SeparatorsIt__Alternatives() throws RecognitionException;
     void rule__AllSep__Alternatives() throws RecognitionException;
     void rule__Unit__Alternatives_2() throws RecognitionException;
     void rule__SimpleUnit__Alternatives() throws RecognitionException;
     void rule__HashNumber__SignAlternatives_1_0() throws RecognitionException;
     void rule__ChapterAlpha__Alternatives_1() throws RecognitionException;
     void rule__ChapterAlpha__Alternatives_4_0() throws RecognitionException;
     void rule__ChapterIntermediate__Alternatives() throws RecognitionException;
     void rule__SpecialCh__Alternatives() throws RecognitionException;
     void rule__ShortcutGen__Alternatives_1() throws RecognitionException;
     void rule__ShortcutGen__Alternatives_2_1() throws RecognitionException;
     void rule__ShortCut__Alternatives() throws RecognitionException;
     void rule__ItNum__Alternatives_1_0() throws RecognitionException;
     void rule__SpecialSymbols__Alternatives() throws RecognitionException;
     void rule__Number__Alternatives() throws RecognitionException;
     void rule__UrlAdress__Alternatives_2_1() throws RecognitionException;
     void rule__MailAdress__Alternatives_0() throws RecognitionException;
     void rule__Formula__Alternatives_1() throws RecognitionException;
     void rule__Formula__Alternatives_3_1() throws RecognitionException;
     void rule__Array__Alternatives_0() throws RecognitionException;
     void rule__SentenceType__Group__0() throws RecognitionException;
     void rule__SentenceType__Group__0__Impl() throws RecognitionException;
     void rule__SentenceType__Group__1() throws RecognitionException;
     void rule__SentenceType__Group__1__Impl() throws RecognitionException;
     void rule__SentenceType__Group__2() throws RecognitionException;
     void rule__SentenceType__Group__2__Impl() throws RecognitionException;
     void rule__FootNote__Group__0() throws RecognitionException;
     void rule__FootNote__Group__0__Impl() throws RecognitionException;
     void rule__FootNote__Group__1() throws RecognitionException;
     void rule__FootNote__Group__1__Impl() throws RecognitionException;
     void rule__FootNote__Group__2() throws RecognitionException;
     void rule__FootNote__Group__2__Impl() throws RecognitionException;
     void rule__TableRow__Group__0() throws RecognitionException;
     void rule__TableRow__Group__0__Impl() throws RecognitionException;
     void rule__TableRow__Group__1() throws RecognitionException;
     void rule__TableRow__Group__1__Impl() throws RecognitionException;
     void rule__TableRow__Group__2() throws RecognitionException;
     void rule__TableRow__Group__2__Impl() throws RecognitionException;
     void rule__TableRow__Group__3() throws RecognitionException;
     void rule__TableRow__Group__3__Impl() throws RecognitionException;
     void rule__TableRow__Group__4() throws RecognitionException;
     void rule__TableRow__Group__4__Impl() throws RecognitionException;
     void rule__TableRow__Group_3__0() throws RecognitionException;
     void rule__TableRow__Group_3__0__Impl() throws RecognitionException;
     void rule__TableRow__Group_3__1() throws RecognitionException;
     void rule__TableRow__Group_3__1__Impl() throws RecognitionException;
     void rule__Table__Group__0() throws RecognitionException;
     void rule__Table__Group__0__Impl() throws RecognitionException;
     void rule__Table__Group__1() throws RecognitionException;
     void rule__Table__Group__1__Impl() throws RecognitionException;
     void rule__Table__Group__2() throws RecognitionException;
     void rule__Table__Group__2__Impl() throws RecognitionException;
     void rule__Table__Group__3() throws RecognitionException;
     void rule__Table__Group__3__Impl() throws RecognitionException;
     void rule__Table__Group__4() throws RecognitionException;
     void rule__Table__Group__4__Impl() throws RecognitionException;
     void rule__Table__Group_2__0() throws RecognitionException;
     void rule__Table__Group_2__0__Impl() throws RecognitionException;
     void rule__Table__Group_2__1() throws RecognitionException;
     void rule__Table__Group_2__1__Impl() throws RecognitionException;
     void rule__Table__Group_3__0() throws RecognitionException;
     void rule__Table__Group_3__0__Impl() throws RecognitionException;
     void rule__Table__Group_3__1() throws RecognitionException;
     void rule__Table__Group_3__1__Impl() throws RecognitionException;
     void rule__Table__Group_3__2() throws RecognitionException;
     void rule__Table__Group_3__2__Impl() throws RecognitionException;
     void rule__Table__Group_3_2__0() throws RecognitionException;
     void rule__Table__Group_3_2__0__Impl() throws RecognitionException;
     void rule__Table__Group_3_2__1() throws RecognitionException;
     void rule__Table__Group_3_2__1__Impl() throws RecognitionException;
     void rule__LineSentenceChain__Group__0() throws RecognitionException;
     void rule__LineSentenceChain__Group__0__Impl() throws RecognitionException;
     void rule__LineSentenceChain__Group__1() throws RecognitionException;
     void rule__LineSentenceChain__Group__1__Impl() throws RecognitionException;
     void rule__LineSentenceChain__Group__2() throws RecognitionException;
     void rule__LineSentenceChain__Group__2__Impl() throws RecognitionException;
     void rule__LineSentenceChain__Group__3() throws RecognitionException;
     void rule__LineSentenceChain__Group__3__Impl() throws RecognitionException;
     void rule__LineSentenceChain__Group_2__0() throws RecognitionException;
     void rule__LineSentenceChain__Group_2__0__Impl() throws RecognitionException;
     void rule__LineSentenceChain__Group_2__1() throws RecognitionException;
     void rule__LineSentenceChain__Group_2__1__Impl() throws RecognitionException;
     void rule__SentenceChain__Group__0() throws RecognitionException;
     void rule__SentenceChain__Group__0__Impl() throws RecognitionException;
     void rule__SentenceChain__Group__1() throws RecognitionException;
     void rule__SentenceChain__Group__1__Impl() throws RecognitionException;
     void rule__SentenceChain__Group__2() throws RecognitionException;
     void rule__SentenceChain__Group__2__Impl() throws RecognitionException;
     void rule__SentenceChain__Group__3() throws RecognitionException;
     void rule__SentenceChain__Group__3__Impl() throws RecognitionException;
     void rule__SentenceChain__Group_2__0() throws RecognitionException;
     void rule__SentenceChain__Group_2__0__Impl() throws RecognitionException;
     void rule__SentenceChain__Group_2__1() throws RecognitionException;
     void rule__SentenceChain__Group_2__1__Impl() throws RecognitionException;
     void rule__SentenceChainX__Group__0() throws RecognitionException;
     void rule__SentenceChainX__Group__0__Impl() throws RecognitionException;
     void rule__SentenceChainX__Group__1() throws RecognitionException;
     void rule__SentenceChainX__Group__1__Impl() throws RecognitionException;
     void rule__SentenceChainX__Group__2() throws RecognitionException;
     void rule__SentenceChainX__Group__2__Impl() throws RecognitionException;
     void rule__SentenceChainX__Group__3() throws RecognitionException;
     void rule__SentenceChainX__Group__3__Impl() throws RecognitionException;
     void rule__SentenceChainX__Group_2__0() throws RecognitionException;
     void rule__SentenceChainX__Group_2__0__Impl() throws RecognitionException;
     void rule__SentenceChainX__Group_2__1() throws RecognitionException;
     void rule__SentenceChainX__Group_2__1__Impl() throws RecognitionException;
     void rule__SentenceChainX__Group_3__0() throws RecognitionException;
     void rule__SentenceChainX__Group_3__0__Impl() throws RecognitionException;
     void rule__Sentence__Group__0() throws RecognitionException;
     void rule__Sentence__Group__0__Impl() throws RecognitionException;
     void rule__Sentence__Group__1() throws RecognitionException;
     void rule__Sentence__Group__1__Impl() throws RecognitionException;
     void rule__Sentence__Group__2() throws RecognitionException;
     void rule__Sentence__Group__2__Impl() throws RecognitionException;
     void rule__Sentence__Group_2__0() throws RecognitionException;
     void rule__Sentence__Group_2__0__Impl() throws RecognitionException;
     void rule__Sentence__Group_2__1() throws RecognitionException;
     void rule__Sentence__Group_2__1__Impl() throws RecognitionException;
     void rule__LineSentence__Group__0() throws RecognitionException;
     void rule__LineSentence__Group__0__Impl() throws RecognitionException;
     void rule__LineSentence__Group__1() throws RecognitionException;
     void rule__LineSentence__Group__1__Impl() throws RecognitionException;
     void rule__LineSentence__Group__2() throws RecognitionException;
     void rule__LineSentence__Group__2__Impl() throws RecognitionException;
     void rule__LineSentence__Group_2__0() throws RecognitionException;
     void rule__LineSentence__Group_2__0__Impl() throws RecognitionException;
     void rule__LineSentence__Group_2__1() throws RecognitionException;
     void rule__LineSentence__Group_2__1__Impl() throws RecognitionException;
     void rule__FreeSentence__Group__0() throws RecognitionException;
     void rule__FreeSentence__Group__0__Impl() throws RecognitionException;
     void rule__FreeSentence__Group__1() throws RecognitionException;
     void rule__FreeSentence__Group__1__Impl() throws RecognitionException;
     void rule__FreeSentence__Group__2() throws RecognitionException;
     void rule__FreeSentence__Group__2__Impl() throws RecognitionException;
     void rule__FreeSentence__Group_2__0() throws RecognitionException;
     void rule__FreeSentence__Group_2__0__Impl() throws RecognitionException;
     void rule__FreeSentence__Group_2__1() throws RecognitionException;
     void rule__FreeSentence__Group_2__1__Impl() throws RecognitionException;
     void rule__SentenceX__Group__0() throws RecognitionException;
     void rule__SentenceX__Group__0__Impl() throws RecognitionException;
     void rule__SentenceX__Group__1() throws RecognitionException;
     void rule__SentenceX__Group__1__Impl() throws RecognitionException;
     void rule__SentenceX__Group__2() throws RecognitionException;
     void rule__SentenceX__Group__2__Impl() throws RecognitionException;
     void rule__SentenceX__Group_2__0() throws RecognitionException;
     void rule__SentenceX__Group_2__0__Impl() throws RecognitionException;
     void rule__SentenceX__Group_2__1() throws RecognitionException;
     void rule__SentenceX__Group_2__1__Impl() throws RecognitionException;
     void rule__ListSentence__Group__0() throws RecognitionException;
     void rule__ListSentence__Group__0__Impl() throws RecognitionException;
     void rule__ListSentence__Group__1() throws RecognitionException;
     void rule__ListSentence__Group__1__Impl() throws RecognitionException;
     void rule__ChapterSentence__Group__0() throws RecognitionException;
     void rule__ChapterSentence__Group__0__Impl() throws RecognitionException;
     void rule__ChapterSentence__Group__1() throws RecognitionException;
     void rule__ChapterSentence__Group__1__Impl() throws RecognitionException;
     void rule__SubSentence__Group__0() throws RecognitionException;
     void rule__SubSentence__Group__0__Impl() throws RecognitionException;
     void rule__SubSentence__Group__1() throws RecognitionException;
     void rule__SubSentence__Group__1__Impl() throws RecognitionException;
     void rule__SubSentence__Group__2() throws RecognitionException;
     void rule__SubSentence__Group__2__Impl() throws RecognitionException;
     void rule__SubSentence__Group__3() throws RecognitionException;
     void rule__SubSentence__Group__3__Impl() throws RecognitionException;
     void rule__SubSentence__Group_1_0__0() throws RecognitionException;
     void rule__SubSentence__Group_1_0__0__Impl() throws RecognitionException;
     void rule__SubSentence__Group_1_0__1() throws RecognitionException;
     void rule__SubSentence__Group_1_0__1__Impl() throws RecognitionException;
     void rule__SubSentence__Group_1_0_1__0() throws RecognitionException;
     void rule__SubSentence__Group_1_0_1__0__Impl() throws RecognitionException;
     void rule__SubSentence__Group_1_0_1__1() throws RecognitionException;
     void rule__SubSentence__Group_1_0_1__1__Impl() throws RecognitionException;
     void rule__SubSentence__Group_1_1__0() throws RecognitionException;
     void rule__SubSentence__Group_1_1__0__Impl() throws RecognitionException;
     void rule__SubSentence__Group_1_1__1() throws RecognitionException;
     void rule__SubSentence__Group_1_1__1__Impl() throws RecognitionException;
     void rule__SubSentence__Group_1_1_1__0() throws RecognitionException;
     void rule__SubSentence__Group_1_1_1__0__Impl() throws RecognitionException;
     void rule__SubSentence__Group_1_1_1__1() throws RecognitionException;
     void rule__SubSentence__Group_1_1_1__1__Impl() throws RecognitionException;
     void rule__SubSentence__Group_2__0() throws RecognitionException;
     void rule__SubSentence__Group_2__0__Impl() throws RecognitionException;
     void rule__SubSentence__Group_2__1() throws RecognitionException;
     void rule__SubSentence__Group_2__1__Impl() throws RecognitionException;
     void rule__SubSentence__Group_2__2() throws RecognitionException;
     void rule__SubSentence__Group_2__2__Impl() throws RecognitionException;
     void rule__SubSentence__Group_2__3() throws RecognitionException;
     void rule__SubSentence__Group_2__3__Impl() throws RecognitionException;
     void rule__SubSentence__Group_2__4() throws RecognitionException;
     void rule__SubSentence__Group_2__4__Impl() throws RecognitionException;
     void rule__SubSentence__Group_2_4__0() throws RecognitionException;
     void rule__SubSentence__Group_2_4__0__Impl() throws RecognitionException;
     void rule__SubSentence__Group_2_4__1() throws RecognitionException;
     void rule__SubSentence__Group_2_4__1__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group__0() throws RecognitionException;
     void rule__TrailSubSentence__Group__0__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group__1() throws RecognitionException;
     void rule__TrailSubSentence__Group__1__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group__2() throws RecognitionException;
     void rule__TrailSubSentence__Group__2__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1__0() throws RecognitionException;
     void rule__TrailSubSentence__Group_1__0__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1__1() throws RecognitionException;
     void rule__TrailSubSentence__Group_1__1__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1__2() throws RecognitionException;
     void rule__TrailSubSentence__Group_1__2__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_1__0() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_1__0__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_1__1() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_1__1__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2__0() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2__0__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2__1() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2__1__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2__2() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2__2__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2__3() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2__3__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2__4() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2__4__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2_4__0() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2_4__0__Impl() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2_4__1() throws RecognitionException;
     void rule__TrailSubSentence__Group_1_2_4__1__Impl() throws RecognitionException;
     void rule__FreeSubSentence__Group__0() throws RecognitionException;
     void rule__FreeSubSentence__Group__0__Impl() throws RecognitionException;
     void rule__FreeSubSentence__Group__1() throws RecognitionException;
     void rule__FreeSubSentence__Group__1__Impl() throws RecognitionException;
     void rule__FreeSubSentence__Group__2() throws RecognitionException;
     void rule__FreeSubSentence__Group__2__Impl() throws RecognitionException;
     void rule__FreeSubSentence__Group__3() throws RecognitionException;
     void rule__FreeSubSentence__Group__3__Impl() throws RecognitionException;
     void rule__FreeSubSentence__Group__4() throws RecognitionException;
     void rule__FreeSubSentence__Group__4__Impl() throws RecognitionException;
     void rule__FreeSubSentence__Group_3__0() throws RecognitionException;
     void rule__FreeSubSentence__Group_3__0__Impl() throws RecognitionException;
     void rule__FreeSubSentence__Group_3__1() throws RecognitionException;
     void rule__FreeSubSentence__Group_3__1__Impl() throws RecognitionException;
     void rule__LineSubSentence__Group__0() throws RecognitionException;
     void rule__LineSubSentence__Group__0__Impl() throws RecognitionException;
     void rule__LineSubSentence__Group__1() throws RecognitionException;
     void rule__LineSubSentence__Group__1__Impl() throws RecognitionException;
     void rule__LineSubSentence__Group__2() throws RecognitionException;
     void rule__LineSubSentence__Group__2__Impl() throws RecognitionException;
     void rule__LineSubSentence__Group__3() throws RecognitionException;
     void rule__LineSubSentence__Group__3__Impl() throws RecognitionException;
     void rule__LineSubSentence__Group_2__0() throws RecognitionException;
     void rule__LineSubSentence__Group_2__0__Impl() throws RecognitionException;
     void rule__LineSubSentence__Group_2__1() throws RecognitionException;
     void rule__LineSubSentence__Group_2__1__Impl() throws RecognitionException;
     void rule__ListPointNum__Group_0__0() throws RecognitionException;
     void rule__ListPointNum__Group_0__0__Impl() throws RecognitionException;
     void rule__ListPointNum__Group_0__1() throws RecognitionException;
     void rule__ListPointNum__Group_0__1__Impl() throws RecognitionException;
     void rule__ListPointNum__Group_0_1_0__0() throws RecognitionException;
     void rule__ListPointNum__Group_0_1_0__0__Impl() throws RecognitionException;
     void rule__ListPointNum__Group_0_1_0__1() throws RecognitionException;
     void rule__ListPointNum__Group_0_1_0__1__Impl() throws RecognitionException;
     void rule__ListPointNum__Group_0_1_0__2() throws RecognitionException;
     void rule__ListPointNum__Group_0_1_0__2__Impl() throws RecognitionException;
     void rule__ListPointNum__Group_1__0() throws RecognitionException;
     void rule__ListPointNum__Group_1__0__Impl() throws RecognitionException;
     void rule__ListPointNum__Group_1__1() throws RecognitionException;
     void rule__ListPointNum__Group_1__1__Impl() throws RecognitionException;
     void rule__ListPointNum__Group_1_1_0__0() throws RecognitionException;
     void rule__ListPointNum__Group_1_1_0__0__Impl() throws RecognitionException;
     void rule__ListPointNum__Group_1_1_0__1() throws RecognitionException;
     void rule__ListPointNum__Group_1_1_0__1__Impl() throws RecognitionException;
     void rule__ListPointNum__Group_1_1_0__2() throws RecognitionException;
     void rule__ListPointNum__Group_1_1_0__2__Impl() throws RecognitionException;
     void rule__BracketSentence__Group__0() throws RecognitionException;
     void rule__BracketSentence__Group__0__Impl() throws RecognitionException;
     void rule__BracketSentence__Group__1() throws RecognitionException;
     void rule__BracketSentence__Group__1__Impl() throws RecognitionException;
     void rule__BracketSentence__Group__2() throws RecognitionException;
     void rule__BracketSentence__Group__2__Impl() throws RecognitionException;
     void rule__BracketSentence__Group__3() throws RecognitionException;
     void rule__BracketSentence__Group__3__Impl() throws RecognitionException;
     void rule__BracketSentence__Group__4() throws RecognitionException;
     void rule__BracketSentence__Group__4__Impl() throws RecognitionException;
     void rule__BracketSentence__Group__5() throws RecognitionException;
     void rule__BracketSentence__Group__5__Impl() throws RecognitionException;
     void rule__BracketSentence__Group__6() throws RecognitionException;
     void rule__BracketSentence__Group__6__Impl() throws RecognitionException;
     void rule__BracketSentence__Group_2__0() throws RecognitionException;
     void rule__BracketSentence__Group_2__0__Impl() throws RecognitionException;
     void rule__BracketSentence__Group_2__1() throws RecognitionException;
     void rule__BracketSentence__Group_2__1__Impl() throws RecognitionException;
     void rule__BracketSentence__Group_2_1__0() throws RecognitionException;
     void rule__BracketSentence__Group_2_1__0__Impl() throws RecognitionException;
     void rule__BracketSentence__Group_2_1__1() throws RecognitionException;
     void rule__BracketSentence__Group_2_1__1__Impl() throws RecognitionException;
     void rule__ExtBracketSentence__Group__0() throws RecognitionException;
     void rule__ExtBracketSentence__Group__0__Impl() throws RecognitionException;
     void rule__ExtBracketSentence__Group__1() throws RecognitionException;
     void rule__ExtBracketSentence__Group__1__Impl() throws RecognitionException;
     void rule__ExtBracketSentence__Group__2() throws RecognitionException;
     void rule__ExtBracketSentence__Group__2__Impl() throws RecognitionException;
     void rule__ExtBracketSentence__Group__3() throws RecognitionException;
     void rule__ExtBracketSentence__Group__3__Impl() throws RecognitionException;
     void rule__ExtBracketSentence__Group__4() throws RecognitionException;
     void rule__ExtBracketSentence__Group__4__Impl() throws RecognitionException;
     void rule__ExtBracketSentence__Group__5() throws RecognitionException;
     void rule__ExtBracketSentence__Group__5__Impl() throws RecognitionException;
     void rule__ExtBracketSentence__Group_2__0() throws RecognitionException;
     void rule__ExtBracketSentence__Group_2__0__Impl() throws RecognitionException;
     void rule__ExtBracketSentence__Group_2__1() throws RecognitionException;
     void rule__ExtBracketSentence__Group_2__1__Impl() throws RecognitionException;
     void rule__ExtBracketSentence__Group_2_1__0() throws RecognitionException;
     void rule__ExtBracketSentence__Group_2_1__0__Impl() throws RecognitionException;
     void rule__ExtBracketSentence__Group_2_1__1() throws RecognitionException;
     void rule__ExtBracketSentence__Group_2_1__1__Impl() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__0() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__0__Impl() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__1() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__1__Impl() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__2() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__2__Impl() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__3() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__3__Impl() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__4() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__4__Impl() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__5() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group__5__Impl() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group_2__0() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group_2__0__Impl() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group_2__1() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group_2__1__Impl() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group_2_1__0() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group_2_1__0__Impl() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group_2_1__1() throws RecognitionException;
     void rule__ExtBracketSentenceC__Group_2_1__1__Impl() throws RecognitionException;
     void rule__Word__Group__0() throws RecognitionException;
     void rule__Word__Group__0__Impl() throws RecognitionException;
     void rule__Word__Group__1() throws RecognitionException;
     void rule__Word__Group__1__Impl() throws RecognitionException;
     void rule__Word__Group_0_1__0() throws RecognitionException;
     void rule__Word__Group_0_1__0__Impl() throws RecognitionException;
     void rule__Word__Group_0_1__1() throws RecognitionException;
     void rule__Word__Group_0_1__1__Impl() throws RecognitionException;
     void rule__Word__Group_0_1_0__0() throws RecognitionException;
     void rule__Word__Group_0_1_0__0__Impl() throws RecognitionException;
     void rule__Word__Group_0_1_1__0() throws RecognitionException;
     void rule__Word__Group_0_1_1__0__Impl() throws RecognitionException;
     void rule__Word__Group_0_1_1__1() throws RecognitionException;
     void rule__Word__Group_0_1_1__1__Impl() throws RecognitionException;
     void rule__WordShort__Group__0() throws RecognitionException;
     void rule__WordShort__Group__0__Impl() throws RecognitionException;
     void rule__WordShort__Group__1() throws RecognitionException;
     void rule__WordShort__Group__1__Impl() throws RecognitionException;
     void rule__Asterisk__Group_0__0() throws RecognitionException;
     void rule__Asterisk__Group_0__0__Impl() throws RecognitionException;
     void rule__Asterisk__Group_0__1() throws RecognitionException;
     void rule__Asterisk__Group_0__1__Impl() throws RecognitionException;
     void rule__Asterisk__Group_1__0() throws RecognitionException;
     void rule__Asterisk__Group_1__0__Impl() throws RecognitionException;
     void rule__Asterisk__Group_1__1() throws RecognitionException;
     void rule__Asterisk__Group_1__1__Impl() throws RecognitionException;
     void rule__Asterisk__Group_2__0() throws RecognitionException;
     void rule__Asterisk__Group_2__0__Impl() throws RecognitionException;
     void rule__Asterisk__Group_2__1() throws RecognitionException;
     void rule__Asterisk__Group_2__1__Impl() throws RecognitionException;
     void rule__ItWord__Group__0() throws RecognitionException;
     void rule__ItWord__Group__0__Impl() throws RecognitionException;
     void rule__ItWord__Group__1() throws RecognitionException;
     void rule__ItWord__Group__1__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_0__0() throws RecognitionException;
     void rule__ItWord__Group_0_0__0__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_0__1() throws RecognitionException;
     void rule__ItWord__Group_0_0__1__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_0_0_0__0() throws RecognitionException;
     void rule__ItWord__Group_0_0_0_0__0__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_0_0_0__1() throws RecognitionException;
     void rule__ItWord__Group_0_0_0_0__1__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_0_0_1_2__0() throws RecognitionException;
     void rule__ItWord__Group_0_0_0_1_2__0__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_0_0_1_2__1() throws RecognitionException;
     void rule__ItWord__Group_0_0_0_1_2__1__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_0_1__0() throws RecognitionException;
     void rule__ItWord__Group_0_0_1__0__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_0_1__1() throws RecognitionException;
     void rule__ItWord__Group_0_0_1__1__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_1__0() throws RecognitionException;
     void rule__ItWord__Group_0_1__0__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_1__1() throws RecognitionException;
     void rule__ItWord__Group_0_1__1__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_1__2() throws RecognitionException;
     void rule__ItWord__Group_0_1__2__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_1_1_0__0() throws RecognitionException;
     void rule__ItWord__Group_0_1_1_0__0__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_1_1_0__1() throws RecognitionException;
     void rule__ItWord__Group_0_1_1_0__1__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_1_1_1__0() throws RecognitionException;
     void rule__ItWord__Group_0_1_1_1__0__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_1_1_1__1() throws RecognitionException;
     void rule__ItWord__Group_0_1_1_1__1__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_1_2__0() throws RecognitionException;
     void rule__ItWord__Group_0_1_2__0__Impl() throws RecognitionException;
     void rule__ItWord__Group_0_1_2__1() throws RecognitionException;
     void rule__ItWord__Group_0_1_2__1__Impl() throws RecognitionException;
     void rule__Whitespace__Group_1__0() throws RecognitionException;
     void rule__Whitespace__Group_1__0__Impl() throws RecognitionException;
     void rule__Whitespace__Group_1__1() throws RecognitionException;
     void rule__Whitespace__Group_1__1__Impl() throws RecognitionException;
     void rule__Whitespace__Group_1__2() throws RecognitionException;
     void rule__Whitespace__Group_1__2__Impl() throws RecognitionException;
     void rule__Unit__Group__0() throws RecognitionException;
     void rule__Unit__Group__0__Impl() throws RecognitionException;
     void rule__Unit__Group__1() throws RecognitionException;
     void rule__Unit__Group__1__Impl() throws RecognitionException;
     void rule__Unit__Group__2() throws RecognitionException;
     void rule__Unit__Group__2__Impl() throws RecognitionException;
     void rule__SimpleUnit__Group_0__0() throws RecognitionException;
     void rule__SimpleUnit__Group_0__0__Impl() throws RecognitionException;
     void rule__SimpleUnit__Group_0__1() throws RecognitionException;
     void rule__SimpleUnit__Group_0__1__Impl() throws RecognitionException;
     void rule__Chapter_Unit_HI__Group__0() throws RecognitionException;
     void rule__Chapter_Unit_HI__Group__0__Impl() throws RecognitionException;
     void rule__Chapter_Unit_HI__Group__1() throws RecognitionException;
     void rule__Chapter_Unit_HI__Group__1__Impl() throws RecognitionException;
     void rule__Chapter_Unit_HI__Group__2() throws RecognitionException;
     void rule__Chapter_Unit_HI__Group__2__Impl() throws RecognitionException;
     void rule__Chapter_Unit_Low__Group__0() throws RecognitionException;
     void rule__Chapter_Unit_Low__Group__0__Impl() throws RecognitionException;
     void rule__Chapter_Unit_Low__Group__1() throws RecognitionException;
     void rule__Chapter_Unit_Low__Group__1__Impl() throws RecognitionException;
     void rule__Chapter_Unit_Low__Group__2() throws RecognitionException;
     void rule__Chapter_Unit_Low__Group__2__Impl() throws RecognitionException;
     void rule__HashNumber__Group__0() throws RecognitionException;
     void rule__HashNumber__Group__0__Impl() throws RecognitionException;
     void rule__HashNumber__Group__1() throws RecognitionException;
     void rule__HashNumber__Group__1__Impl() throws RecognitionException;
     void rule__HashNumber__Group__2() throws RecognitionException;
     void rule__HashNumber__Group__2__Impl() throws RecognitionException;
     void rule__ChapterAlpha__Group__0() throws RecognitionException;
     void rule__ChapterAlpha__Group__0__Impl() throws RecognitionException;
     void rule__ChapterAlpha__Group__1() throws RecognitionException;
     void rule__ChapterAlpha__Group__1__Impl() throws RecognitionException;
     void rule__ChapterAlpha__Group__2() throws RecognitionException;
     void rule__ChapterAlpha__Group__2__Impl() throws RecognitionException;
     void rule__ChapterAlpha__Group__3() throws RecognitionException;
     void rule__ChapterAlpha__Group__3__Impl() throws RecognitionException;
     void rule__ChapterAlpha__Group__4() throws RecognitionException;
     void rule__ChapterAlpha__Group__4__Impl() throws RecognitionException;
     void rule__ChapterAlpha__Group__5() throws RecognitionException;
     void rule__ChapterAlpha__Group__5__Impl() throws RecognitionException;
     void rule__ChapterAlpha__Group_4__0() throws RecognitionException;
     void rule__ChapterAlpha__Group_4__0__Impl() throws RecognitionException;
     void rule__ChapterAlpha__Group_4__1() throws RecognitionException;
     void rule__ChapterAlpha__Group_4__1__Impl() throws RecognitionException;
     void rule__SymbolsX__Group__0() throws RecognitionException;
     void rule__SymbolsX__Group__0__Impl() throws RecognitionException;
     void rule__SymbolsX__Group__1() throws RecognitionException;
     void rule__SymbolsX__Group__1__Impl() throws RecognitionException;
     void rule__Symbols__Group__0() throws RecognitionException;
     void rule__Symbols__Group__0__Impl() throws RecognitionException;
     void rule__Symbols__Group__1() throws RecognitionException;
     void rule__Symbols__Group__1__Impl() throws RecognitionException;
     void rule__ShortcutGen__Group__0() throws RecognitionException;
     void rule__ShortcutGen__Group__0__Impl() throws RecognitionException;
     void rule__ShortcutGen__Group__1() throws RecognitionException;
     void rule__ShortcutGen__Group__1__Impl() throws RecognitionException;
     void rule__ShortcutGen__Group__2() throws RecognitionException;
     void rule__ShortcutGen__Group__2__Impl() throws RecognitionException;
     void rule__ShortcutGen__Group__3() throws RecognitionException;
     void rule__ShortcutGen__Group__3__Impl() throws RecognitionException;
     void rule__ShortcutGen__Group_2__0() throws RecognitionException;
     void rule__ShortcutGen__Group_2__0__Impl() throws RecognitionException;
     void rule__ShortcutGen__Group_2__1() throws RecognitionException;
     void rule__ShortcutGen__Group_2__1__Impl() throws RecognitionException;
     void rule__ShortcutLib__Group__0() throws RecognitionException;
     void rule__ShortcutLib__Group__0__Impl() throws RecognitionException;
     void rule__ShortcutLib__Group__1() throws RecognitionException;
     void rule__ShortcutLib__Group__1__Impl() throws RecognitionException;
     void rule__ItNum__Group__0() throws RecognitionException;
     void rule__ItNum__Group__0__Impl() throws RecognitionException;
     void rule__ItNum__Group__1() throws RecognitionException;
     void rule__ItNum__Group__1__Impl() throws RecognitionException;
     void rule__ItNum__Group__2() throws RecognitionException;
     void rule__ItNum__Group__2__Impl() throws RecognitionException;
     void rule__ItNum__Group_1__0() throws RecognitionException;
     void rule__ItNum__Group_1__0__Impl() throws RecognitionException;
     void rule__ItNum__Group_1__1() throws RecognitionException;
     void rule__ItNum__Group_1__1__Impl() throws RecognitionException;
     void rule__ItNum__Group_2__0() throws RecognitionException;
     void rule__ItNum__Group_2__0__Impl() throws RecognitionException;
     void rule__ItNum__Group_2__1() throws RecognitionException;
     void rule__ItNum__Group_2__1__Impl() throws RecognitionException;
     void rule__DecimalNumEN__Group__0() throws RecognitionException;
     void rule__DecimalNumEN__Group__0__Impl() throws RecognitionException;
     void rule__DecimalNumEN__Group__1() throws RecognitionException;
     void rule__DecimalNumEN__Group__1__Impl() throws RecognitionException;
     void rule__DecimalNumEN__Group__2() throws RecognitionException;
     void rule__DecimalNumEN__Group__2__Impl() throws RecognitionException;
     void rule__DecimalNumDE__Group__0() throws RecognitionException;
     void rule__DecimalNumDE__Group__0__Impl() throws RecognitionException;
     void rule__DecimalNumDE__Group__1() throws RecognitionException;
     void rule__DecimalNumDE__Group__1__Impl() throws RecognitionException;
     void rule__DecimalNumDE__Group__2() throws RecognitionException;
     void rule__DecimalNumDE__Group__2__Impl() throws RecognitionException;
     void rule__ChapterNum__Group__0() throws RecognitionException;
     void rule__ChapterNum__Group__0__Impl() throws RecognitionException;
     void rule__ChapterNum__Group__1() throws RecognitionException;
     void rule__ChapterNum__Group__1__Impl() throws RecognitionException;
     void rule__ChapterNum__Group_1__0() throws RecognitionException;
     void rule__ChapterNum__Group_1__0__Impl() throws RecognitionException;
     void rule__ChapterNum__Group_1__1() throws RecognitionException;
     void rule__ChapterNum__Group_1__1__Impl() throws RecognitionException;
     void rule__UrlAdress__Group__0() throws RecognitionException;
     void rule__UrlAdress__Group__0__Impl() throws RecognitionException;
     void rule__UrlAdress__Group__1() throws RecognitionException;
     void rule__UrlAdress__Group__1__Impl() throws RecognitionException;
     void rule__UrlAdress__Group__2() throws RecognitionException;
     void rule__UrlAdress__Group__2__Impl() throws RecognitionException;
     void rule__UrlAdress__Group__3() throws RecognitionException;
     void rule__UrlAdress__Group__3__Impl() throws RecognitionException;
     void rule__UrlAdress__Group_2__0() throws RecognitionException;
     void rule__UrlAdress__Group_2__0__Impl() throws RecognitionException;
     void rule__UrlAdress__Group_2__1() throws RecognitionException;
     void rule__UrlAdress__Group_2__1__Impl() throws RecognitionException;
     void rule__MailAdress__Group__0() throws RecognitionException;
     void rule__MailAdress__Group__0__Impl() throws RecognitionException;
     void rule__MailAdress__Group__1() throws RecognitionException;
     void rule__MailAdress__Group__1__Impl() throws RecognitionException;
     void rule__MailAdress__Group__2() throws RecognitionException;
     void rule__MailAdress__Group__2__Impl() throws RecognitionException;
     void rule__Formula__Group__0() throws RecognitionException;
     void rule__Formula__Group__0__Impl() throws RecognitionException;
     void rule__Formula__Group__1() throws RecognitionException;
     void rule__Formula__Group__1__Impl() throws RecognitionException;
     void rule__Formula__Group__2() throws RecognitionException;
     void rule__Formula__Group__2__Impl() throws RecognitionException;
     void rule__Formula__Group__3() throws RecognitionException;
     void rule__Formula__Group__3__Impl() throws RecognitionException;
     void rule__Formula__Group_3__0() throws RecognitionException;
     void rule__Formula__Group_3__0__Impl() throws RecognitionException;
     void rule__Formula__Group_3__1() throws RecognitionException;
     void rule__Formula__Group_3__1__Impl() throws RecognitionException;
     void rule__Formula__Group_3__2() throws RecognitionException;
     void rule__Formula__Group_3__2__Impl() throws RecognitionException;
     void rule__Array__Group__0() throws RecognitionException;
     void rule__Array__Group__0__Impl() throws RecognitionException;
     void rule__Array__Group__1() throws RecognitionException;
     void rule__Array__Group__1__Impl() throws RecognitionException;
     void rule__New_Line__Group__0() throws RecognitionException;
     void rule__New_Line__Group__0__Impl() throws RecognitionException;
     void rule__New_Line__Group__1() throws RecognitionException;
     void rule__New_Line__Group__1__Impl() throws RecognitionException;
     void rule__Model__SentencesAssignment() throws RecognitionException;
     void rule__SentenceType__PEndAssignment_2() throws RecognitionException;
     void rule__ParagraphBlock__BlockAssignment() throws RecognitionException;
     void rule__FootNote__NumberAssignment_0() throws RecognitionException;
     void rule__FootNote__SentenceChainAssignment_2() throws RecognitionException;
     void rule__TableLine__ContentAssignment() throws RecognitionException;
     void rule__TableRow__ContentAssignment_1() throws RecognitionException;
     void rule__TableRow__ContentAssignment_2() throws RecognitionException;
     void rule__TableRow__ContentAssignment_3_0() throws RecognitionException;
     void rule__TableRow__ContentAssignment_3_1() throws RecognitionException;
     void rule__TableRow__ContentAssignment_4() throws RecognitionException;
     void rule__TableColumnSeparator__CharAssignment() throws RecognitionException;
     void rule__Table__LinesAssignment_0() throws RecognitionException;
     void rule__Table__LinesAssignment_2_0() throws RecognitionException;
     void rule__Table__LinesAssignment_3_0() throws RecognitionException;
     void rule__Table__LinesAssignment_3_2_0() throws RecognitionException;
     void rule__Table__LinesAssignment_4() throws RecognitionException;
     void rule__LineSentenceChain__SentencesAssignment_1() throws RecognitionException;
     void rule__LineSentenceChain__SeparatorsAssignment_2_0() throws RecognitionException;
     void rule__LineSentenceChain__SentencesAssignment_2_1() throws RecognitionException;
     void rule__LineSentenceChain__EndpointAssignment_3() throws RecognitionException;
     void rule__SentenceChain__SentencesAssignment_1() throws RecognitionException;
     void rule__SentenceChain__SeparatorsAssignment_2_0() throws RecognitionException;
     void rule__SentenceChain__SentencesAssignment_2_1() throws RecognitionException;
     void rule__SentenceChain__EndpointAssignment_3_0() throws RecognitionException;
     void rule__SentenceChain__EndpointAssignment_3_1() throws RecognitionException;
     void rule__SentenceChainX__SentencesAssignment_1() throws RecognitionException;
     void rule__SentenceChainX__SeparatorsAssignment_2_0() throws RecognitionException;
     void rule__SentenceChainX__SentencesAssignment_2_1() throws RecognitionException;
     void rule__SentenceChainX__EndpointAssignment_3_0_0() throws RecognitionException;
     void rule__SentenceChainX__EndpointAssignment_3_0_1() throws RecognitionException;
     void rule__SentenceChainX__EndpointAssignment_3_0_2() throws RecognitionException;
     void rule__Sentence__SubsentenceAssignment_1() throws RecognitionException;
     void rule__Sentence__SubsentenceAssignment_2_1() throws RecognitionException;
     void rule__LineSentence__SubsentenceAssignment_1() throws RecognitionException;
     void rule__LineSentence__SubsentenceAssignment_2_1() throws RecognitionException;
     void rule__FreeSentence__SubsentenceAssignment_1() throws RecognitionException;
     void rule__FreeSentence__SubsentenceAssignment_2_1() throws RecognitionException;
     void rule__SentenceX__SubsentenceAssignment_1() throws RecognitionException;
     void rule__SentenceX__SubsentenceAssignment_2_1() throws RecognitionException;
     void rule__ListSentence__ListpointAssignment_0() throws RecognitionException;
     void rule__ListSentence__SentenceChainAssignment_1_0() throws RecognitionException;
     void rule__ChapterSentence__ChapterNumberAssignment_0_0() throws RecognitionException;
     void rule__ChapterSentence__ChapterNumberAssignment_0_1() throws RecognitionException;
     void rule__ChapterSentence__ChapterNumberAssignment_0_2() throws RecognitionException;
     void rule__ChapterSentence__HeadlineAssignment_1() throws RecognitionException;
     void rule__SubSentence__ElementsAssignment_1_0_0() throws RecognitionException;
     void rule__SubSentence__ElementsAssignment_1_0_1_1() throws RecognitionException;
     void rule__SubSentence__ElementsAssignment_1_1_0() throws RecognitionException;
     void rule__SubSentence__ElementsAssignment_1_1_1_1() throws RecognitionException;
     void rule__SubSentence__ElementsAssignment_2_1() throws RecognitionException;
     void rule__SubSentence__ElementsAssignment_2_3() throws RecognitionException;
     void rule__SubSentence__ElementsAssignment_2_4_1() throws RecognitionException;
     void rule__TrailSubSentence__ElementsAssignment_1_0() throws RecognitionException;
     void rule__TrailSubSentence__ElementsAssignment_1_1_1() throws RecognitionException;
     void rule__TrailSubSentence__ElementsAssignment_1_2_1() throws RecognitionException;
     void rule__TrailSubSentence__ElementsAssignment_1_2_3() throws RecognitionException;
     void rule__TrailSubSentence__ElementsAssignment_1_2_4_1() throws RecognitionException;
     void rule__FreeSubSentence__ElementsAssignment_1_1() throws RecognitionException;
     void rule__FreeSubSentence__ElementsAssignment_2() throws RecognitionException;
     void rule__FreeSubSentence__ElementsAssignment_3_0_1() throws RecognitionException;
     void rule__FreeSubSentence__ElementsAssignment_3_1() throws RecognitionException;
     void rule__FreeSubSentence__ElementsAssignment_4_1() throws RecognitionException;
     void rule__LineSubSentence__ElementsAssignment_1() throws RecognitionException;
     void rule__LineSubSentence__ElementsAssignment_2_1() throws RecognitionException;
     void rule__BracketSentence__OpenAssignment_1() throws RecognitionException;
     void rule__BracketSentence__BrackedSentencesAssignment_2_0() throws RecognitionException;
     void rule__BracketSentence__SeparatorAssignment_2_1_0() throws RecognitionException;
     void rule__BracketSentence__BrackedSentencesAssignment_2_1_1() throws RecognitionException;
     void rule__BracketSentence__SeparatorAssignment_3() throws RecognitionException;
     void rule__BracketSentence__CloseAssignment_6() throws RecognitionException;
     void rule__ExtBracketSentence__OpenAssignment_1() throws RecognitionException;
     void rule__ExtBracketSentence__BrackedSentencesAssignment_2_0() throws RecognitionException;
     void rule__ExtBracketSentence__SeparatorAssignment_2_1_0() throws RecognitionException;
     void rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1() throws RecognitionException;
     void rule__ExtBracketSentence__SeparatorAssignment_3() throws RecognitionException;
     void rule__ExtBracketSentence__CloseAssignment_5() throws RecognitionException;
     void rule__ExtBracketSentenceC__OpenAssignment_1() throws RecognitionException;
     void rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0() throws RecognitionException;
     void rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0() throws RecognitionException;
     void rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1() throws RecognitionException;
     void rule__ExtBracketSentenceC__SeparatorAssignment_3() throws RecognitionException;
     void rule__ExtBracketSentenceC__CloseAssignment_5() throws RecognitionException;
     void rule__Word__WordAssignment_0_0() throws RecognitionException;
     void rule__Word__WordAssignment_0_1_0_0() throws RecognitionException;
     void rule__Word__WordAssignment_0_1_1_0() throws RecognitionException;
     void rule__Word__WordAssignment_0_1_1_1() throws RecognitionException;
     void rule__Word__WordAssignment_1() throws RecognitionException;
     void rule__WordShort__WordAssignment_1() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_0_0_0_0() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_0_0_0_1() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_0_0_0_2() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_0_0_0_3() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_0_0_1_0() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_0_0_1_1() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_0_1_0() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_0_1_1() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_0_1_2_0() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_0_1_2_1() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_1_0() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_0_1_1() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_1_0_0() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_1_0_1() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_1_1_0_0() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_1_1_0_1() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_1_1_1_0() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_1_1_1_1() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_1_2_0() throws RecognitionException;
     void rule__ItWord__WordAssignment_0_1_2_1() throws RecognitionException;
     void rule__ItWord__WordAssignment_1() throws RecognitionException;
     void rule__Quote__QuoteAssignment() throws RecognitionException;
     void rule__Unit__SignatureAssignment_0() throws RecognitionException;
     void rule__Unit__ValueAssignment_1() throws RecognitionException;
     void rule__Unit__UnitAssignment_2_0() throws RecognitionException;
     void rule__Unit__UnitAssignment_2_1() throws RecognitionException;
     void rule__Unit__UnitAssignment_2_2() throws RecognitionException;
     void rule__SimpleUnit__ValueAssignment_0_1() throws RecognitionException;
     void rule__SimpleUnit__ValueAssignment_1() throws RecognitionException;
     void rule__SimpleUnit__ValueAssignment_2() throws RecognitionException;
     void rule__Chapter_Unit_HI__ValueAssignment_1() throws RecognitionException;
     void rule__Chapter_Unit_Low__ValueAssignment_1() throws RecognitionException;
     void rule__HashNumber__SignAssignment_1() throws RecognitionException;
     void rule__HashNumber__ValueAssignment_2() throws RecognitionException;
     void rule__ChapterAlpha__ValueAssignment_1_0() throws RecognitionException;
     void rule__ChapterAlpha__ValueAssignment_1_1() throws RecognitionException;
     void rule__ChapterAlpha__ValueAssignment_2() throws RecognitionException;
     void rule__ChapterAlpha__ValueAssignment_3() throws RecognitionException;
     void rule__ChapterAlpha__ValueAssignment_4_0_0() throws RecognitionException;
     void rule__ChapterAlpha__ValueAssignment_4_0_1() throws RecognitionException;
     void rule__ChapterAlpha__ValueAssignment_4_1() throws RecognitionException;
     void rule__SymbolsX__SymbolAssignment_1() throws RecognitionException;
     void rule__Symbols__SymbolAssignment_1() throws RecognitionException;
     void rule__ShortcutGen__WordAssignment_1_0() throws RecognitionException;
     void rule__ShortcutGen__WordAssignment_1_1() throws RecognitionException;
     void rule__ShortcutGen__WordAssignment_2_0() throws RecognitionException;
     void rule__ShortcutGen__WordAssignment_2_1_0() throws RecognitionException;
     void rule__ShortcutGen__WordAssignment_2_1_1() throws RecognitionException;
     void rule__ShortcutGen__WordAssignment_3() throws RecognitionException;
     void rule__ShortcutLib__ShortcutAssignment_1() throws RecognitionException;
     void rule__ShortCut__ShortcutAssignment_0() throws RecognitionException;
     void rule__ShortCut__ShortcutAssignment_1() throws RecognitionException;
     void rule__IgnoredText__IgnoredAssignment() throws RecognitionException;
     void rule__UrlAdress__ProtocolAssignment_0() throws RecognitionException;
     void rule__UrlAdress__UrlAssignment_1() throws RecognitionException;
     void rule__UrlAdress__UrlAssignment_2_0() throws RecognitionException;
     void rule__UrlAdress__UrlAssignment_2_1_0() throws RecognitionException;
     void rule__UrlAdress__UrlAssignment_2_1_1() throws RecognitionException;
     void rule__UrlAdress__UrlAssignment_2_1_2() throws RecognitionException;
     void rule__UrlAdress__UrlAssignment_3() throws RecognitionException;
     void rule__EmailAT__EmailAssignment() throws RecognitionException;
     void rule__MailAdress__EmailAssignment_0_0() throws RecognitionException;
     void rule__MailAdress__EmailAssignment_0_1() throws RecognitionException;
     void rule__MailAdress__EmailAssignment_1() throws RecognitionException;
     void rule__MailAdress__EmailAssignment_2() throws RecognitionException;
     void rule__Formula__NameAssignment_0() throws RecognitionException;
     void rule__Formula__NameAssignment_1_0() throws RecognitionException;
     void rule__Formula__NameAssignment_1_1() throws RecognitionException;
     void rule__Formula__ParametersAssignment_2() throws RecognitionException;
     void rule__Formula__NameAssignment_3_1_0() throws RecognitionException;
     void rule__Formula__NameAssignment_3_1_1() throws RecognitionException;
     void rule__Formula__ParametersAssignment_3_2() throws RecognitionException;
     void rule__Array__NameAssignment_0_0() throws RecognitionException;
     void rule__Array__NameAssignment_0_1() throws RecognitionException;
     void rule__Array__ParametersAssignment_1() throws RecognitionException;
     void rule__New_Line__NlAssignment_1() throws RecognitionException;
     void synpred4_InternalNLX_fragment() throws RecognitionException;   
     void synpred5_InternalNLX_fragment() throws RecognitionException;   
     void synpred6_InternalNLX_fragment() throws RecognitionException;   
     void synpred8_InternalNLX_fragment() throws RecognitionException;   
     void synpred9_InternalNLX_fragment() throws RecognitionException;   
     void synpred10_InternalNLX_fragment() throws RecognitionException;   
     void synpred16_InternalNLX_fragment() throws RecognitionException;   
     void synpred18_InternalNLX_fragment() throws RecognitionException;   
     void synpred33_InternalNLX_fragment() throws RecognitionException;   
     void synpred34_InternalNLX_fragment() throws RecognitionException;   
     void synpred42_InternalNLX_fragment() throws RecognitionException;   
     void synpred43_InternalNLX_fragment() throws RecognitionException;   
     void synpred44_InternalNLX_fragment() throws RecognitionException;   
     void synpred62_InternalNLX_fragment() throws RecognitionException;   
     void synpred68_InternalNLX_fragment() throws RecognitionException;   
     void synpred72_InternalNLX_fragment() throws RecognitionException;   
     void synpred80_InternalNLX_fragment() throws RecognitionException;   
     void synpred81_InternalNLX_fragment() throws RecognitionException;   
     void synpred82_InternalNLX_fragment() throws RecognitionException;   
     void synpred83_InternalNLX_fragment() throws RecognitionException;   
     void synpred84_InternalNLX_fragment() throws RecognitionException;   
     void synpred85_InternalNLX_fragment() throws RecognitionException;   
     void synpred121_InternalNLX_fragment() throws RecognitionException;   
     void synpred122_InternalNLX_fragment() throws RecognitionException;   
     void synpred138_InternalNLX_fragment() throws RecognitionException;   
     void synpred141_InternalNLX_fragment() throws RecognitionException;   
     void synpred142_InternalNLX_fragment() throws RecognitionException;   
     void synpred151_InternalNLX_fragment() throws RecognitionException;   
     void synpred155_InternalNLX_fragment() throws RecognitionException;   
     void synpred156_InternalNLX_fragment() throws RecognitionException;   
     void synpred157_InternalNLX_fragment() throws RecognitionException;   
     void synpred158_InternalNLX_fragment() throws RecognitionException;   
     void synpred161_InternalNLX_fragment() throws RecognitionException;   
     void synpred163_InternalNLX_fragment() throws RecognitionException;   
     void synpred165_InternalNLX_fragment() throws RecognitionException;   
     void synpred176_InternalNLX_fragment() throws RecognitionException;   
     void synpred177_InternalNLX_fragment() throws RecognitionException;   
     void synpred194_InternalNLX_fragment() throws RecognitionException;   
     void synpred196_InternalNLX_fragment() throws RecognitionException;   
}

@SuppressWarnings("all")
abstract class InternalNLXParser1 extends AbstractInternalContentAssistParser implements InternalNLXParserSignatures {

        InternalNLXParser1(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalNLXParser1(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_HASH", "RULE_INT", "RULE_NEWLINE", "RULE_END", "RULE_SPACE", "RULE_MULTI", "RULE_DASH", "RULE_MINUS", "RULE_FULL_STOP_IM", "RULE_DOT", "RULE_FS", "RULE_FULL_STOP_NL", "RULE_ID", "RULE_ID_C", "RULE_ALL_ALPHA", "RULE_ALPHA", "RULE_IT_ID", "RULE_DOUBLE_DOT", "RULE_ID_ALL", "RULE_HEX_NUMBER", "RULE_CURL", "RULE_SLASH", "RULE_SEPARATORS", "RULE_SEPARATORS_IT", "RULE_COLON", "RULE_PARAGR", "RULE_PERCENT", "RULE_OPERATORS", "RULE_ARROW", "RULE_SMILEY", "RULE_TRIPLE_DOT", "RULE_BR_CL", "RULE_KOMMA", "RULE_KM", "RULE_TABLE_LINE", "RULE_HORIZ_SEP", "RULE_BR_O", "RULE_EXBR_O", "RULE_EXBR_CL", "RULE_EXBRC_O", "RULE_EXBRC_CL", "RULE_CURRENCY", "RULE_STRING", "RULE_SHORTCUTS", "RULE_IGNORED", "RULE_URL_PROTOCOL", "RULE_AT", "RULE_INTERJ", "RULE_AND", "RULE_EXP", "RULE_PLUS", "RULE_EQUAL", "RULE_GT", "RULE_SM", "RULE_WS", "RULE_ALPHA_CAPITAL", "RULE_ALPHA_NUMERIC", "RULE_BACKSLASH", "RULE_UNDERSCORE", "RULE_ALPHA_NUMERIC_C", "RULE_DECORATIONS", "RULE_ANY_OTHER"
    };
    public static final int RULE_EXP=53;
    public static final int RULE_SMILEY=33;
    public static final int RULE_EXBR_CL=42;
    public static final int RULE_TABLE_LINE=38;
    public static final int RULE_GT=56;
    public static final int RULE_IGNORED=48;
    public static final int RULE_TRIPLE_DOT=34;
    public static final int RULE_CURRENCY=45;
    public static final int RULE_ID_ALL=22;
    public static final int RULE_UNDERSCORE=62;
    public static final int RULE_SPACE=8;
    public static final int RULE_PERCENT=30;
    public static final int RULE_ARROW=32;
    public static final int RULE_SEPARATORS=26;
    public static final int RULE_KM=37;
    public static final int RULE_SHORTCUTS=47;
    public static final int RULE_BR_O=40;
    public static final int RULE_BACKSLASH=61;
    public static final int RULE_ID=16;
    public static final int RULE_DOUBLE_DOT=21;
    public static final int RULE_EQUAL=55;
    public static final int RULE_ID_C=17;
    public static final int RULE_EXBRC_CL=44;
    public static final int RULE_COLON=28;
    public static final int RULE_INTERJ=51;
    public static final int RULE_SLASH=25;
    public static final int RULE_CURL=24;
    public static final int RULE_SEPARATORS_IT=27;
    public static final int RULE_MULTI=9;
    public static final int RULE_KOMMA=36;
    public static final int RULE_INT=5;
    public static final int RULE_FULL_STOP_IM=12;
    public static final int RULE_PARAGR=29;
    public static final int RULE_EXBR_O=41;
    public static final int RULE_BR_CL=35;
    public static final int RULE_FULL_STOP_NL=15;
    public static final int RULE_ALPHA=19;
    public static final int RULE_ALPHA_NUMERIC_C=63;
    public static final int RULE_END=7;
    public static final int RULE_IT_ID=20;
    public static final int RULE_HORIZ_SEP=39;
    public static final int RULE_NEWLINE=6;
    public static final int RULE_STRING=46;
    public static final int RULE_EXBRC_O=43;
    public static final int RULE_OPERATORS=31;
    public static final int RULE_AT=50;
    public static final int RULE_AND=52;
    public static final int RULE_HASH=4;
    public static final int RULE_DASH=10;
    public static final int RULE_PLUS=54;
    public static final int RULE_DOT=13;
    public static final int EOF=-1;
    public static final int RULE_HEX_NUMBER=23;
    public static final int RULE_WS=58;
    public static final int RULE_DECORATIONS=64;
    public static final int RULE_SM=57;
    public static final int RULE_ALL_ALPHA=18;
    public static final int RULE_ALPHA_NUMERIC=60;
    public static final int RULE_URL_PROTOCOL=49;
    public static final int RULE_FS=14;
    public static final int RULE_ANY_OTHER=65;
    public static final int RULE_ALPHA_CAPITAL=59;
    public static final int RULE_MINUS=11;


    public String[] getTokenNames() { return InternalNLXParser.tokenNames; }
    public String getGrammarFileName() { return "InternalNLX.g"; }


    	protected NLXGrammarAccess grammarAccess;

    	public void setGrammarAccess(NLXGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}




    // Delegated rules

    public final boolean synpred81_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred196_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred196_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred177_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred176_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred176_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalNLX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalNLX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA4 dfa4 = new DFA4(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA13 dfa13 = new DFA13(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA104 dfa104 = new DFA104(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA121 dfa121 = new DFA121(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA137 dfa137 = new DFA137(this);
    protected DFA138 dfa138 = new DFA138(this);
    static final String dfa_1s = "\41\uffff";
    static final String dfa_2s = "\1\4\3\0\35\uffff";
    static final String dfa_3s = "\1\62\3\0\35\uffff";
    static final String dfa_4s = "\4\uffff\1\2\32\uffff\1\3\1\1";
    static final String dfa_5s = "\1\uffff\1\0\1\1\1\2\35\uffff}>";
    static final String[] dfa_6s = {
            "\1\4\1\1\3\uffff\3\4\1\uffff\1\4\2\uffff\1\4\1\2\1\3\3\4\2\uffff\2\4\1\uffff\3\4\1\uffff\4\4\3\uffff\1\37\1\uffff\2\4\1\uffff\1\4\1\uffff\6\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2298:1: rule__SentenceType__Alternatives_1 : ( ( ( ruleChapterSentence ) ) | ( ruleParagraphBlock ) | ( ruleTable ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalNLX()) ) {s = 32;}

                        else if ( (synpred5_InternalNLX()) ) {s = 4;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_2 = input.LA(1);

                         
                        int index4_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalNLX()) ) {s = 32;}

                        else if ( (synpred5_InternalNLX()) ) {s = 4;}

                         
                        input.seek(index4_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA4_3 = input.LA(1);

                         
                        int index4_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalNLX()) ) {s = 32;}

                        else if ( (synpred5_InternalNLX()) ) {s = 4;}

                         
                        input.seek(index4_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\1\4\7\uffff\1\0\5\uffff\1\0\7\uffff\1\0\5\uffff\1\0\4\uffff";
    static final String dfa_8s = "\1\62\7\uffff\1\0\5\uffff\1\0\7\uffff\1\0\5\uffff\1\0\4\uffff";
    static final String dfa_9s = "\1\uffff\1\1\33\uffff\1\4\1\uffff\1\2\1\3";
    static final String dfa_10s = "\10\uffff\1\0\5\uffff\1\1\7\uffff\1\2\5\uffff\1\3\4\uffff}>";
    static final String[] dfa_11s = {
            "\1\1\1\34\3\uffff\1\26\2\35\1\uffff\1\1\2\uffff\3\1\1\10\2\1\2\uffff\2\1\1\uffff\3\1\1\uffff\4\1\5\uffff\2\1\1\uffff\1\1\1\uffff\3\1\1\16\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_7 = DFA.unpackEncodedStringToUnsignedChars(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[][] dfa_11 = unpackEncodedStringArray(dfa_11s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_7;
            this.max = dfa_8;
            this.accept = dfa_9;
            this.special = dfa_10;
            this.transition = dfa_11;
        }
        public String getDescription() {
            return "2353:1: rule__BlockElement__Alternatives : ( ( ruleSentenceChain ) | ( ruleIgnoredText ) | ( ruleFootNote ) | ( ( ruleListSentence ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_8 = input.LA(1);

                         
                        int index7_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index7_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_14 = input.LA(1);

                         
                        int index7_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalNLX()) ) {s = 1;}

                        else if ( (synpred9_InternalNLX()) ) {s = 31;}

                         
                        input.seek(index7_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA7_22 = input.LA(1);

                         
                        int index7_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index7_22);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA7_28 = input.LA(1);

                         
                        int index7_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalNLX()) ) {s = 32;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index7_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_12s = "\36\uffff";
    static final String dfa_13s = "\1\4\33\0\2\uffff";
    static final String dfa_14s = "\1\62\33\0\2\uffff";
    static final String dfa_15s = "\34\uffff\1\1\1\2";
    static final String dfa_16s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\2\uffff}>";
    static final String[] dfa_17s = {
            "\1\20\4\uffff\1\26\3\uffff\1\23\2\uffff\1\5\1\6\1\7\1\10\1\30\1\31\2\uffff\1\32\1\11\1\uffff\1\24\1\25\1\21\1\uffff\1\12\1\13\1\14\1\15\5\uffff\1\2\1\3\1\uffff\1\4\1\uffff\1\27\1\1\1\17\1\16\1\22\1\33",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final char[] dfa_13 = DFA.unpackEncodedStringToUnsignedChars(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[][] dfa_17 = unpackEncodedStringArray(dfa_17s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_12;
            this.eof = dfa_12;
            this.min = dfa_13;
            this.max = dfa_14;
            this.accept = dfa_15;
            this.special = dfa_16;
            this.transition = dfa_17;
        }
        public String getDescription() {
            return "2503:1: rule__SubSentence__Alternatives_1 : ( ( ( rule__SubSentence__Group_1_0__0 ) ) | ( ( rule__SubSentence__Group_1_1__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA13_1 = input.LA(1);

                         
                        int index13_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA13_2 = input.LA(1);

                         
                        int index13_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA13_3 = input.LA(1);

                         
                        int index13_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA13_4 = input.LA(1);

                         
                        int index13_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA13_5 = input.LA(1);

                         
                        int index13_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA13_6 = input.LA(1);

                         
                        int index13_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA13_7 = input.LA(1);

                         
                        int index13_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA13_8 = input.LA(1);

                         
                        int index13_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA13_9 = input.LA(1);

                         
                        int index13_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA13_10 = input.LA(1);

                         
                        int index13_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA13_11 = input.LA(1);

                         
                        int index13_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA13_12 = input.LA(1);

                         
                        int index13_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA13_13 = input.LA(1);

                         
                        int index13_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA13_14 = input.LA(1);

                         
                        int index13_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA13_15 = input.LA(1);

                         
                        int index13_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA13_16 = input.LA(1);

                         
                        int index13_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA13_17 = input.LA(1);

                         
                        int index13_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA13_18 = input.LA(1);

                         
                        int index13_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA13_19 = input.LA(1);

                         
                        int index13_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA13_20 = input.LA(1);

                         
                        int index13_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA13_21 = input.LA(1);

                         
                        int index13_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA13_22 = input.LA(1);

                         
                        int index13_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA13_23 = input.LA(1);

                         
                        int index13_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA13_24 = input.LA(1);

                         
                        int index13_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA13_25 = input.LA(1);

                         
                        int index13_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA13_26 = input.LA(1);

                         
                        int index13_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA13_27 = input.LA(1);

                         
                        int index13_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalNLX()) ) {s = 28;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index13_27);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 13, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_18s = "\u01a4\uffff";
    static final String dfa_19s = "\3\uffff\3\40\14\uffff\3\105\5\uffff\4\40\3\uffff\1\105\6\uffff\4\105\1\uffff\6\105\3\uffff\2\105\5\uffff\7\105\5\uffff\13\105\7\uffff\5\105\4\40\11\105\1\uffff\14\105\22\uffff\60\105\4\40\32\105\1\uffff\3\105\25\uffff\43\105\4\40\25\105\40\uffff\46\105\30\uffff\21\105\3\uffff\3\105";
    static final String dfa_20s = "\1\4\2\uffff\3\6\1\11\3\uffff\1\5\2\uffff\5\5\3\6\1\uffff\1\12\7\5\3\uffff\43\5\1\12\1\uffff\25\5\11\6\130\5\4\6\126\5\4\6\u008a\5";
    static final String dfa_21s = "\1\62\2\uffff\3\62\1\34\3\uffff\1\30\2\uffff\4\34\1\30\3\62\1\uffff\1\34\1\54\2\34\4\62\3\uffff\1\62\1\54\5\34\13\62\3\34\2\62\5\34\7\62\1\34\1\uffff\3\34\13\62\4\34\1\54\2\34\22\62\1\34\u0136\62";
    static final String dfa_22s = "\1\uffff\1\1\1\2\4\uffff\1\4\1\5\1\6\1\uffff\1\7\1\10\10\uffff\1\12\10\uffff\1\13\1\11\1\3\44\uffff\1\14\u015e\uffff";
    static final String dfa_23s = "\54\uffff\1\1\u00ad\uffff\1\0\u00c9\uffff}>";
    static final String[] dfa_24s = {
            "\1\12\4\uffff\1\20\3\uffff\1\15\2\uffff\1\3\1\4\1\5\1\6\1\22\1\23\2\uffff\1\24\1\7\1\uffff\1\16\1\17\1\13\1\uffff\4\7\5\uffff\2\2\1\uffff\1\2\1\uffff\1\21\1\1\1\11\1\10\1\14\1\25",
            "",
            "",
            "\3\40\1\26\1\34\1\35\1\40\1\27\2\40\11\uffff\1\32\1\33\1\30\1\31\6\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\3\40\1\26\1\34\1\35\1\40\1\27\2\40\11\uffff\1\32\1\33\1\30\1\31\6\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\3\40\1\26\1\34\1\35\1\40\1\42\2\40\11\uffff\1\32\1\33\1\30\1\41\6\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\1\26\1\45\1\46\1\uffff\1\47\13\uffff\1\43\1\44\1\30\1\31",
            "",
            "",
            "",
            "\1\54\3\uffff\1\61\6\uffff\1\57\1\60\1\50\1\51\1\52\1\53\1\56\1\55\1\62",
            "",
            "",
            "\1\66\3\uffff\1\61\3\uffff\1\63\2\uffff\1\57\1\60\1\50\1\51\1\52\1\53\1\56\1\55\1\62\2\uffff\1\64\1\65",
            "\1\66\3\uffff\1\61\3\uffff\1\63\2\uffff\1\57\1\60\1\50\1\51\1\52\1\53\1\56\1\55\1\62\2\uffff\1\64\1\65",
            "\1\66\3\uffff\1\61\3\uffff\1\63\2\uffff\1\57\1\60\1\50\1\51\1\52\1\53\1\56\1\55\1\62\2\uffff\1\64\1\65",
            "\1\66\3\uffff\1\67\1\73\1\74\1\uffff\1\70\2\uffff\1\57\1\60\1\50\1\51\1\52\1\53\1\56\1\55\1\62\1\71\1\72\1\30\1\31",
            "\1\66\3\uffff\1\61\6\uffff\1\57\1\60\1\50\1\51\1\52\1\53\1\56\1\55\1\62",
            "\3\105\1\104\1\102\1\103\1\105\1\75\2\105\11\uffff\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\3\105\1\104\1\102\1\103\1\105\1\75\2\105\11\uffff\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\3\105\1\uffff\1\102\1\103\1\105\1\75\2\105\11\uffff\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "",
            "\1\73\1\74\1\uffff\1\70\13\uffff\1\71\1\72\1\30\1\31",
            "\1\115\1\40\1\uffff\1\40\1\122\1\126\1\127\1\uffff\1\106\2\uffff\1\120\1\121\1\111\1\112\1\113\1\114\1\117\1\116\1\123\1\124\1\125\1\107\1\110\6\uffff\1\40\6\uffff\1\40\1\uffff\1\40",
            "\1\115\3\uffff\1\122\1\126\1\127\1\uffff\1\106\2\uffff\1\120\1\121\1\111\1\112\1\113\1\114\1\117\1\116\1\123\1\124\1\125\1\107\1\110",
            "\1\115\3\uffff\1\122\1\126\1\127\1\uffff\1\106\2\uffff\1\120\1\121\1\111\1\112\1\113\1\114\1\117\1\116\1\123\1\124\1\125\1\107\1\110",
            "\1\135\3\40\1\uffff\1\126\1\127\1\40\1\130\2\40\1\140\1\141\1\142\1\143\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132\6\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\1\135\3\40\1\uffff\1\126\1\127\1\40\1\130\2\40\1\140\1\141\1\142\1\143\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132\6\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\1\135\3\40\1\uffff\1\126\1\127\1\40\1\130\2\40\1\140\1\141\1\142\1\143\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132\6\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\1\135\3\40\1\uffff\1\126\1\127\1\40\1\130\2\40\1\140\1\141\1\142\1\143\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132\6\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "",
            "",
            "",
            "\1\115\3\105\1\122\1\151\1\152\1\105\1\144\2\105\1\120\1\121\1\111\1\112\1\113\1\114\1\117\1\116\1\123\1\147\1\150\1\145\1\146\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\115\1\40\1\uffff\1\40\1\122\1\126\1\127\1\uffff\1\106\2\uffff\1\120\1\121\1\153\1\154\1\113\1\114\1\117\1\116\1\123\1\124\1\125\1\107\1\110\6\uffff\1\40\6\uffff\1\40\1\uffff\1\40",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\2\uffff\1\140\1\141\1\142\1\143\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\2\uffff\1\140\1\141\1\142\1\143\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\2\uffff\1\140\1\141\1\142\1\143\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\2\uffff\1\140\1\141\1\142\1\143\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\115\3\uffff\1\122\1\126\1\127\1\uffff\1\106\2\uffff\1\120\1\121\1\153\1\154\1\113\1\114\1\117\1\116\1\123\1\124\1\125\1\107\1\110",
            "\1\162\3\105\1\167\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\167\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\171\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\171\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\177\3\uffff\1\u0084\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\162\3\105\1\u008c\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u008c\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\167\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\167\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u008d\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u008c\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\66\3\uffff\1\61\3\uffff\1\63\2\uffff\1\57\1\60\1\50\1\51\1\52\1\53\1\56\1\55\1\62\2\uffff\1\64\1\65",
            "\1\66\3\uffff\1\61\3\uffff\1\63\2\uffff\1\57\1\60\1\50\1\51\1\52\1\53\1\56\1\55\1\62\2\uffff\1\64\1\65",
            "\1\66\3\uffff\1\61\3\uffff\1\63\2\uffff\1\57\1\60\1\50\1\51\1\52\1\53\1\56\1\55\1\62\2\uffff\1\64\1\65",
            "\1\162\3\105\1\u008c\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u008d\1\u0093\1\u0094\1\105\1\u008e\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\u0091\1\u0092\1\u008f\1\u0090\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\115\3\uffff\1\122\1\126\1\127\1\uffff\1\106\2\uffff\1\120\1\121\1\111\1\112\1\113\1\114\1\117\1\116\1\123\1\124\1\125\1\107\1\110",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\73\1\74\1\uffff\1\70\13\uffff\1\71\1\72\1\30\1\31",
            "",
            "\1\115\3\uffff\1\122\1\126\1\127\1\uffff\1\106\2\uffff\1\120\1\121\1\111\1\112\1\113\1\114\1\117\1\116\1\123\1\124\1\125\1\107\1\110",
            "\1\115\3\uffff\1\122\1\126\1\127\1\uffff\1\106\2\uffff\1\120\1\121\1\111\1\112\1\113\1\114\1\117\1\116\1\123\1\124\1\125\1\107\1\110",
            "\1\115\3\uffff\1\122\1\126\1\127\1\uffff\1\106\2\uffff\1\120\1\121\1\111\1\112\1\113\1\114\1\117\1\116\1\123\1\124\1\125\1\107\1\110",
            "\1\u00ab\3\105\1\u00b0\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00b0\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00b9\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00b9\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00ba\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00ba\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00ba\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00b0\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00b0\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00bb\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00ba\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\135\1\40\1\uffff\1\40\1\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132\6\uffff\1\40\6\uffff\1\40\1\uffff\1\40",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\3\105\1\uffff\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\11\uffff\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\3\105\1\uffff\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\11\uffff\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\3\105\1\uffff\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\11\uffff\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\3\105\1\uffff\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\11\uffff\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\3\105\1\uffff\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\11\uffff\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\3\40\1\uffff\1\u00be\1\u00bf\4\40\11\uffff\1\u00bc\1\u00bd\10\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\3\40\1\uffff\1\u00be\1\u00bf\4\40\11\uffff\1\u00bc\1\u00bd\10\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\3\40\1\uffff\1\u00be\1\u00bf\4\40\11\uffff\1\u00bc\1\u00bd\10\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\3\40\1\uffff\1\u00be\1\u00bf\4\40\11\uffff\1\u00bc\1\u00bd\10\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\1\u00c4\3\105\1\u00c9\1\u00d0\1\u00d1\1\105\1\u00cb\2\105\1\u00c7\1\u00c8\1\u00c0\1\u00c1\1\u00c2\1\u00c3\1\u00c6\1\u00c5\1\u00ca\1\u00ce\1\u00cf\1\u00cc\1\u00cd\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00c4\3\105\1\u00c9\1\u00d0\1\u00d1\1\105\1\u00cb\2\105\1\u00c7\1\u00c8\1\u00c0\1\u00c1\1\u00c2\1\u00c3\1\u00c6\1\u00c5\1\u00ca\1\u00ce\1\u00cf\1\u00cc\1\u00cd\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00c4\3\105\1\u00c9\1\u00d0\1\u00d1\1\105\1\u00cb\2\105\1\u00c7\1\u00c8\1\u00c0\1\u00c1\1\u00c2\1\u00c3\1\u00c6\1\u00c5\1\u00ca\1\u00ce\1\u00cf\1\u00cc\1\u00cd\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00b0\1\u00b7\1\u00b8\1\105\1\u00da\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00b0\1\u00b7\1\u00b8\1\105\1\u00da\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\135\4\uffff\1\126\1\127\1\uffff\1\155\6\uffff\1\133\1\134\1\137\1\136\1\uffff\1\124\1\125\1\131\1\132",
            "\1\162\3\105\1\u00db\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u00db\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u00dc\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u00dc\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u008c\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u008c\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u008c\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u00db\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u00db\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u00dd\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u008c\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u00dd\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u00f0\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u00f0\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u00f1\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u00f1\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u0084\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u0084\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u0084\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u00f0\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u00f0\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u00f2\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u0084\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\162\3\105\1\u00dd\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u00dd\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00c4\3\105\1\u00c9\1\u00d0\1\u00d1\1\105\1\u00cb\2\105\1\u00c7\1\u00c8\1\u00c0\1\u00c1\1\u00c2\1\u00c3\1\u00c6\1\u00c5\1\u00ca\1\u00ce\1\u00cf\1\u00cc\1\u00cd\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00c4\3\105\1\u00c9\1\u00d0\1\u00d1\1\105\1\u00cb\2\105\1\u00c7\1\u00c8\1\u00c0\1\u00c1\1\u00c2\1\u00c3\1\u00c6\1\u00c5\1\u00ca\1\u00ce\1\u00cf\1\u00cc\1\u00cd\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00c4\3\105\1\u00c9\1\u00d0\1\u00d1\1\105\1\u00cb\2\105\1\u00c7\1\u00c8\1\u00c0\1\u00c1\1\u00c2\1\u00c3\1\u00c6\1\u00c5\1\u00ca\1\u00ce\1\u00cf\1\u00cc\1\u00cd\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00a0\3\105\1\u00a5\1\u009a\1\u009b\1\105\1\u0095\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a2\1\u00a1\1\u00a6\1\u0098\1\u0099\1\u0096\1\u0097\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00f3\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00f3\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00fe\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00fe\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00ff\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00ff\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00ff\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00f3\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00f3\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u0100\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00ff\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0101\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0101\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0102\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0102\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00ba\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00ba\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00ba\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0101\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0101\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0103\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u00ba\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0103\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0103\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0103\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\3\40\3\uffff\4\40\1\u0116\1\u0117\1\u0118\1\u0119\17\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\3\40\3\uffff\4\40\1\u0116\1\u0117\1\u0118\1\u0119\17\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\3\40\3\uffff\4\40\1\u0116\1\u0117\1\u0118\1\u0119\17\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\3\40\3\uffff\4\40\1\u0116\1\u0117\1\u0118\1\u0119\17\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\1\u011e\3\105\1\u0123\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0123\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u012c\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u012c\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u012d\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u012d\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u012d\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0123\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0123\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u012e\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u012d\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00c4\3\105\1\u00c9\1\u00d0\1\u00d1\1\105\1\u00cb\2\105\1\u00c7\1\u00c8\1\u00c0\1\u00c1\1\u00c2\1\u00c3\1\u00c6\1\u00c5\1\u00ca\1\u00ce\1\u00cf\1\u00cc\1\u00cd\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00c4\3\105\1\u00c9\1\u00d0\1\u00d1\1\105\1\u00cb\2\105\1\u00c7\1\u00c8\1\u00c0\1\u00c1\1\u00c2\1\u00c3\1\u00c6\1\u00c5\1\u00ca\1\u00ce\1\u00cf\1\u00cc\1\u00cd\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00c4\3\105\1\u00c9\1\u00d0\1\u00d1\1\105\1\u00cb\2\105\1\u00c7\1\u00c8\1\u00c0\1\u00c1\1\u00c2\1\u00c3\1\u00c6\1\u00c5\1\u00ca\1\u00ce\1\u00cf\1\u00cc\1\u00cd\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00d7\3\105\1\u00a5\1\u00d0\1\u00d1\1\105\1\u00d2\2\105\1\u00a3\1\u00a4\1\u009c\1\u009d\1\u00d5\1\u00d6\1\u00d9\1\u00d8\1\u00a6\1\u00ce\1\u00cf\1\u00d3\1\u00d4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00fe\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00fe\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00ff\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00ff\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00ff\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\162\3\105\1\u00dd\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u00dd\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\162\3\105\1\u00dd\1\102\1\103\1\105\1\75\2\105\1\165\1\166\1\156\1\157\1\160\1\161\1\164\1\163\1\170\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00e9\3\uffff\1\u00ee\1\u00e3\1\u00e4\1\uffff\1\u00de\2\uffff\1\u00ec\1\u00ed\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1\u00eb\1\u00ea\1\u00ef\1\u00e1\1\u00e2\1\u00df\1\u00e0\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u0141\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u0141\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u014c\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u014c\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u014d\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u014d\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u014d\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u0141\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u0141\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u014e\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u014d\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u00f2\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u00f2\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\177\3\uffff\1\u00f2\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0082\1\u0083\1\173\1\174\1\175\1\176\1\u0081\1\u0080\1\u0085\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00f8\3\105\1\u014f\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u0150\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u0150\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u0151\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u0151\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00ff\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00ff\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00ff\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u0150\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u0150\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u00ff\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u014f\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u014f\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u014f\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0103\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0103\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00ab\3\105\1\u0103\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u00ae\1\u00af\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\u00ad\1\u00ac\1\u00b1\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u010f\3\105\1\u0114\1\u0109\1\u010a\1\105\1\u0104\2\105\1\u0112\1\u0113\1\u010b\1\u010c\1\u010d\1\u010e\1\u0111\1\u0110\1\u0115\1\u0107\1\u0108\1\u0105\1\u0106\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u0152\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u0152\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u015d\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u015d\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u015e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u015e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u015e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u0152\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u0152\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u015f\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u015e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\3\40\1\uffff\1\u00be\1\u00bf\4\40\11\uffff\1\u00bc\1\u00bd\10\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\3\40\1\uffff\1\u00be\1\u00bf\4\40\11\uffff\1\u00bc\1\u00bd\10\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\3\40\1\uffff\1\u00be\1\u00bf\4\40\11\uffff\1\u00bc\1\u00bd\10\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\3\40\1\uffff\1\u00be\1\u00bf\4\40\11\uffff\1\u00bc\1\u00bd\10\uffff\2\40\1\uffff\2\40\1\25\1\36\1\40\1\uffff\1\40\5\uffff\1\37",
            "\1\u011e\3\105\1\u0160\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0160\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0161\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0161\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u012d\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u012d\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u012d\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0160\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0160\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0162\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u012d\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0162\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0162\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0162\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0175\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0175\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0187\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0187\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0188\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0188\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0188\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0175\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0175\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0189\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0188\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018a\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018b\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018b\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018c\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018c\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u014d\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u014d\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u014d\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018b\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018b\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u014d\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018a\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018a\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018a\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u00f8\3\105\1\u014f\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u014f\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u00f8\3\105\1\u014f\1\102\1\103\1\105\1\75\2\105\1\u00fb\1\u00fc\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1\u00fa\1\u00f9\1\u00fd\1\100\1\101\1\76\1\77\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018d\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018f\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018f\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u015e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u015e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u015e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u015e\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018d\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018d\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018d\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0162\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0162\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u011e\3\105\1\u0162\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0121\1\u0122\1\u011a\1\u011b\1\u011c\1\u011d\1\u0120\1\u011f\1\u0124\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u016e\3\105\1\u0173\1\u0168\1\u0169\1\105\1\u0163\2\105\1\u0171\1\u0172\1\u016a\1\u016b\1\u016c\1\u016d\1\u0170\1\u016f\1\u0174\1\u0166\1\u0167\1\u0164\1\u0165\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u0190\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u0190\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u019b\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u019b\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u019c\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u019c\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u019c\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u0190\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u0190\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u019d\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u019c\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u017a\3\uffff\1\u019e\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u019f\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u019f\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u01a0\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u01a0\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0188\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0188\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0188\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u019f\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u019f\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u0188\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u013a\3\uffff\1\u013f\1\u0134\1\u0135\1\uffff\1\u012f\2\uffff\1\u013d\1\u013e\1\u0136\1\u0137\1\u0138\1\u0139\1\u013c\1\u013b\1\u0140\1\u0132\1\u0133\1\u0130\1\u0131\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u019e\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u019e\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u019e\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018a\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018a\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0146\3\uffff\1\u018a\1\u008a\1\u008b\1\uffff\1\172\2\uffff\1\u0149\1\u014a\1\u0142\1\u0143\1\u0144\1\u0145\1\u0148\1\u0147\1\u014b\1\u0088\1\u0089\1\u0086\1\u0087\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0157\3\105\1\u018d\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018d\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0157\3\105\1\u018d\1\u00b7\1\u00b8\1\105\1\u00b2\2\105\1\u015a\1\u015b\1\u0153\1\u0154\1\u0155\1\u0156\1\u0159\1\u0158\1\u015c\1\u00b5\1\u00b6\1\u00b3\1\u00b4\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a1\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a2\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a2\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a3\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a3\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u019c\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u019c\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u019c\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a2\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a2\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u019c\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a1\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a1\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a1\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u017a\3\uffff\1\u019e\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u019e\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u017a\3\uffff\1\u019e\1\u0185\1\u0186\1\uffff\1\u0180\2\uffff\1\u017d\1\u017e\1\u0176\1\u0177\1\u0178\1\u0179\1\u017c\1\u017b\1\u017f\1\u0183\1\u0184\1\u0181\1\u0182\13\uffff\1\25\1\36\10\uffff\1\37",
            "\1\u0195\3\105\1\u01a1\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a1\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37",
            "\1\u0195\3\105\1\u01a1\1\u012a\1\u012b\1\105\1\u0125\2\105\1\u0198\1\u0199\1\u0191\1\u0192\1\u0193\1\u0194\1\u0197\1\u0196\1\u019a\1\u0128\1\u0129\1\u0126\1\u0127\6\uffff\2\105\1\uffff\2\105\1\25\1\36\1\105\1\uffff\1\105\5\uffff\1\37"
    };

    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_18;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "2683:1: rule__NoNElement__Alternatives : ( ( ruleQuote ) | ( ruleBrackets ) | ( ruleWord ) | ( ruleSymbolsX ) | ( ruleIgnoredText ) | ( ruleShortCut ) | ( ruleHashNumber ) | ( ruleUrlAdress ) | ( ruleMailAdress ) | ( ruleFormula ) | ( ruleArray ) | ( ruleItWord ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA21_218 = input.LA(1);

                         
                        int index21_218 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA21_218==RULE_DOT) ) {s = 303;}

                        else if ( (LA21_218==RULE_SEPARATORS_IT) ) {s = 304;}

                        else if ( (LA21_218==RULE_COLON) ) {s = 305;}

                        else if ( (LA21_218==RULE_SLASH) ) {s = 306;}

                        else if ( (LA21_218==RULE_SEPARATORS) ) {s = 307;}

                        else if ( (LA21_218==RULE_DASH) ) {s = 308;}

                        else if ( (LA21_218==RULE_MINUS) ) {s = 309;}

                        else if ( (LA21_218==RULE_ALL_ALPHA) ) {s = 310;}

                        else if ( (LA21_218==RULE_ALPHA) ) {s = 311;}

                        else if ( (LA21_218==RULE_IT_ID) ) {s = 312;}

                        else if ( (LA21_218==RULE_DOUBLE_DOT) ) {s = 313;}

                        else if ( (LA21_218==RULE_INT) ) {s = 314;}

                        else if ( (LA21_218==RULE_HEX_NUMBER) ) {s = 315;}

                        else if ( (LA21_218==RULE_ID_ALL) ) {s = 316;}

                        else if ( (LA21_218==RULE_ID) ) {s = 317;}

                        else if ( (LA21_218==RULE_ID_C) ) {s = 318;}

                        else if ( (LA21_218==RULE_MULTI) ) {s = 319;}

                        else if ( (LA21_218==RULE_CURL) ) {s = 320;}

                        else if ( (LA21_218==RULE_EXBR_O) ) {s = 30;}

                        else if ( (LA21_218==RULE_AT) ) {s = 31;}

                        else if ( (LA21_218==RULE_BR_O) ) {s = 21;}

                        else if ( (synpred33_InternalNLX()) ) {s = 9;}

                        else if ( (true) ) {s = 69;}

                         
                        input.seek(index21_218);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA21_44 = input.LA(1);

                         
                        int index21_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA21_44==RULE_DOT) ) {s = 122;}

                        else if ( (LA21_44==RULE_ALL_ALPHA) ) {s = 123;}

                        else if ( (LA21_44==RULE_ALPHA) ) {s = 124;}

                        else if ( (LA21_44==RULE_IT_ID) ) {s = 125;}

                        else if ( (LA21_44==RULE_DOUBLE_DOT) ) {s = 126;}

                        else if ( (LA21_44==RULE_INT) ) {s = 127;}

                        else if ( (LA21_44==RULE_HEX_NUMBER) ) {s = 128;}

                        else if ( (LA21_44==RULE_ID_ALL) ) {s = 129;}

                        else if ( (LA21_44==RULE_ID) ) {s = 130;}

                        else if ( (LA21_44==RULE_ID_C) ) {s = 131;}

                        else if ( (LA21_44==RULE_MULTI) ) {s = 132;}

                        else if ( (LA21_44==RULE_CURL) ) {s = 133;}

                        else if ( (LA21_44==RULE_SEPARATORS_IT) ) {s = 134;}

                        else if ( (LA21_44==RULE_COLON) ) {s = 135;}

                        else if ( (LA21_44==RULE_SLASH) ) {s = 136;}

                        else if ( (LA21_44==RULE_SEPARATORS) ) {s = 137;}

                        else if ( (LA21_44==RULE_DASH) ) {s = 138;}

                        else if ( (LA21_44==RULE_MINUS) ) {s = 139;}

                        else if ( (LA21_44==RULE_EXBR_O) ) {s = 30;}

                        else if ( (LA21_44==RULE_AT) ) {s = 31;}

                        else if ( (LA21_44==RULE_BR_O) ) {s = 21;}

                        else if ( (synpred34_InternalNLX()) ) {s = 11;}

                        else if ( (true) ) {s = 69;}

                         
                        input.seek(index21_44);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 21, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\40\uffff";
    static final String dfa_26s = "\1\uffff\1\3\3\uffff\2\4\4\uffff\12\4\1\uffff\7\4\1\uffff\2\4";
    static final String dfa_27s = "\1\4\1\6\3\uffff\2\6\3\5\1\0\12\5\1\0\7\5\1\uffff\2\5";
    static final String dfa_28s = "\1\62\1\55\3\uffff\2\62\3\54\1\0\12\62\1\0\7\62\1\uffff\2\62";
    static final String dfa_29s = "\2\uffff\1\1\1\2\1\3\30\uffff\1\4\2\uffff";
    static final String dfa_30s = "\12\uffff\1\1\12\uffff\1\0\12\uffff}>";
    static final String[] dfa_31s = {
            "\1\4\1\1\3\uffff\1\4\1\uffff\1\3\1\uffff\1\4\2\uffff\1\4\1\5\1\6\3\4\1\uffff\1\2\2\4\1\uffff\3\4\1\uffff\4\4\5\uffff\2\4\1\uffff\1\4\1\uffff\6\4",
            "\3\3\1\uffff\2\2\1\3\1\7\3\3\10\uffff\1\2\1\uffff\2\2\1\uffff\1\3\4\uffff\5\3\2\uffff\1\3\1\uffff\2\3",
            "",
            "",
            "",
            "\7\4\1\10\2\4\11\uffff\4\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\7\4\1\11\2\4\11\uffff\4\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\1\12\1\3\1\uffff\1\3\10\uffff\4\2\1\uffff\1\2\14\uffff\1\3\6\uffff\1\3\1\uffff\1\3",
            "\1\16\1\4\1\uffff\4\4\1\uffff\1\4\2\uffff\1\4\1\20\1\13\1\14\1\15\1\4\1\17\6\4\6\uffff\1\4\6\uffff\1\4\1\uffff\1\4",
            "\1\16\1\4\1\uffff\4\4\1\uffff\1\4\2\uffff\1\4\1\20\1\21\1\22\1\15\1\4\1\17\6\4\6\uffff\1\4\6\uffff\1\4\1\uffff\1\4",
            "\1\uffff",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\26\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\26\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\1\32\13\4\1\34\1\27\1\30\1\31\1\4\1\33\6\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\1\32\13\4\1\34\1\27\1\30\1\31\1\4\1\33\6\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\1\uffff",
            "\1\32\13\4\1\34\1\36\1\37\1\31\1\4\1\33\6\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\23\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "",
            "\3\4\1\25\2\4\1\24\1\4\1\26\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4",
            "\3\4\1\25\2\4\1\24\1\4\1\26\17\4\6\uffff\2\4\1\uffff\5\4\1\uffff\1\4\5\uffff\1\4"
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_25;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "2812:1: rule__NoNElementX2__Alternatives : ( ( ruleSimpleUnit ) | ( ruleUnit ) | ( ruleNoNElement ) | ( ruleChapterAlpha ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA24_21 = input.LA(1);

                         
                        int index24_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalNLX()) ) {s = 4;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index24_21);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA24_10 = input.LA(1);

                         
                        int index24_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalNLX()) ) {s = 2;}

                        else if ( (synpred43_InternalNLX()) ) {s = 3;}

                         
                        input.seek(index24_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 24, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\12\uffff";
    static final String dfa_33s = "\1\uffff\3\11\1\uffff\4\11\1\uffff";
    static final String dfa_34s = "\1\20\3\6\1\uffff\4\6\1\uffff";
    static final String dfa_35s = "\1\23\3\62\1\uffff\4\62\1\uffff";
    static final String dfa_36s = "\4\uffff\1\2\4\uffff\1\1";
    static final String dfa_37s = "\12\uffff}>";
    static final String[] dfa_38s = {
            "\1\1\1\2\1\3\1\4",
            "\3\11\1\uffff\1\7\1\10\4\11\11\uffff\1\5\1\6\10\uffff\2\11\1\uffff\5\11\1\uffff\1\11\5\uffff\1\11",
            "\3\11\1\uffff\1\7\1\10\4\11\11\uffff\1\5\1\6\10\uffff\2\11\1\uffff\5\11\1\uffff\1\11\5\uffff\1\11",
            "\3\11\1\uffff\1\7\1\10\4\11\11\uffff\1\5\1\6\10\uffff\2\11\1\uffff\5\11\1\uffff\1\11\5\uffff\1\11",
            "",
            "\3\11\3\uffff\4\11\4\4\17\uffff\2\11\1\uffff\5\11\1\uffff\1\11\5\uffff\1\11",
            "\3\11\3\uffff\4\11\4\4\17\uffff\2\11\1\uffff\5\11\1\uffff\1\11\5\uffff\1\11",
            "\3\11\3\uffff\4\11\4\4\17\uffff\2\11\1\uffff\5\11\1\uffff\1\11\5\uffff\1\11",
            "\3\11\3\uffff\4\11\4\4\17\uffff\2\11\1\uffff\5\11\1\uffff\1\11\5\uffff\1\11",
            ""
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "3016:1: rule__Word__Alternatives_0 : ( ( ( rule__Word__WordAssignment_0_0 ) ) | ( ( rule__Word__Group_0_1__0 ) ) );";
        }
    }
    static final String dfa_39s = "\61\uffff";
    static final String dfa_40s = "\3\uffff\2\1\2\uffff\27\1\13\uffff\3\1\5\uffff";
    static final String dfa_41s = "\1\4\1\uffff\1\5\2\6\1\11\1\uffff\27\5\13\0\3\5\5\0";
    static final String dfa_42s = "\1\55\1\uffff\1\34\2\62\1\34\1\uffff\27\62\13\0\3\62\5\0";
    static final String dfa_43s = "\1\uffff\1\1\4\uffff\1\2\52\uffff";
    static final String dfa_44s = "\36\uffff\1\11\1\6\1\13\1\3\1\16\1\4\1\1\1\14\1\15\1\5\1\10\3\uffff\1\12\1\2\1\17\1\0\1\7}>";
    static final String[] dfa_45s = {
            "\1\1\4\uffff\1\2\3\uffff\1\1\2\uffff\2\6\1\5\1\6\1\3\1\4\2\uffff\1\1\2\uffff\2\1\20\uffff\1\1",
            "",
            "\1\1\3\uffff\1\7\2\6\1\uffff\1\6\2\uffff\11\1\4\6",
            "\3\1\1\6\6\1\11\uffff\4\1\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\3\1\1\6\6\1\11\uffff\4\1\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\3\6\1\uffff\1\6\13\uffff\3\6\1\10",
            "",
            "\5\1\1\16\1\17\1\1\1\11\13\1\1\14\1\15\1\12\1\13\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\6\3\1\1\6\1\25\1\26\1\1\1\20\2\1\11\6\1\23\1\24\1\21\1\22\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\42\3\1\1\47\1\34\1\35\1\1\1\27\2\1\1\45\1\46\1\36\1\37\1\40\1\41\1\44\1\43\1\50\1\32\1\33\1\30\1\31\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\42\3\1\1\47\1\34\1\35\1\1\1\27\2\1\1\45\1\46\1\36\1\37\1\40\1\41\1\44\1\43\1\50\1\32\1\33\1\30\1\31\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\42\3\1\1\47\1\34\1\35\1\1\1\27\2\1\1\45\1\46\1\36\1\37\1\40\1\41\1\44\1\43\1\50\1\32\1\33\1\30\1\31\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\42\3\1\1\47\1\34\1\35\1\1\1\27\2\1\1\45\1\46\1\36\1\37\1\40\1\41\1\44\1\43\1\50\1\32\1\33\1\30\1\31\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\42\3\1\1\47\1\34\1\35\1\1\1\27\2\1\1\45\1\46\1\36\1\37\1\40\1\41\1\44\1\43\1\50\1\32\1\33\1\30\1\31\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\42\3\1\1\47\1\34\1\35\1\1\1\27\2\1\1\45\1\46\1\36\1\37\1\40\1\41\1\44\1\43\1\50\1\32\1\33\1\30\1\31\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\42\3\1\1\47\1\34\1\35\1\1\1\27\2\1\1\45\1\46\1\36\1\37\1\40\1\41\1\44\1\43\1\50\1\32\1\33\1\30\1\31\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\42\3\1\1\47\1\34\1\35\1\1\1\27\2\1\1\45\1\46\1\36\1\37\1\40\1\41\1\44\1\43\1\50\1\32\1\33\1\30\1\31\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\42\3\1\1\47\1\34\1\35\1\1\1\27\2\1\1\45\1\46\1\36\1\37\1\40\1\41\1\44\1\43\1\50\1\32\1\33\1\30\1\31\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\56\4\1\1\34\1\35\1\1\1\51\6\1\1\54\1\55\1\60\1\57\1\1\1\32\1\33\1\52\1\53\6\uffff\2\1\1\uffff\5\1\1\uffff\1\1\5\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "3112:1: rule__ItWord__Alternatives_0 : ( ( ( rule__ItWord__Group_0_0__0 ) ) | ( ( rule__ItWord__Group_0_1__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA36_47 = input.LA(1);

                         
                        int index36_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_47);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA36_36 = input.LA(1);

                         
                        int index36_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_36);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA36_45 = input.LA(1);

                         
                        int index36_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_45);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA36_33 = input.LA(1);

                         
                        int index36_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_33);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA36_35 = input.LA(1);

                         
                        int index36_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_35);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA36_39 = input.LA(1);

                         
                        int index36_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_39);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA36_31 = input.LA(1);

                         
                        int index36_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_31);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA36_48 = input.LA(1);

                         
                        int index36_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_48);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA36_40 = input.LA(1);

                         
                        int index36_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_40);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA36_30 = input.LA(1);

                         
                        int index36_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_30);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA36_44 = input.LA(1);

                         
                        int index36_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_44);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA36_32 = input.LA(1);

                         
                        int index36_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_32);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA36_37 = input.LA(1);

                         
                        int index36_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_37);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA36_38 = input.LA(1);

                         
                        int index36_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_38);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA36_34 = input.LA(1);

                         
                        int index36_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_34);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA36_46 = input.LA(1);

                         
                        int index36_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalNLX()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index36_46);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 36, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\16\uffff";
    static final String dfa_47s = "\1\12\3\5\1\uffff\3\5\5\0\1\uffff";
    static final String dfa_48s = "\4\34\1\uffff\3\34\5\0\1\uffff";
    static final String dfa_49s = "\4\uffff\1\2\10\uffff\1\1";
    static final String dfa_50s = "\10\uffff\1\3\1\4\1\1\1\0\1\2\1\uffff}>";
    static final String[] dfa_51s = {
            "\2\4\1\uffff\1\1\13\uffff\2\4\1\2\1\3",
            "\1\12\3\uffff\1\15\2\4\1\uffff\1\5\2\uffff\4\15\1\10\1\11\1\14\1\13\1\15\2\4\1\6\1\7",
            "\1\12\3\uffff\1\15\2\4\1\uffff\1\5\2\uffff\4\15\1\10\1\11\1\14\1\13\1\15\2\4\1\6\1\7",
            "\1\12\3\uffff\1\15\2\4\1\uffff\1\5\2\uffff\4\15\1\10\1\11\1\14\1\13\1\15\2\4\1\6\1\7",
            "",
            "\1\12\3\uffff\1\15\2\4\1\uffff\1\5\2\uffff\4\15\1\10\1\11\1\14\1\13\1\15\2\4\1\6\1\7",
            "\1\12\3\uffff\1\15\2\4\1\uffff\1\5\2\uffff\4\15\1\10\1\11\1\14\1\13\1\15\2\4\1\6\1\7",
            "\1\12\3\uffff\1\15\2\4\1\uffff\1\5\2\uffff\4\15\1\10\1\11\1\14\1\13\1\15\2\4\1\6\1\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "3263:1: rule__ItWord__Alternatives_0_1_1 : ( ( ( rule__ItWord__Group_0_1_1_0__0 ) ) | ( ( rule__ItWord__Group_0_1_1_1__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA43_11 = input.LA(1);

                         
                        int index43_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalNLX()) ) {s = 13;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index43_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA43_10 = input.LA(1);

                         
                        int index43_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalNLX()) ) {s = 13;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index43_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA43_12 = input.LA(1);

                         
                        int index43_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalNLX()) ) {s = 13;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index43_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA43_8 = input.LA(1);

                         
                        int index43_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalNLX()) ) {s = 13;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index43_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA43_9 = input.LA(1);

                         
                        int index43_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalNLX()) ) {s = 13;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index43_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 43, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\20\uffff";
    static final String dfa_53s = "\3\uffff\2\5\1\uffff\1\13\11\uffff";
    static final String dfa_54s = "\1\5\2\11\2\5\1\uffff\1\5\1\11\5\uffff\2\0\1\uffff";
    static final String dfa_55s = "\1\30\2\11\2\62\1\uffff\1\62\1\11\5\uffff\2\0\1\uffff";
    static final String dfa_56s = "\5\uffff\1\3\2\uffff\1\5\1\7\1\1\1\4\1\2\2\uffff\1\6";
    static final String dfa_57s = "\1\uffff\1\2\1\4\4\uffff\1\1\5\uffff\1\0\1\3\1\uffff}>";
    static final String[] dfa_58s = {
            "\1\5\3\uffff\1\10\6\uffff\1\6\1\7\1\1\1\2\1\3\1\4\2\5\1\11",
            "\1\10",
            "\1\10",
            "\4\5\1\15\23\5\6\uffff\2\5\1\uffff\5\5\1\uffff\1\5\5\uffff\1\5",
            "\4\5\1\15\23\5\6\uffff\2\5\1\uffff\5\5\1\uffff\1\5\5\uffff\1\5",
            "",
            "\4\13\1\16\23\13\6\uffff\2\13\1\uffff\5\13\1\uffff\1\13\5\uffff\1\13",
            "\1\10",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_52;
            this.eof = dfa_53;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_57;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "3386:1: rule__ItWordElXx__Alternatives : ( ( RULE_ALL_ALPHA ) | ( RULE_ALPHA ) | ( ( ruleItWordElX ) ) | ( ruleFragment ) | ( ruleAsterisk ) | ( RULE_ID_C ) | ( RULE_CURL ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_13 = input.LA(1);

                         
                        int index48_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred82_InternalNLX()) ) {s = 5;}

                        else if ( (synpred84_InternalNLX()) ) {s = 8;}

                         
                        input.seek(index48_13);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA48_7 = input.LA(1);

                         
                        int index48_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA48_7==RULE_MULTI) ) {s = 8;}

                        else if ( (synpred83_InternalNLX()) ) {s = 11;}

                        else if ( (synpred85_InternalNLX()) ) {s = 15;}

                         
                        input.seek(index48_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA48_1==RULE_MULTI) ) {s = 8;}

                        else if ( (synpred80_InternalNLX()) ) {s = 10;}

                        else if ( (synpred83_InternalNLX()) ) {s = 11;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA48_14 = input.LA(1);

                         
                        int index48_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalNLX()) ) {s = 11;}

                        else if ( (synpred84_InternalNLX()) ) {s = 8;}

                         
                        input.seek(index48_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA48_2 = input.LA(1);

                         
                        int index48_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA48_2==RULE_MULTI) ) {s = 8;}

                        else if ( (synpred81_InternalNLX()) ) {s = 12;}

                        else if ( (synpred83_InternalNLX()) ) {s = 11;}

                         
                        input.seek(index48_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\17\uffff";
    static final String dfa_60s = "\1\4\1\uffff\4\11\4\5\1\uffff\4\5";
    static final String dfa_61s = "\1\55\1\uffff\3\62\1\34\4\62\1\uffff\4\34";
    static final String dfa_62s = "\1\uffff\1\1\10\uffff\1\2\4\uffff";
    static final String dfa_63s = "\17\uffff}>";
    static final String[] dfa_64s = {
            "\1\1\4\uffff\1\1\3\uffff\1\1\2\uffff\1\3\1\4\1\2\1\5\2\1\2\uffff\1\1\2\uffff\2\1\20\uffff\1\1",
            "",
            "\1\1\1\10\1\11\1\uffff\1\1\13\uffff\1\6\1\7\2\1\25\uffff\1\12",
            "\1\1\1\10\1\11\1\uffff\1\1\13\uffff\1\6\1\7\2\1\25\uffff\1\12",
            "\1\1\1\10\1\11\1\uffff\1\1\13\uffff\1\6\1\7\2\1\25\uffff\1\12",
            "\1\1\1\15\1\16\1\uffff\1\1\13\uffff\1\13\1\14\2\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\25\uffff\1\12",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\25\uffff\1\12",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\25\uffff\1\12",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\25\uffff\1\12",
            "",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1"
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "3914:1: rule__MailAdress__Alternatives_0 : ( ( ( rule__MailAdress__EmailAssignment_0_0 ) ) | ( ( rule__MailAdress__EmailAssignment_0_1 ) ) );";
        }
    }
    static final String dfa_65s = "\1\55\1\uffff\3\50\1\34\4\50\1\uffff\4\34";
    static final String[] dfa_66s = {
            "\1\1\4\uffff\1\1\3\uffff\1\1\2\uffff\1\3\1\4\1\2\1\5\2\1\2\uffff\1\1\2\uffff\2\1\20\uffff\1\1",
            "",
            "\1\1\1\10\1\11\1\uffff\1\1\13\uffff\1\6\1\7\2\1\13\uffff\1\12",
            "\1\1\1\10\1\11\1\uffff\1\1\13\uffff\1\6\1\7\2\1\13\uffff\1\12",
            "\1\1\1\10\1\11\1\uffff\1\1\13\uffff\1\6\1\7\2\1\13\uffff\1\12",
            "\1\1\1\15\1\16\1\uffff\1\1\13\uffff\1\13\1\14\2\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\13\uffff\1\12",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\13\uffff\1\12",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\13\uffff\1\12",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\13\uffff\1\12",
            "",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1"
    };
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_65;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "3935:1: rule__Formula__Alternatives_1 : ( ( ( rule__Formula__NameAssignment_1_0 ) ) | ( ( rule__Formula__NameAssignment_1_1 ) ) );";
        }
    }

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_65;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "3956:1: rule__Formula__Alternatives_3_1 : ( ( ( rule__Formula__NameAssignment_3_1_0 ) ) | ( ( rule__Formula__NameAssignment_3_1_1 ) ) );";
        }
    }
    static final String dfa_67s = "\1\55\1\uffff\3\51\1\34\4\51\1\uffff\4\34";
    static final String[] dfa_68s = {
            "\1\1\4\uffff\1\1\3\uffff\1\1\2\uffff\1\3\1\4\1\2\1\5\2\1\2\uffff\1\1\2\uffff\2\1\20\uffff\1\1",
            "",
            "\1\1\1\10\1\11\1\uffff\1\1\13\uffff\1\6\1\7\2\1\14\uffff\1\12",
            "\1\1\1\10\1\11\1\uffff\1\1\13\uffff\1\6\1\7\2\1\14\uffff\1\12",
            "\1\1\1\10\1\11\1\uffff\1\1\13\uffff\1\6\1\7\2\1\14\uffff\1\12",
            "\1\1\1\15\1\16\1\uffff\1\1\13\uffff\1\13\1\14\2\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\14\uffff\1\12",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\14\uffff\1\12",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\14\uffff\1\12",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1\14\uffff\1\12",
            "",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1",
            "\1\1\4\uffff\2\1\1\uffff\1\1\2\uffff\4\12\4\1\1\uffff\4\1"
    };
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_67;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "3977:1: rule__Array__Alternatives_0 : ( ( ( rule__Array__NameAssignment_0_0 ) ) | ( ( rule__Array__NameAssignment_0_1 ) ) );";
        }
    }
    static final String dfa_69s = "\44\uffff";
    static final String dfa_70s = "\1\4\41\uffff\1\0\1\uffff";
    static final String dfa_71s = "\1\62\41\uffff\1\0\1\uffff";
    static final String dfa_72s = "\1\uffff\1\2\41\uffff\1\1";
    static final String dfa_73s = "\42\uffff\1\0\1\uffff}>";
    static final String[] dfa_74s = {
            "\2\1\1\42\1\uffff\1\43\3\1\1\uffff\1\1\2\uffff\6\1\1\uffff\14\1\5\uffff\2\1\1\uffff\1\1\1\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_69;
            this.eof = dfa_69;
            this.min = dfa_70;
            this.max = dfa_71;
            this.accept = dfa_72;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "()* loopback of 6819:2: ( rule__FreeSubSentence__Alternatives_1 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_34 = input.LA(1);

                         
                        int index98_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalNLX()) ) {s = 35;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_75s = "\10\uffff";
    static final String dfa_76s = "\3\3\1\uffff\1\3\3\uffff";
    static final String dfa_77s = "\1\6\2\4\1\uffff\1\4\1\0\1\uffff\1\5";
    static final String dfa_78s = "\1\54\2\62\1\uffff\1\62\1\0\1\uffff\1\54";
    static final String dfa_79s = "\3\uffff\1\2\2\uffff\1\1\1\uffff";
    static final String dfa_80s = "\5\uffff\1\0\2\uffff}>";
    static final String[] dfa_81s = {
            "\1\2\1\uffff\1\1\3\uffff\4\3\23\uffff\2\3\5\uffff\1\3\1\uffff\1\3",
            "\2\6\1\5\1\uffff\1\4\3\6\1\3\1\7\2\3\6\6\1\uffff\14\6\2\3\3\uffff\2\6\1\3\1\6\1\3\6\6",
            "\2\6\1\5\1\uffff\1\4\3\6\1\3\1\7\2\3\6\6\1\uffff\14\6\2\3\3\uffff\2\6\1\3\1\6\1\3\6\6",
            "",
            "\2\6\1\5\1\uffff\1\4\3\6\1\3\1\7\2\3\6\6\1\uffff\14\6\2\3\3\uffff\2\6\1\3\1\6\1\3\6\6",
            "\1\uffff",
            "",
            "\1\6\1\3\1\uffff\1\3\1\6\3\uffff\1\6\2\uffff\11\6\2\uffff\2\6\6\uffff\1\3\6\uffff\1\3\1\uffff\1\3"
    };

    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[][] dfa_81 = unpackEncodedStringArray(dfa_81s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_75;
            this.eof = dfa_76;
            this.min = dfa_77;
            this.max = dfa_78;
            this.accept = dfa_79;
            this.special = dfa_80;
            this.transition = dfa_81;
        }
        public String getDescription() {
            return "()* loopback of 6873:2: ( rule__FreeSubSentence__Group_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_5 = input.LA(1);

                         
                        int index99_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalNLX()) ) {s = 6;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index99_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_82s = "\6\uffff";
    static final String dfa_83s = "\2\4\1\0\1\uffff\1\5\1\uffff";
    static final String dfa_84s = "\2\62\1\0\1\uffff\1\43\1\uffff";
    static final String dfa_85s = "\3\uffff\1\1\1\uffff\1\2";
    static final String dfa_86s = "\2\uffff\1\0\3\uffff}>";
    static final String[] dfa_87s = {
            "\2\3\1\2\1\uffff\1\1\3\3\1\5\1\4\2\5\6\3\1\uffff\14\3\1\5\4\uffff\2\3\1\uffff\1\3\1\uffff\6\3",
            "\2\3\1\2\1\uffff\1\1\3\3\1\uffff\1\3\2\uffff\6\3\1\uffff\14\3\1\5\4\uffff\2\3\1\uffff\1\3\1\uffff\6\3",
            "\1\uffff",
            "",
            "\1\3\1\5\1\uffff\1\5\1\3\3\uffff\1\3\2\uffff\11\3\2\uffff\2\3\6\uffff\1\5",
            ""
    };

    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[][] dfa_87 = unpackEncodedStringArray(dfa_87s);

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_82;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_86;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "7474:2: ( rule__BracketSentence__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_2 = input.LA(1);

                         
                        int index104_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred161_InternalNLX()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index104_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_88s = "\7\uffff";
    static final String dfa_89s = "\1\1\6\uffff";
    static final String dfa_90s = "\1\6\1\uffff\3\4\1\0\1\uffff";
    static final String dfa_91s = "\1\43\1\uffff\3\62\1\0\1\uffff";
    static final String dfa_92s = "\1\uffff\1\2\4\uffff\1\1";
    static final String dfa_93s = "\5\uffff\1\0\1\uffff}>";
    static final String[] dfa_94s = {
            "\1\1\1\uffff\1\1\3\uffff\1\3\2\1\1\2\23\uffff\1\1",
            "",
            "\2\6\1\5\1\uffff\1\4\3\6\1\uffff\1\6\2\uffff\6\6\1\uffff\14\6\1\1\4\uffff\2\6\1\uffff\1\6\1\uffff\6\6",
            "\2\6\1\5\1\uffff\1\4\3\6\1\uffff\1\6\2\uffff\6\6\1\uffff\14\6\1\1\4\uffff\2\6\1\uffff\1\6\1\uffff\6\6",
            "\2\6\1\5\1\uffff\1\4\3\6\1\uffff\1\6\2\uffff\6\6\1\uffff\14\6\1\1\4\uffff\2\6\1\uffff\1\6\1\uffff\6\6",
            "\1\uffff",
            ""
    };

    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[][] dfa_94 = unpackEncodedStringArray(dfa_94s);

    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = dfa_88;
            this.eof = dfa_89;
            this.min = dfa_90;
            this.max = dfa_91;
            this.accept = dfa_92;
            this.special = dfa_93;
            this.transition = dfa_94;
        }
        public String getDescription() {
            return "()* loopback of 7635:2: ( rule__BracketSentence__Group_2_1__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA108_5 = input.LA(1);

                         
                        int index108_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred165_InternalNLX()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index108_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 108, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_95s = "\21\uffff";
    static final String dfa_96s = "\10\10\1\uffff\7\10\1\uffff";
    static final String dfa_97s = "\1\6\7\5\1\uffff\7\5\1\uffff";
    static final String dfa_98s = "\10\62\1\uffff\7\62\1\uffff";
    static final String dfa_99s = "\10\uffff\1\2\7\uffff\1\1";
    static final String dfa_100s = "\21\uffff}>";
    static final String[] dfa_101s = {
            "\3\10\1\uffff\1\6\1\7\1\10\1\1\2\10\11\uffff\1\4\1\5\1\2\1\3\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\5\10\1\uffff\1\10\5\uffff\1\10",
            ""
    };

    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[][] dfa_101 = unpackEncodedStringArray(dfa_101s);

    class DFA121 extends DFA {

        public DFA121(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 121;
            this.eot = dfa_95;
            this.eof = dfa_96;
            this.min = dfa_97;
            this.max = dfa_98;
            this.accept = dfa_99;
            this.special = dfa_100;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 8749:2: ( rule__ItWord__Group_0_0_1__0 )*";
        }
    }

    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = dfa_95;
            this.eof = dfa_96;
            this.min = dfa_97;
            this.max = dfa_98;
            this.accept = dfa_99;
            this.special = dfa_100;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 8999:2: ( rule__ItWord__Group_0_1_2__0 )*";
        }
    }
    static final String dfa_102s = "\1\1\11\uffff";
    static final String dfa_103s = "\1\4\1\uffff\1\5\6\0\1\uffff";
    static final String dfa_104s = "\1\62\1\uffff\1\54\6\0\1\uffff";
    static final String dfa_105s = "\1\uffff\1\2\7\uffff\1\1";
    static final String dfa_106s = "\3\uffff\1\3\1\0\1\5\1\2\1\4\1\1\1\uffff}>";
    static final String[] dfa_107s = {
            "\11\1\1\2\10\1\1\uffff\16\1\1\uffff\15\1",
            "",
            "\1\6\1\1\1\uffff\2\1\3\uffff\1\1\2\uffff\1\1\1\10\1\3\1\4\1\5\1\1\1\7\2\1\2\uffff\2\1\6\uffff\1\1\6\uffff\1\1\1\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA137 extends DFA {

        public DFA137(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 137;
            this.eot = dfa_32;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "()* loopback of 10606:3: ( rule__ChapterNum__Group_1__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA137_4 = input.LA(1);

                         
                        int index137_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalNLX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA137_8 = input.LA(1);

                         
                        int index137_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalNLX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA137_6 = input.LA(1);

                         
                        int index137_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalNLX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA137_3 = input.LA(1);

                         
                        int index137_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalNLX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA137_7 = input.LA(1);

                         
                        int index137_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalNLX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA137_5 = input.LA(1);

                         
                        int index137_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalNLX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 137, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_108s = "\10\54\1\uffff\7\54\1\uffff";
    static final String[] dfa_109s = {
            "\3\10\1\uffff\1\6\1\7\1\10\1\1\2\10\11\uffff\1\4\1\5\1\2\1\3\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            "\1\20\3\10\1\20\1\16\1\17\1\10\1\11\2\10\11\20\1\14\1\15\1\12\1\13\6\uffff\2\10\1\uffff\2\10\2\uffff\1\10\1\uffff\1\10",
            ""
    };
    static final char[] dfa_108 = DFA.unpackEncodedStringToUnsignedChars(dfa_108s);
    static final short[][] dfa_109 = unpackEncodedStringArray(dfa_109s);

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = dfa_95;
            this.eof = dfa_96;
            this.min = dfa_97;
            this.max = dfa_108;
            this.accept = dfa_99;
            this.special = dfa_100;
            this.transition = dfa_109;
        }
        public String getDescription() {
            return "()* loopback of 10743:2: ( rule__UrlAdress__Group_2__0 )*";
        }
    }
 

    
    protected static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0007EB47BB3F2F72L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0007EB07BB3F2E32L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000200019FF2232L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000018002002L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0007EB47BB3F2F70L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x00000000000000C0L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0007EB07BB3F2210L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0007EBC7BB3F2F70L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0007EBC7FFBF2F70L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0007EBC7BB3F2F72L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0007EB07FFBF2E30L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000001002L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000009040L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000001000009040L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000001000000002L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0007EB07FFBF2F70L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0007EB07BB3F2250L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000140L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000142L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000102L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0007EB07BBBF2B30L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000003000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000010000000000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0007EB0FFFBFFF70L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x000000000000F000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x000000000000F002L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0007EF07FFBFFF70L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x00000B0000000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0007FB07FFBFFF70L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000006000C00L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000006000C02L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x00000000000F0000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000200L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x000000001E002C00L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x000000001E002C02L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000200019FF2230L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000F00020L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000820L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000200040010000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000060020L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000020000010L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000060000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000002000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x00000000005E0020L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000002900L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000002802L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000782000000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000044000E00L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x00008000000C0000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000002002L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x00000000000C0000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000800000000000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x000000001A000C00L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x000000001A000C02L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000510000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0004000000000000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x00002000193F2210L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x00042000193F2210L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000020000000002L});
    }


}

@SuppressWarnings("all")
abstract class InternalNLXParser2 extends InternalNLXParser1 {

        InternalNLXParser2(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalNLXParser2(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "entryRuleModel"
    // InternalNLX.g:54:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalNLX.g:55:1: ( ruleModel EOF )
            // InternalNLX.g:56:1: ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalNLX.g:63:1: ruleModel : ( ( rule__Model__SentencesAssignment )* ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:67:2: ( ( ( rule__Model__SentencesAssignment )* ) )
            // InternalNLX.g:68:2: ( ( rule__Model__SentencesAssignment )* )
            {
            // InternalNLX.g:68:2: ( ( rule__Model__SentencesAssignment )* )
            // InternalNLX.g:69:3: ( rule__Model__SentencesAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getSentencesAssignment()); 
            }
            // InternalNLX.g:70:3: ( rule__Model__SentencesAssignment )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( ((LA1_0>=RULE_HASH && LA1_0<=RULE_NEWLINE)||(LA1_0>=RULE_SPACE && LA1_0<=RULE_MINUS)||LA1_0==RULE_DOT||(LA1_0>=RULE_ID && LA1_0<=RULE_DOUBLE_DOT)||(LA1_0>=RULE_CURL && LA1_0<=RULE_SLASH)||(LA1_0>=RULE_SEPARATORS_IT && LA1_0<=RULE_PARAGR)||(LA1_0>=RULE_OPERATORS && LA1_0<=RULE_TRIPLE_DOT)||LA1_0==RULE_TABLE_LINE||(LA1_0>=RULE_BR_O && LA1_0<=RULE_EXBR_O)||LA1_0==RULE_EXBRC_O||(LA1_0>=RULE_CURRENCY && LA1_0<=RULE_AT)) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalNLX.g:70:4: rule__Model__SentencesAssignment
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__Model__SentencesAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getSentencesAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleSentenceType"
    // InternalNLX.g:79:1: entryRuleSentenceType : ruleSentenceType EOF ;
    public final void entryRuleSentenceType() throws RecognitionException {
        try {
            // InternalNLX.g:80:1: ( ruleSentenceType EOF )
            // InternalNLX.g:81:1: ruleSentenceType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceTypeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSentenceType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceTypeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSentenceType"


    // $ANTLR start "ruleSentenceType"
    // InternalNLX.g:88:1: ruleSentenceType : ( ( rule__SentenceType__Group__0 ) ) ;
    public final void ruleSentenceType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:92:2: ( ( ( rule__SentenceType__Group__0 ) ) )
            // InternalNLX.g:93:2: ( ( rule__SentenceType__Group__0 ) )
            {
            // InternalNLX.g:93:2: ( ( rule__SentenceType__Group__0 ) )
            // InternalNLX.g:94:3: ( rule__SentenceType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceTypeAccess().getGroup()); 
            }
            // InternalNLX.g:95:3: ( rule__SentenceType__Group__0 )
            // InternalNLX.g:95:4: rule__SentenceType__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSentenceType"


    // $ANTLR start "entryRuleParagraph"
    // InternalNLX.g:104:1: entryRuleParagraph : ruleParagraph EOF ;
    public final void entryRuleParagraph() throws RecognitionException {
        try {
            // InternalNLX.g:105:1: ( ruleParagraph EOF )
            // InternalNLX.g:106:1: ruleParagraph EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParagraphRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParagraph();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParagraphRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParagraph"


    // $ANTLR start "ruleParagraph"
    // InternalNLX.g:113:1: ruleParagraph : ( ( rule__Paragraph__Alternatives ) ) ;
    public final void ruleParagraph() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:117:2: ( ( ( rule__Paragraph__Alternatives ) ) )
            // InternalNLX.g:118:2: ( ( rule__Paragraph__Alternatives ) )
            {
            // InternalNLX.g:118:2: ( ( rule__Paragraph__Alternatives ) )
            // InternalNLX.g:119:3: ( rule__Paragraph__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParagraphAccess().getAlternatives()); 
            }
            // InternalNLX.g:120:3: ( rule__Paragraph__Alternatives )
            // InternalNLX.g:120:4: rule__Paragraph__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Paragraph__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParagraphAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParagraph"


    // $ANTLR start "entryRuleParagraphBlock"
    // InternalNLX.g:129:1: entryRuleParagraphBlock : ruleParagraphBlock EOF ;
    public final void entryRuleParagraphBlock() throws RecognitionException {
        try {
            // InternalNLX.g:130:1: ( ruleParagraphBlock EOF )
            // InternalNLX.g:131:1: ruleParagraphBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParagraphBlockRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParagraphBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParagraphBlockRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParagraphBlock"


    // $ANTLR start "ruleParagraphBlock"
    // InternalNLX.g:138:1: ruleParagraphBlock : ( ( ( rule__ParagraphBlock__BlockAssignment ) ) ( ( rule__ParagraphBlock__BlockAssignment )* ) ) ;
    public final void ruleParagraphBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:142:2: ( ( ( ( rule__ParagraphBlock__BlockAssignment ) ) ( ( rule__ParagraphBlock__BlockAssignment )* ) ) )
            // InternalNLX.g:143:2: ( ( ( rule__ParagraphBlock__BlockAssignment ) ) ( ( rule__ParagraphBlock__BlockAssignment )* ) )
            {
            // InternalNLX.g:143:2: ( ( ( rule__ParagraphBlock__BlockAssignment ) ) ( ( rule__ParagraphBlock__BlockAssignment )* ) )
            // InternalNLX.g:144:3: ( ( rule__ParagraphBlock__BlockAssignment ) ) ( ( rule__ParagraphBlock__BlockAssignment )* )
            {
            // InternalNLX.g:144:3: ( ( rule__ParagraphBlock__BlockAssignment ) )
            // InternalNLX.g:145:4: ( rule__ParagraphBlock__BlockAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParagraphBlockAccess().getBlockAssignment()); 
            }
            // InternalNLX.g:146:4: ( rule__ParagraphBlock__BlockAssignment )
            // InternalNLX.g:146:5: rule__ParagraphBlock__BlockAssignment
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ParagraphBlock__BlockAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParagraphBlockAccess().getBlockAssignment()); 
            }

            }

            // InternalNLX.g:149:3: ( ( rule__ParagraphBlock__BlockAssignment )* )
            // InternalNLX.g:150:4: ( rule__ParagraphBlock__BlockAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParagraphBlockAccess().getBlockAssignment()); 
            }
            // InternalNLX.g:151:4: ( rule__ParagraphBlock__BlockAssignment )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=RULE_HASH && LA2_0<=RULE_INT)||(LA2_0>=RULE_MULTI && LA2_0<=RULE_MINUS)||LA2_0==RULE_DOT||(LA2_0>=RULE_ID && LA2_0<=RULE_DOUBLE_DOT)||(LA2_0>=RULE_CURL && LA2_0<=RULE_SLASH)||(LA2_0>=RULE_SEPARATORS_IT && LA2_0<=RULE_PARAGR)||(LA2_0>=RULE_OPERATORS && LA2_0<=RULE_TRIPLE_DOT)||(LA2_0>=RULE_BR_O && LA2_0<=RULE_EXBR_O)||LA2_0==RULE_EXBRC_O||(LA2_0>=RULE_CURRENCY && LA2_0<=RULE_AT)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalNLX.g:151:5: rule__ParagraphBlock__BlockAssignment
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__ParagraphBlock__BlockAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParagraphBlockAccess().getBlockAssignment()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParagraphBlock"


    // $ANTLR start "entryRuleBlockElement"
    // InternalNLX.g:161:1: entryRuleBlockElement : ruleBlockElement EOF ;
    public final void entryRuleBlockElement() throws RecognitionException {
        try {
            // InternalNLX.g:162:1: ( ruleBlockElement EOF )
            // InternalNLX.g:163:1: ruleBlockElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockElementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBlockElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockElementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockElement"


    // $ANTLR start "ruleBlockElement"
    // InternalNLX.g:170:1: ruleBlockElement : ( ( rule__BlockElement__Alternatives ) ) ;
    public final void ruleBlockElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:174:2: ( ( ( rule__BlockElement__Alternatives ) ) )
            // InternalNLX.g:175:2: ( ( rule__BlockElement__Alternatives ) )
            {
            // InternalNLX.g:175:2: ( ( rule__BlockElement__Alternatives ) )
            // InternalNLX.g:176:3: ( rule__BlockElement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockElementAccess().getAlternatives()); 
            }
            // InternalNLX.g:177:3: ( rule__BlockElement__Alternatives )
            // InternalNLX.g:177:4: rule__BlockElement__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockElement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockElementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockElement"


    // $ANTLR start "entryRuleFootNote"
    // InternalNLX.g:186:1: entryRuleFootNote : ruleFootNote EOF ;
    public final void entryRuleFootNote() throws RecognitionException {
        try {
            // InternalNLX.g:187:1: ( ruleFootNote EOF )
            // InternalNLX.g:188:1: ruleFootNote EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFootNoteRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFootNote();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFootNoteRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFootNote"


    // $ANTLR start "ruleFootNote"
    // InternalNLX.g:195:1: ruleFootNote : ( ( rule__FootNote__Group__0 ) ) ;
    public final void ruleFootNote() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:199:2: ( ( ( rule__FootNote__Group__0 ) ) )
            // InternalNLX.g:200:2: ( ( rule__FootNote__Group__0 ) )
            {
            // InternalNLX.g:200:2: ( ( rule__FootNote__Group__0 ) )
            // InternalNLX.g:201:3: ( rule__FootNote__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFootNoteAccess().getGroup()); 
            }
            // InternalNLX.g:202:3: ( rule__FootNote__Group__0 )
            // InternalNLX.g:202:4: rule__FootNote__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FootNote__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFootNoteAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFootNote"


    // $ANTLR start "entryRuleTableLine"
    // InternalNLX.g:211:1: entryRuleTableLine : ruleTableLine EOF ;
    public final void entryRuleTableLine() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:215:1: ( ruleTableLine EOF )
            // InternalNLX.g:216:1: ruleTableLine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableLineRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTableLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableLineRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleTableLine"


    // $ANTLR start "ruleTableLine"
    // InternalNLX.g:226:1: ruleTableLine : ( ( rule__TableLine__ContentAssignment ) ) ;
    public final void ruleTableLine() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:231:2: ( ( ( rule__TableLine__ContentAssignment ) ) )
            // InternalNLX.g:232:2: ( ( rule__TableLine__ContentAssignment ) )
            {
            // InternalNLX.g:232:2: ( ( rule__TableLine__ContentAssignment ) )
            // InternalNLX.g:233:3: ( rule__TableLine__ContentAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableLineAccess().getContentAssignment()); 
            }
            // InternalNLX.g:234:3: ( rule__TableLine__ContentAssignment )
            // InternalNLX.g:234:4: rule__TableLine__ContentAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableLine__ContentAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableLineAccess().getContentAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleTableLine"


    // $ANTLR start "entryRuleTableBorder"
    // InternalNLX.g:244:1: entryRuleTableBorder : ruleTableBorder EOF ;
    public final void entryRuleTableBorder() throws RecognitionException {
        try {
            // InternalNLX.g:245:1: ( ruleTableBorder EOF )
            // InternalNLX.g:246:1: ruleTableBorder EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableBorderRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTableBorder();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableBorderRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableBorder"


    // $ANTLR start "ruleTableBorder"
    // InternalNLX.g:253:1: ruleTableBorder : ( ( rule__TableBorder__Alternatives ) ) ;
    public final void ruleTableBorder() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:257:2: ( ( ( rule__TableBorder__Alternatives ) ) )
            // InternalNLX.g:258:2: ( ( rule__TableBorder__Alternatives ) )
            {
            // InternalNLX.g:258:2: ( ( rule__TableBorder__Alternatives ) )
            // InternalNLX.g:259:3: ( rule__TableBorder__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableBorderAccess().getAlternatives()); 
            }
            // InternalNLX.g:260:3: ( rule__TableBorder__Alternatives )
            // InternalNLX.g:260:4: rule__TableBorder__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableBorder__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableBorderAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableBorder"


    // $ANTLR start "entryRuleTableRow"
    // InternalNLX.g:269:1: entryRuleTableRow : ruleTableRow EOF ;
    public final void entryRuleTableRow() throws RecognitionException {
        try {
            // InternalNLX.g:270:1: ( ruleTableRow EOF )
            // InternalNLX.g:271:1: ruleTableRow EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTableRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableRow"


    // $ANTLR start "ruleTableRow"
    // InternalNLX.g:278:1: ruleTableRow : ( ( rule__TableRow__Group__0 ) ) ;
    public final void ruleTableRow() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:282:2: ( ( ( rule__TableRow__Group__0 ) ) )
            // InternalNLX.g:283:2: ( ( rule__TableRow__Group__0 ) )
            {
            // InternalNLX.g:283:2: ( ( rule__TableRow__Group__0 ) )
            // InternalNLX.g:284:3: ( rule__TableRow__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getGroup()); 
            }
            // InternalNLX.g:285:3: ( rule__TableRow__Group__0 )
            // InternalNLX.g:285:4: rule__TableRow__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableRow__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableRow"


    // $ANTLR start "entryRuleTableColumnSeparator"
    // InternalNLX.g:294:1: entryRuleTableColumnSeparator : ruleTableColumnSeparator EOF ;
    public final void entryRuleTableColumnSeparator() throws RecognitionException {
        try {
            // InternalNLX.g:295:1: ( ruleTableColumnSeparator EOF )
            // InternalNLX.g:296:1: ruleTableColumnSeparator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableColumnSeparatorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTableColumnSeparator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableColumnSeparatorRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableColumnSeparator"


    // $ANTLR start "ruleTableColumnSeparator"
    // InternalNLX.g:303:1: ruleTableColumnSeparator : ( ( rule__TableColumnSeparator__CharAssignment ) ) ;
    public final void ruleTableColumnSeparator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:307:2: ( ( ( rule__TableColumnSeparator__CharAssignment ) ) )
            // InternalNLX.g:308:2: ( ( rule__TableColumnSeparator__CharAssignment ) )
            {
            // InternalNLX.g:308:2: ( ( rule__TableColumnSeparator__CharAssignment ) )
            // InternalNLX.g:309:3: ( rule__TableColumnSeparator__CharAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableColumnSeparatorAccess().getCharAssignment()); 
            }
            // InternalNLX.g:310:3: ( rule__TableColumnSeparator__CharAssignment )
            // InternalNLX.g:310:4: rule__TableColumnSeparator__CharAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableColumnSeparator__CharAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableColumnSeparatorAccess().getCharAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableColumnSeparator"


    // $ANTLR start "entryRuleTable"
    // InternalNLX.g:319:1: entryRuleTable : ruleTable EOF ;
    public final void entryRuleTable() throws RecognitionException {
        try {
            // InternalNLX.g:320:1: ( ruleTable EOF )
            // InternalNLX.g:321:1: ruleTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTable"


    // $ANTLR start "ruleTable"
    // InternalNLX.g:328:1: ruleTable : ( ( rule__Table__Group__0 ) ) ;
    public final void ruleTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:332:2: ( ( ( rule__Table__Group__0 ) ) )
            // InternalNLX.g:333:2: ( ( rule__Table__Group__0 ) )
            {
            // InternalNLX.g:333:2: ( ( rule__Table__Group__0 ) )
            // InternalNLX.g:334:3: ( rule__Table__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getGroup()); 
            }
            // InternalNLX.g:335:3: ( rule__Table__Group__0 )
            // InternalNLX.g:335:4: rule__Table__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTable"


    // $ANTLR start "entryRuleLineSentenceChain"
    // InternalNLX.g:344:1: entryRuleLineSentenceChain : ruleLineSentenceChain EOF ;
    public final void entryRuleLineSentenceChain() throws RecognitionException {
        try {
            // InternalNLX.g:345:1: ( ruleLineSentenceChain EOF )
            // InternalNLX.g:346:1: ruleLineSentenceChain EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLineSentenceChain();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLineSentenceChain"


    // $ANTLR start "ruleLineSentenceChain"
    // InternalNLX.g:353:1: ruleLineSentenceChain : ( ( rule__LineSentenceChain__Group__0 ) ) ;
    public final void ruleLineSentenceChain() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:357:2: ( ( ( rule__LineSentenceChain__Group__0 ) ) )
            // InternalNLX.g:358:2: ( ( rule__LineSentenceChain__Group__0 ) )
            {
            // InternalNLX.g:358:2: ( ( rule__LineSentenceChain__Group__0 ) )
            // InternalNLX.g:359:3: ( rule__LineSentenceChain__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainAccess().getGroup()); 
            }
            // InternalNLX.g:360:3: ( rule__LineSentenceChain__Group__0 )
            // InternalNLX.g:360:4: rule__LineSentenceChain__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentenceChain__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLineSentenceChain"


    // $ANTLR start "entryRuleSentenceChain"
    // InternalNLX.g:369:1: entryRuleSentenceChain : ruleSentenceChain EOF ;
    public final void entryRuleSentenceChain() throws RecognitionException {
        try {
            // InternalNLX.g:370:1: ( ruleSentenceChain EOF )
            // InternalNLX.g:371:1: ruleSentenceChain EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSentenceChain();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSentenceChain"


    // $ANTLR start "ruleSentenceChain"
    // InternalNLX.g:378:1: ruleSentenceChain : ( ( rule__SentenceChain__Group__0 ) ) ;
    public final void ruleSentenceChain() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:382:2: ( ( ( rule__SentenceChain__Group__0 ) ) )
            // InternalNLX.g:383:2: ( ( rule__SentenceChain__Group__0 ) )
            {
            // InternalNLX.g:383:2: ( ( rule__SentenceChain__Group__0 ) )
            // InternalNLX.g:384:3: ( rule__SentenceChain__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getGroup()); 
            }
            // InternalNLX.g:385:3: ( rule__SentenceChain__Group__0 )
            // InternalNLX.g:385:4: rule__SentenceChain__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChain__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSentenceChain"


    // $ANTLR start "entryRuleSentenceChainX"
    // InternalNLX.g:394:1: entryRuleSentenceChainX : ruleSentenceChainX EOF ;
    public final void entryRuleSentenceChainX() throws RecognitionException {
        try {
            // InternalNLX.g:395:1: ( ruleSentenceChainX EOF )
            // InternalNLX.g:396:1: ruleSentenceChainX EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSentenceChainX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSentenceChainX"


    // $ANTLR start "ruleSentenceChainX"
    // InternalNLX.g:403:1: ruleSentenceChainX : ( ( rule__SentenceChainX__Group__0 ) ) ;
    public final void ruleSentenceChainX() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:407:2: ( ( ( rule__SentenceChainX__Group__0 ) ) )
            // InternalNLX.g:408:2: ( ( rule__SentenceChainX__Group__0 ) )
            {
            // InternalNLX.g:408:2: ( ( rule__SentenceChainX__Group__0 ) )
            // InternalNLX.g:409:3: ( rule__SentenceChainX__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getGroup()); 
            }
            // InternalNLX.g:410:3: ( rule__SentenceChainX__Group__0 )
            // InternalNLX.g:410:4: rule__SentenceChainX__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSentenceChainX"


    // $ANTLR start "entryRuleSentence"
    // InternalNLX.g:419:1: entryRuleSentence : ruleSentence EOF ;
    public final void entryRuleSentence() throws RecognitionException {
        try {
            // InternalNLX.g:420:1: ( ruleSentence EOF )
            // InternalNLX.g:421:1: ruleSentence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSentence"


    // $ANTLR start "ruleSentence"
    // InternalNLX.g:428:1: ruleSentence : ( ( rule__Sentence__Group__0 ) ) ;
    public final void ruleSentence() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:432:2: ( ( ( rule__Sentence__Group__0 ) ) )
            // InternalNLX.g:433:2: ( ( rule__Sentence__Group__0 ) )
            {
            // InternalNLX.g:433:2: ( ( rule__Sentence__Group__0 ) )
            // InternalNLX.g:434:3: ( rule__Sentence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceAccess().getGroup()); 
            }
            // InternalNLX.g:435:3: ( rule__Sentence__Group__0 )
            // InternalNLX.g:435:4: rule__Sentence__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Sentence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSentence"


    // $ANTLR start "entryRuleLineSentence"
    // InternalNLX.g:444:1: entryRuleLineSentence : ruleLineSentence EOF ;
    public final void entryRuleLineSentence() throws RecognitionException {
        try {
            // InternalNLX.g:445:1: ( ruleLineSentence EOF )
            // InternalNLX.g:446:1: ruleLineSentence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLineSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLineSentence"


    // $ANTLR start "ruleLineSentence"
    // InternalNLX.g:453:1: ruleLineSentence : ( ( rule__LineSentence__Group__0 ) ) ;
    public final void ruleLineSentence() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:457:2: ( ( ( rule__LineSentence__Group__0 ) ) )
            // InternalNLX.g:458:2: ( ( rule__LineSentence__Group__0 ) )
            {
            // InternalNLX.g:458:2: ( ( rule__LineSentence__Group__0 ) )
            // InternalNLX.g:459:3: ( rule__LineSentence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceAccess().getGroup()); 
            }
            // InternalNLX.g:460:3: ( rule__LineSentence__Group__0 )
            // InternalNLX.g:460:4: rule__LineSentence__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLineSentence"


    // $ANTLR start "entryRuleFreeSentence"
    // InternalNLX.g:469:1: entryRuleFreeSentence : ruleFreeSentence EOF ;
    public final void entryRuleFreeSentence() throws RecognitionException {
        try {
            // InternalNLX.g:470:1: ( ruleFreeSentence EOF )
            // InternalNLX.g:471:1: ruleFreeSentence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSentenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFreeSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSentenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFreeSentence"


    // $ANTLR start "ruleFreeSentence"
    // InternalNLX.g:478:1: ruleFreeSentence : ( ( rule__FreeSentence__Group__0 ) ) ;
    public final void ruleFreeSentence() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:482:2: ( ( ( rule__FreeSentence__Group__0 ) ) )
            // InternalNLX.g:483:2: ( ( rule__FreeSentence__Group__0 ) )
            {
            // InternalNLX.g:483:2: ( ( rule__FreeSentence__Group__0 ) )
            // InternalNLX.g:484:3: ( rule__FreeSentence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSentenceAccess().getGroup()); 
            }
            // InternalNLX.g:485:3: ( rule__FreeSentence__Group__0 )
            // InternalNLX.g:485:4: rule__FreeSentence__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSentence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSentenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFreeSentence"


    // $ANTLR start "entryRuleSentenceX"
    // InternalNLX.g:494:1: entryRuleSentenceX : ruleSentenceX EOF ;
    public final void entryRuleSentenceX() throws RecognitionException {
        try {
            // InternalNLX.g:495:1: ( ruleSentenceX EOF )
            // InternalNLX.g:496:1: ruleSentenceX EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceXRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSentenceX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceXRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSentenceX"


    // $ANTLR start "ruleSentenceX"
    // InternalNLX.g:503:1: ruleSentenceX : ( ( rule__SentenceX__Group__0 ) ) ;
    public final void ruleSentenceX() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:507:2: ( ( ( rule__SentenceX__Group__0 ) ) )
            // InternalNLX.g:508:2: ( ( rule__SentenceX__Group__0 ) )
            {
            // InternalNLX.g:508:2: ( ( rule__SentenceX__Group__0 ) )
            // InternalNLX.g:509:3: ( rule__SentenceX__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceXAccess().getGroup()); 
            }
            // InternalNLX.g:510:3: ( rule__SentenceX__Group__0 )
            // InternalNLX.g:510:4: rule__SentenceX__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceX__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceXAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSentenceX"


    // $ANTLR start "entryRuleListSentence"
    // InternalNLX.g:519:1: entryRuleListSentence : ruleListSentence EOF ;
    public final void entryRuleListSentence() throws RecognitionException {
        try {
            // InternalNLX.g:520:1: ( ruleListSentence EOF )
            // InternalNLX.g:521:1: ruleListSentence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListSentenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleListSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListSentenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleListSentence"


    // $ANTLR start "ruleListSentence"
    // InternalNLX.g:528:1: ruleListSentence : ( ( rule__ListSentence__Group__0 ) ) ;
    public final void ruleListSentence() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:532:2: ( ( ( rule__ListSentence__Group__0 ) ) )
            // InternalNLX.g:533:2: ( ( rule__ListSentence__Group__0 ) )
            {
            // InternalNLX.g:533:2: ( ( rule__ListSentence__Group__0 ) )
            // InternalNLX.g:534:3: ( rule__ListSentence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListSentenceAccess().getGroup()); 
            }
            // InternalNLX.g:535:3: ( rule__ListSentence__Group__0 )
            // InternalNLX.g:535:4: rule__ListSentence__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListSentence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListSentenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleListSentence"


    // $ANTLR start "entryRuleChapterSentence"
    // InternalNLX.g:544:1: entryRuleChapterSentence : ruleChapterSentence EOF ;
    public final void entryRuleChapterSentence() throws RecognitionException {
        try {
            // InternalNLX.g:545:1: ( ruleChapterSentence EOF )
            // InternalNLX.g:546:1: ruleChapterSentence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterSentenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChapterSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterSentenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChapterSentence"


    // $ANTLR start "ruleChapterSentence"
    // InternalNLX.g:553:1: ruleChapterSentence : ( ( rule__ChapterSentence__Group__0 ) ) ;
    public final void ruleChapterSentence() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:557:2: ( ( ( rule__ChapterSentence__Group__0 ) ) )
            // InternalNLX.g:558:2: ( ( rule__ChapterSentence__Group__0 ) )
            {
            // InternalNLX.g:558:2: ( ( rule__ChapterSentence__Group__0 ) )
            // InternalNLX.g:559:3: ( rule__ChapterSentence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterSentenceAccess().getGroup()); 
            }
            // InternalNLX.g:560:3: ( rule__ChapterSentence__Group__0 )
            // InternalNLX.g:560:4: rule__ChapterSentence__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterSentence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterSentenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChapterSentence"


    // $ANTLR start "entryRuleSubSentence"
    // InternalNLX.g:569:1: entryRuleSubSentence : ruleSubSentence EOF ;
    public final void entryRuleSubSentence() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:573:1: ( ruleSubSentence EOF )
            // InternalNLX.g:574:1: ruleSubSentence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSubSentence"


    // $ANTLR start "ruleSubSentence"
    // InternalNLX.g:584:1: ruleSubSentence : ( ( rule__SubSentence__Group__0 ) ) ;
    public final void ruleSubSentence() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:589:2: ( ( ( rule__SubSentence__Group__0 ) ) )
            // InternalNLX.g:590:2: ( ( rule__SubSentence__Group__0 ) )
            {
            // InternalNLX.g:590:2: ( ( rule__SubSentence__Group__0 ) )
            // InternalNLX.g:591:3: ( rule__SubSentence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getGroup()); 
            }
            // InternalNLX.g:592:3: ( rule__SubSentence__Group__0 )
            // InternalNLX.g:592:4: rule__SubSentence__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSubSentence"


    // $ANTLR start "entryRuleTrailSubSentence"
    // InternalNLX.g:602:1: entryRuleTrailSubSentence : ruleTrailSubSentence EOF ;
    public final void entryRuleTrailSubSentence() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:606:1: ( ruleTrailSubSentence EOF )
            // InternalNLX.g:607:1: ruleTrailSubSentence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTrailSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleTrailSubSentence"


    // $ANTLR start "ruleTrailSubSentence"
    // InternalNLX.g:617:1: ruleTrailSubSentence : ( ( rule__TrailSubSentence__Group__0 ) ) ;
    public final void ruleTrailSubSentence() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:622:2: ( ( ( rule__TrailSubSentence__Group__0 ) ) )
            // InternalNLX.g:623:2: ( ( rule__TrailSubSentence__Group__0 ) )
            {
            // InternalNLX.g:623:2: ( ( rule__TrailSubSentence__Group__0 ) )
            // InternalNLX.g:624:3: ( rule__TrailSubSentence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getGroup()); 
            }
            // InternalNLX.g:625:3: ( rule__TrailSubSentence__Group__0 )
            // InternalNLX.g:625:4: rule__TrailSubSentence__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleTrailSubSentence"


    // $ANTLR start "entryRuleFreeSubSentence"
    // InternalNLX.g:635:1: entryRuleFreeSubSentence : ruleFreeSubSentence EOF ;
    public final void entryRuleFreeSubSentence() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:639:1: ( ruleFreeSubSentence EOF )
            // InternalNLX.g:640:1: ruleFreeSubSentence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFreeSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleFreeSubSentence"


    // $ANTLR start "ruleFreeSubSentence"
    // InternalNLX.g:650:1: ruleFreeSubSentence : ( ( rule__FreeSubSentence__Group__0 ) ) ;
    public final void ruleFreeSubSentence() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:655:2: ( ( ( rule__FreeSubSentence__Group__0 ) ) )
            // InternalNLX.g:656:2: ( ( rule__FreeSubSentence__Group__0 ) )
            {
            // InternalNLX.g:656:2: ( ( rule__FreeSubSentence__Group__0 ) )
            // InternalNLX.g:657:3: ( rule__FreeSubSentence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getGroup()); 
            }
            // InternalNLX.g:658:3: ( rule__FreeSubSentence__Group__0 )
            // InternalNLX.g:658:4: rule__FreeSubSentence__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSubSentence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleFreeSubSentence"


    // $ANTLR start "entryRuleLineSubSentence"
    // InternalNLX.g:668:1: entryRuleLineSubSentence : ruleLineSubSentence EOF ;
    public final void entryRuleLineSubSentence() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:672:1: ( ruleLineSubSentence EOF )
            // InternalNLX.g:673:1: ruleLineSubSentence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSubSentenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLineSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSubSentenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleLineSubSentence"


    // $ANTLR start "ruleLineSubSentence"
    // InternalNLX.g:683:1: ruleLineSubSentence : ( ( rule__LineSubSentence__Group__0 ) ) ;
    public final void ruleLineSubSentence() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:688:2: ( ( ( rule__LineSubSentence__Group__0 ) ) )
            // InternalNLX.g:689:2: ( ( rule__LineSubSentence__Group__0 ) )
            {
            // InternalNLX.g:689:2: ( ( rule__LineSubSentence__Group__0 ) )
            // InternalNLX.g:690:3: ( rule__LineSubSentence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSubSentenceAccess().getGroup()); 
            }
            // InternalNLX.g:691:3: ( rule__LineSubSentence__Group__0 )
            // InternalNLX.g:691:4: rule__LineSubSentence__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSubSentence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSubSentenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleLineSubSentence"


    // $ANTLR start "entryRuleListPoint"
    // InternalNLX.g:701:1: entryRuleListPoint : ruleListPoint EOF ;
    public final void entryRuleListPoint() throws RecognitionException {
        try {
            // InternalNLX.g:702:1: ( ruleListPoint EOF )
            // InternalNLX.g:703:1: ruleListPoint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleListPoint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleListPoint"


    // $ANTLR start "ruleListPoint"
    // InternalNLX.g:710:1: ruleListPoint : ( ( rule__ListPoint__Alternatives ) ) ;
    public final void ruleListPoint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:714:2: ( ( ( rule__ListPoint__Alternatives ) ) )
            // InternalNLX.g:715:2: ( ( rule__ListPoint__Alternatives ) )
            {
            // InternalNLX.g:715:2: ( ( rule__ListPoint__Alternatives ) )
            // InternalNLX.g:716:3: ( rule__ListPoint__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointAccess().getAlternatives()); 
            }
            // InternalNLX.g:717:3: ( rule__ListPoint__Alternatives )
            // InternalNLX.g:717:4: rule__ListPoint__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPoint__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleListPoint"


    // $ANTLR start "entryRuleListPointNum"
    // InternalNLX.g:726:1: entryRuleListPointNum : ruleListPointNum EOF ;
    public final void entryRuleListPointNum() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:730:1: ( ruleListPointNum EOF )
            // InternalNLX.g:731:1: ruleListPointNum EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleListPointNum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleListPointNum"


    // $ANTLR start "ruleListPointNum"
    // InternalNLX.g:741:1: ruleListPointNum : ( ( rule__ListPointNum__Alternatives ) ) ;
    public final void ruleListPointNum() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:746:2: ( ( ( rule__ListPointNum__Alternatives ) ) )
            // InternalNLX.g:747:2: ( ( rule__ListPointNum__Alternatives ) )
            {
            // InternalNLX.g:747:2: ( ( rule__ListPointNum__Alternatives ) )
            // InternalNLX.g:748:3: ( rule__ListPointNum__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumAccess().getAlternatives()); 
            }
            // InternalNLX.g:749:3: ( rule__ListPointNum__Alternatives )
            // InternalNLX.g:749:4: rule__ListPointNum__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleListPointNum"


    // $ANTLR start "entryRuleNoNElement"
    // InternalNLX.g:759:1: entryRuleNoNElement : ruleNoNElement EOF ;
    public final void entryRuleNoNElement() throws RecognitionException {
        try {
            // InternalNLX.g:760:1: ( ruleNoNElement EOF )
            // InternalNLX.g:761:1: ruleNoNElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNoNElementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNoNElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNoNElementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNElement"


    // $ANTLR start "ruleNoNElement"
    // InternalNLX.g:768:1: ruleNoNElement : ( ( rule__NoNElement__Alternatives ) ) ;
    public final void ruleNoNElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:772:2: ( ( ( rule__NoNElement__Alternatives ) ) )
            // InternalNLX.g:773:2: ( ( rule__NoNElement__Alternatives ) )
            {
            // InternalNLX.g:773:2: ( ( rule__NoNElement__Alternatives ) )
            // InternalNLX.g:774:3: ( rule__NoNElement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNoNElementAccess().getAlternatives()); 
            }
            // InternalNLX.g:775:3: ( rule__NoNElement__Alternatives )
            // InternalNLX.g:775:4: rule__NoNElement__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NoNElement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNoNElementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNElement"


    // $ANTLR start "entryRuleBrackets"
    // InternalNLX.g:784:1: entryRuleBrackets : ruleBrackets EOF ;
    public final void entryRuleBrackets() throws RecognitionException {
        try {
            // InternalNLX.g:785:1: ( ruleBrackets EOF )
            // InternalNLX.g:786:1: ruleBrackets EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBrackets();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBrackets"


    // $ANTLR start "ruleBrackets"
    // InternalNLX.g:793:1: ruleBrackets : ( ( rule__Brackets__Alternatives ) ) ;
    public final void ruleBrackets() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:797:2: ( ( ( rule__Brackets__Alternatives ) ) )
            // InternalNLX.g:798:2: ( ( rule__Brackets__Alternatives ) )
            {
            // InternalNLX.g:798:2: ( ( rule__Brackets__Alternatives ) )
            // InternalNLX.g:799:3: ( rule__Brackets__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketsAccess().getAlternatives()); 
            }
            // InternalNLX.g:800:3: ( rule__Brackets__Alternatives )
            // InternalNLX.g:800:4: rule__Brackets__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Brackets__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBrackets"


    // $ANTLR start "entryRuleNoNElementX"
    // InternalNLX.g:809:1: entryRuleNoNElementX : ruleNoNElementX EOF ;
    public final void entryRuleNoNElementX() throws RecognitionException {
        try {
            // InternalNLX.g:810:1: ( ruleNoNElementX EOF )
            // InternalNLX.g:811:1: ruleNoNElementX EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNoNElementXRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNoNElementX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNoNElementXRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNElementX"


    // $ANTLR start "ruleNoNElementX"
    // InternalNLX.g:818:1: ruleNoNElementX : ( ( rule__NoNElementX__Alternatives ) ) ;
    public final void ruleNoNElementX() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:822:2: ( ( ( rule__NoNElementX__Alternatives ) ) )
            // InternalNLX.g:823:2: ( ( rule__NoNElementX__Alternatives ) )
            {
            // InternalNLX.g:823:2: ( ( rule__NoNElementX__Alternatives ) )
            // InternalNLX.g:824:3: ( rule__NoNElementX__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNoNElementXAccess().getAlternatives()); 
            }
            // InternalNLX.g:825:3: ( rule__NoNElementX__Alternatives )
            // InternalNLX.g:825:4: rule__NoNElementX__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NoNElementX__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNoNElementXAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNElementX"


    // $ANTLR start "entryRuleNoNElementX2"
    // InternalNLX.g:834:1: entryRuleNoNElementX2 : ruleNoNElementX2 EOF ;
    public final void entryRuleNoNElementX2() throws RecognitionException {
        try {
            // InternalNLX.g:835:1: ( ruleNoNElementX2 EOF )
            // InternalNLX.g:836:1: ruleNoNElementX2 EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNoNElementX2Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNoNElementX2();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNoNElementX2Rule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNElementX2"


    // $ANTLR start "ruleNoNElementX2"
    // InternalNLX.g:843:1: ruleNoNElementX2 : ( ( rule__NoNElementX2__Alternatives ) ) ;
    public final void ruleNoNElementX2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:847:2: ( ( ( rule__NoNElementX2__Alternatives ) ) )
            // InternalNLX.g:848:2: ( ( rule__NoNElementX2__Alternatives ) )
            {
            // InternalNLX.g:848:2: ( ( rule__NoNElementX2__Alternatives ) )
            // InternalNLX.g:849:3: ( rule__NoNElementX2__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNoNElementX2Access().getAlternatives()); 
            }
            // InternalNLX.g:850:3: ( rule__NoNElementX2__Alternatives )
            // InternalNLX.g:850:4: rule__NoNElementX2__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NoNElementX2__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNoNElementX2Access().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNElementX2"


    // $ANTLR start "entryRuleElements"
    // InternalNLX.g:859:1: entryRuleElements : ruleElements EOF ;
    public final void entryRuleElements() throws RecognitionException {
        try {
            // InternalNLX.g:860:1: ( ruleElements EOF )
            // InternalNLX.g:861:1: ruleElements EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElements"


    // $ANTLR start "ruleElements"
    // InternalNLX.g:868:1: ruleElements : ( ( rule__Elements__Alternatives ) ) ;
    public final void ruleElements() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:872:2: ( ( ( rule__Elements__Alternatives ) ) )
            // InternalNLX.g:873:2: ( ( rule__Elements__Alternatives ) )
            {
            // InternalNLX.g:873:2: ( ( rule__Elements__Alternatives ) )
            // InternalNLX.g:874:3: ( rule__Elements__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementsAccess().getAlternatives()); 
            }
            // InternalNLX.g:875:3: ( rule__Elements__Alternatives )
            // InternalNLX.g:875:4: rule__Elements__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Elements__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElements"


    // $ANTLR start "entryRuleAllElements"
    // InternalNLX.g:884:1: entryRuleAllElements : ruleAllElements EOF ;
    public final void entryRuleAllElements() throws RecognitionException {
        try {
            // InternalNLX.g:885:1: ( ruleAllElements EOF )
            // InternalNLX.g:886:1: ruleAllElements EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAllElementsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAllElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAllElementsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAllElements"


    // $ANTLR start "ruleAllElements"
    // InternalNLX.g:893:1: ruleAllElements : ( ( rule__AllElements__Alternatives ) ) ;
    public final void ruleAllElements() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:897:2: ( ( ( rule__AllElements__Alternatives ) ) )
            // InternalNLX.g:898:2: ( ( rule__AllElements__Alternatives ) )
            {
            // InternalNLX.g:898:2: ( ( rule__AllElements__Alternatives ) )
            // InternalNLX.g:899:3: ( rule__AllElements__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAllElementsAccess().getAlternatives()); 
            }
            // InternalNLX.g:900:3: ( rule__AllElements__Alternatives )
            // InternalNLX.g:900:4: rule__AllElements__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AllElements__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAllElementsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAllElements"


    // $ANTLR start "entryRuleBracketSentence"
    // InternalNLX.g:909:1: entryRuleBracketSentence : ruleBracketSentence EOF ;
    public final void entryRuleBracketSentence() throws RecognitionException {
        try {
            // InternalNLX.g:910:1: ( ruleBracketSentence EOF )
            // InternalNLX.g:911:1: ruleBracketSentence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBracketSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBracketSentence"


    // $ANTLR start "ruleBracketSentence"
    // InternalNLX.g:918:1: ruleBracketSentence : ( ( rule__BracketSentence__Group__0 ) ) ;
    public final void ruleBracketSentence() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:922:2: ( ( ( rule__BracketSentence__Group__0 ) ) )
            // InternalNLX.g:923:2: ( ( rule__BracketSentence__Group__0 ) )
            {
            // InternalNLX.g:923:2: ( ( rule__BracketSentence__Group__0 ) )
            // InternalNLX.g:924:3: ( rule__BracketSentence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getGroup()); 
            }
            // InternalNLX.g:925:3: ( rule__BracketSentence__Group__0 )
            // InternalNLX.g:925:4: rule__BracketSentence__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBracketSentence"


    // $ANTLR start "entryRuleExtBracketSentence"
    // InternalNLX.g:934:1: entryRuleExtBracketSentence : ruleExtBracketSentence EOF ;
    public final void entryRuleExtBracketSentence() throws RecognitionException {
        try {
            // InternalNLX.g:935:1: ( ruleExtBracketSentence EOF )
            // InternalNLX.g:936:1: ruleExtBracketSentence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExtBracketSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExtBracketSentence"


    // $ANTLR start "ruleExtBracketSentence"
    // InternalNLX.g:943:1: ruleExtBracketSentence : ( ( rule__ExtBracketSentence__Group__0 ) ) ;
    public final void ruleExtBracketSentence() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:947:2: ( ( ( rule__ExtBracketSentence__Group__0 ) ) )
            // InternalNLX.g:948:2: ( ( rule__ExtBracketSentence__Group__0 ) )
            {
            // InternalNLX.g:948:2: ( ( rule__ExtBracketSentence__Group__0 ) )
            // InternalNLX.g:949:3: ( rule__ExtBracketSentence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getGroup()); 
            }
            // InternalNLX.g:950:3: ( rule__ExtBracketSentence__Group__0 )
            // InternalNLX.g:950:4: rule__ExtBracketSentence__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExtBracketSentence"


    // $ANTLR start "entryRuleExtBracketSentenceC"
    // InternalNLX.g:959:1: entryRuleExtBracketSentenceC : ruleExtBracketSentenceC EOF ;
    public final void entryRuleExtBracketSentenceC() throws RecognitionException {
        try {
            // InternalNLX.g:960:1: ( ruleExtBracketSentenceC EOF )
            // InternalNLX.g:961:1: ruleExtBracketSentenceC EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExtBracketSentenceC();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExtBracketSentenceC"


    // $ANTLR start "ruleExtBracketSentenceC"
    // InternalNLX.g:968:1: ruleExtBracketSentenceC : ( ( rule__ExtBracketSentenceC__Group__0 ) ) ;
    public final void ruleExtBracketSentenceC() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:972:2: ( ( ( rule__ExtBracketSentenceC__Group__0 ) ) )
            // InternalNLX.g:973:2: ( ( rule__ExtBracketSentenceC__Group__0 ) )
            {
            // InternalNLX.g:973:2: ( ( rule__ExtBracketSentenceC__Group__0 ) )
            // InternalNLX.g:974:3: ( rule__ExtBracketSentenceC__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getGroup()); 
            }
            // InternalNLX.g:975:3: ( rule__ExtBracketSentenceC__Group__0 )
            // InternalNLX.g:975:4: rule__ExtBracketSentenceC__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExtBracketSentenceC"


    // $ANTLR start "entryRuleFullStop"
    // InternalNLX.g:984:1: entryRuleFullStop : ruleFullStop EOF ;
    public final void entryRuleFullStop() throws RecognitionException {
        try {
            // InternalNLX.g:985:1: ( ruleFullStop EOF )
            // InternalNLX.g:986:1: ruleFullStop EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullStopRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFullStop();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullStopRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFullStop"


    // $ANTLR start "ruleFullStop"
    // InternalNLX.g:993:1: ruleFullStop : ( ( rule__FullStop__Alternatives ) ) ;
    public final void ruleFullStop() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:997:2: ( ( ( rule__FullStop__Alternatives ) ) )
            // InternalNLX.g:998:2: ( ( rule__FullStop__Alternatives ) )
            {
            // InternalNLX.g:998:2: ( ( rule__FullStop__Alternatives ) )
            // InternalNLX.g:999:3: ( rule__FullStop__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullStopAccess().getAlternatives()); 
            }
            // InternalNLX.g:1000:3: ( rule__FullStop__Alternatives )
            // InternalNLX.g:1000:4: rule__FullStop__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FullStop__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullStopAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFullStop"


    // $ANTLR start "entryRuleWord"
    // InternalNLX.g:1009:1: entryRuleWord : ruleWord EOF ;
    public final void entryRuleWord() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1013:1: ( ruleWord EOF )
            // InternalNLX.g:1014:1: ruleWord EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleWord"


    // $ANTLR start "ruleWord"
    // InternalNLX.g:1024:1: ruleWord : ( ( rule__Word__Group__0 ) ) ;
    public final void ruleWord() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1029:2: ( ( ( rule__Word__Group__0 ) ) )
            // InternalNLX.g:1030:2: ( ( rule__Word__Group__0 ) )
            {
            // InternalNLX.g:1030:2: ( ( rule__Word__Group__0 ) )
            // InternalNLX.g:1031:3: ( rule__Word__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getGroup()); 
            }
            // InternalNLX.g:1032:3: ( rule__Word__Group__0 )
            // InternalNLX.g:1032:4: rule__Word__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleWord"


    // $ANTLR start "entryRuleWordShort"
    // InternalNLX.g:1042:1: entryRuleWordShort : ruleWordShort EOF ;
    public final void entryRuleWordShort() throws RecognitionException {
        try {
            // InternalNLX.g:1043:1: ( ruleWordShort EOF )
            // InternalNLX.g:1044:1: ruleWordShort EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordShortRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleWordShort();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordShortRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWordShort"


    // $ANTLR start "ruleWordShort"
    // InternalNLX.g:1051:1: ruleWordShort : ( ( rule__WordShort__Group__0 ) ) ;
    public final void ruleWordShort() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1055:2: ( ( ( rule__WordShort__Group__0 ) ) )
            // InternalNLX.g:1056:2: ( ( rule__WordShort__Group__0 ) )
            {
            // InternalNLX.g:1056:2: ( ( rule__WordShort__Group__0 ) )
            // InternalNLX.g:1057:3: ( rule__WordShort__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordShortAccess().getGroup()); 
            }
            // InternalNLX.g:1058:3: ( rule__WordShort__Group__0 )
            // InternalNLX.g:1058:4: rule__WordShort__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WordShort__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordShortAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWordShort"


    // $ANTLR start "entryRuleFragmentX"
    // InternalNLX.g:1067:1: entryRuleFragmentX : ruleFragmentX EOF ;
    public final void entryRuleFragmentX() throws RecognitionException {
        try {
            // InternalNLX.g:1068:1: ( ruleFragmentX EOF )
            // InternalNLX.g:1069:1: ruleFragmentX EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFragmentXRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFragmentX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFragmentXRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFragmentX"


    // $ANTLR start "ruleFragmentX"
    // InternalNLX.g:1076:1: ruleFragmentX : ( ( rule__FragmentX__Alternatives ) ) ;
    public final void ruleFragmentX() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1080:2: ( ( ( rule__FragmentX__Alternatives ) ) )
            // InternalNLX.g:1081:2: ( ( rule__FragmentX__Alternatives ) )
            {
            // InternalNLX.g:1081:2: ( ( rule__FragmentX__Alternatives ) )
            // InternalNLX.g:1082:3: ( rule__FragmentX__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFragmentXAccess().getAlternatives()); 
            }
            // InternalNLX.g:1083:3: ( rule__FragmentX__Alternatives )
            // InternalNLX.g:1083:4: rule__FragmentX__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FragmentX__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFragmentXAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFragmentX"


    // $ANTLR start "entryRuleFragment"
    // InternalNLX.g:1092:1: entryRuleFragment : ruleFragment EOF ;
    public final void entryRuleFragment() throws RecognitionException {
        try {
            // InternalNLX.g:1093:1: ( ruleFragment EOF )
            // InternalNLX.g:1094:1: ruleFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFragmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFragmentRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFragment"


    // $ANTLR start "ruleFragment"
    // InternalNLX.g:1101:1: ruleFragment : ( ( rule__Fragment__Alternatives ) ) ;
    public final void ruleFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1105:2: ( ( ( rule__Fragment__Alternatives ) ) )
            // InternalNLX.g:1106:2: ( ( rule__Fragment__Alternatives ) )
            {
            // InternalNLX.g:1106:2: ( ( rule__Fragment__Alternatives ) )
            // InternalNLX.g:1107:3: ( rule__Fragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFragmentAccess().getAlternatives()); 
            }
            // InternalNLX.g:1108:3: ( rule__Fragment__Alternatives )
            // InternalNLX.g:1108:4: rule__Fragment__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Fragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFragment"


    // $ANTLR start "entryRuleAsterisk"
    // InternalNLX.g:1117:1: entryRuleAsterisk : ruleAsterisk EOF ;
    public final void entryRuleAsterisk() throws RecognitionException {
        try {
            // InternalNLX.g:1118:1: ( ruleAsterisk EOF )
            // InternalNLX.g:1119:1: ruleAsterisk EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAsteriskRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAsterisk();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAsteriskRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAsterisk"


    // $ANTLR start "ruleAsterisk"
    // InternalNLX.g:1126:1: ruleAsterisk : ( ( rule__Asterisk__Alternatives ) ) ;
    public final void ruleAsterisk() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1130:2: ( ( ( rule__Asterisk__Alternatives ) ) )
            // InternalNLX.g:1131:2: ( ( rule__Asterisk__Alternatives ) )
            {
            // InternalNLX.g:1131:2: ( ( rule__Asterisk__Alternatives ) )
            // InternalNLX.g:1132:3: ( rule__Asterisk__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAsteriskAccess().getAlternatives()); 
            }
            // InternalNLX.g:1133:3: ( rule__Asterisk__Alternatives )
            // InternalNLX.g:1133:4: rule__Asterisk__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Asterisk__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAsteriskAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAsterisk"


    // $ANTLR start "entryRuleHashP"
    // InternalNLX.g:1142:1: entryRuleHashP : ruleHashP EOF ;
    public final void entryRuleHashP() throws RecognitionException {
        try {
            // InternalNLX.g:1143:1: ( ruleHashP EOF )
            // InternalNLX.g:1144:1: ruleHashP EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHashPRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleHashP();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHashPRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleHashP"


    // $ANTLR start "ruleHashP"
    // InternalNLX.g:1151:1: ruleHashP : ( RULE_HASH ) ;
    public final void ruleHashP() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1155:2: ( ( RULE_HASH ) )
            // InternalNLX.g:1156:2: ( RULE_HASH )
            {
            // InternalNLX.g:1156:2: ( RULE_HASH )
            // InternalNLX.g:1157:3: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHashPAccess().getHASHTerminalRuleCall()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHashPAccess().getHASHTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleHashP"


    // $ANTLR start "entryRuleItWord"
    // InternalNLX.g:1167:1: entryRuleItWord : ruleItWord EOF ;
    public final void entryRuleItWord() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1171:1: ( ruleItWord EOF )
            // InternalNLX.g:1172:1: ruleItWord EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleItWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleItWord"


    // $ANTLR start "ruleItWord"
    // InternalNLX.g:1182:1: ruleItWord : ( ( rule__ItWord__Group__0 ) ) ;
    public final void ruleItWord() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1187:2: ( ( ( rule__ItWord__Group__0 ) ) )
            // InternalNLX.g:1188:2: ( ( rule__ItWord__Group__0 ) )
            {
            // InternalNLX.g:1188:2: ( ( rule__ItWord__Group__0 ) )
            // InternalNLX.g:1189:3: ( rule__ItWord__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getGroup()); 
            }
            // InternalNLX.g:1190:3: ( rule__ItWord__Group__0 )
            // InternalNLX.g:1190:4: rule__ItWord__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleItWord"


    // $ANTLR start "entryRuleWhitespace"
    // InternalNLX.g:1200:1: entryRuleWhitespace : ruleWhitespace EOF ;
    public final void entryRuleWhitespace() throws RecognitionException {
        try {
            // InternalNLX.g:1201:1: ( ruleWhitespace EOF )
            // InternalNLX.g:1202:1: ruleWhitespace EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhitespaceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleWhitespace();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhitespaceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWhitespace"


    // $ANTLR start "ruleWhitespace"
    // InternalNLX.g:1209:1: ruleWhitespace : ( ( rule__Whitespace__Alternatives ) ) ;
    public final void ruleWhitespace() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1213:2: ( ( ( rule__Whitespace__Alternatives ) ) )
            // InternalNLX.g:1214:2: ( ( rule__Whitespace__Alternatives ) )
            {
            // InternalNLX.g:1214:2: ( ( rule__Whitespace__Alternatives ) )
            // InternalNLX.g:1215:3: ( rule__Whitespace__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhitespaceAccess().getAlternatives()); 
            }
            // InternalNLX.g:1216:3: ( rule__Whitespace__Alternatives )
            // InternalNLX.g:1216:4: rule__Whitespace__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Whitespace__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhitespaceAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWhitespace"


    // $ANTLR start "entryRuleItWordEl"
    // InternalNLX.g:1225:1: entryRuleItWordEl : ruleItWordEl EOF ;
    public final void entryRuleItWordEl() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1229:1: ( ruleItWordEl EOF )
            // InternalNLX.g:1230:1: ruleItWordEl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordElRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleItWordEl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordElRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleItWordEl"


    // $ANTLR start "ruleItWordEl"
    // InternalNLX.g:1240:1: ruleItWordEl : ( ( rule__ItWordEl__Alternatives ) ) ;
    public final void ruleItWordEl() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1245:2: ( ( ( rule__ItWordEl__Alternatives ) ) )
            // InternalNLX.g:1246:2: ( ( rule__ItWordEl__Alternatives ) )
            {
            // InternalNLX.g:1246:2: ( ( rule__ItWordEl__Alternatives ) )
            // InternalNLX.g:1247:3: ( rule__ItWordEl__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordElAccess().getAlternatives()); 
            }
            // InternalNLX.g:1248:3: ( rule__ItWordEl__Alternatives )
            // InternalNLX.g:1248:4: rule__ItWordEl__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWordEl__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordElAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleItWordEl"


    // $ANTLR start "entryRuleItWordElurl"
    // InternalNLX.g:1258:1: entryRuleItWordElurl : ruleItWordElurl EOF ;
    public final void entryRuleItWordElurl() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1262:1: ( ruleItWordElurl EOF )
            // InternalNLX.g:1263:1: ruleItWordElurl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordElurlRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleItWordElurl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordElurlRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleItWordElurl"


    // $ANTLR start "ruleItWordElurl"
    // InternalNLX.g:1273:1: ruleItWordElurl : ( ( rule__ItWordElurl__Alternatives ) ) ;
    public final void ruleItWordElurl() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1278:2: ( ( ( rule__ItWordElurl__Alternatives ) ) )
            // InternalNLX.g:1279:2: ( ( rule__ItWordElurl__Alternatives ) )
            {
            // InternalNLX.g:1279:2: ( ( rule__ItWordElurl__Alternatives ) )
            // InternalNLX.g:1280:3: ( rule__ItWordElurl__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordElurlAccess().getAlternatives()); 
            }
            // InternalNLX.g:1281:3: ( rule__ItWordElurl__Alternatives )
            // InternalNLX.g:1281:4: rule__ItWordElurl__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWordElurl__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordElurlAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleItWordElurl"


    // $ANTLR start "entryRuleItWordElX"
    // InternalNLX.g:1291:1: entryRuleItWordElX : ruleItWordElX EOF ;
    public final void entryRuleItWordElX() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1295:1: ( ruleItWordElX EOF )
            // InternalNLX.g:1296:1: ruleItWordElX EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordElXRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleItWordElX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordElXRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleItWordElX"


    // $ANTLR start "ruleItWordElX"
    // InternalNLX.g:1306:1: ruleItWordElX : ( ( rule__ItWordElX__Alternatives ) ) ;
    public final void ruleItWordElX() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1311:2: ( ( ( rule__ItWordElX__Alternatives ) ) )
            // InternalNLX.g:1312:2: ( ( rule__ItWordElX__Alternatives ) )
            {
            // InternalNLX.g:1312:2: ( ( rule__ItWordElX__Alternatives ) )
            // InternalNLX.g:1313:3: ( rule__ItWordElX__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordElXAccess().getAlternatives()); 
            }
            // InternalNLX.g:1314:3: ( rule__ItWordElX__Alternatives )
            // InternalNLX.g:1314:4: rule__ItWordElX__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWordElX__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordElXAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleItWordElX"


    // $ANTLR start "entryRuleItWordElXx"
    // InternalNLX.g:1324:1: entryRuleItWordElXx : ruleItWordElXx EOF ;
    public final void entryRuleItWordElXx() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1328:1: ( ruleItWordElXx EOF )
            // InternalNLX.g:1329:1: ruleItWordElXx EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordElXxRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleItWordElXx();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordElXxRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleItWordElXx"


    // $ANTLR start "ruleItWordElXx"
    // InternalNLX.g:1339:1: ruleItWordElXx : ( ( ( rule__ItWordElXx__Alternatives ) ) ( ( rule__ItWordElXx__Alternatives )* ) ) ;
    public final void ruleItWordElXx() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1344:2: ( ( ( ( rule__ItWordElXx__Alternatives ) ) ( ( rule__ItWordElXx__Alternatives )* ) ) )
            // InternalNLX.g:1345:2: ( ( ( rule__ItWordElXx__Alternatives ) ) ( ( rule__ItWordElXx__Alternatives )* ) )
            {
            // InternalNLX.g:1345:2: ( ( ( rule__ItWordElXx__Alternatives ) ) ( ( rule__ItWordElXx__Alternatives )* ) )
            // InternalNLX.g:1346:3: ( ( rule__ItWordElXx__Alternatives ) ) ( ( rule__ItWordElXx__Alternatives )* )
            {
            // InternalNLX.g:1346:3: ( ( rule__ItWordElXx__Alternatives ) )
            // InternalNLX.g:1347:4: ( rule__ItWordElXx__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordElXxAccess().getAlternatives()); 
            }
            // InternalNLX.g:1348:4: ( rule__ItWordElXx__Alternatives )
            // InternalNLX.g:1348:5: rule__ItWordElXx__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ItWordElXx__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordElXxAccess().getAlternatives()); 
            }

            }

            // InternalNLX.g:1351:3: ( ( rule__ItWordElXx__Alternatives )* )
            // InternalNLX.g:1352:4: ( rule__ItWordElXx__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordElXxAccess().getAlternatives()); 
            }
            // InternalNLX.g:1353:4: ( rule__ItWordElXx__Alternatives )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==RULE_INT||LA3_0==RULE_MULTI||(LA3_0>=RULE_ID && LA3_0<=RULE_CURL)) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalNLX.g:1353:5: rule__ItWordElXx__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    rule__ItWordElXx__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordElXxAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleItWordElXx"


    // $ANTLR start "entryRuleSeparatorsL"
    // InternalNLX.g:1364:1: entryRuleSeparatorsL : ruleSeparatorsL EOF ;
    public final void entryRuleSeparatorsL() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1368:1: ( ruleSeparatorsL EOF )
            // InternalNLX.g:1369:1: ruleSeparatorsL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSeparatorsLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSeparatorsL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSeparatorsLRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSeparatorsL"


    // $ANTLR start "ruleSeparatorsL"
    // InternalNLX.g:1379:1: ruleSeparatorsL : ( ( rule__SeparatorsL__Alternatives ) ) ;
    public final void ruleSeparatorsL() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1384:2: ( ( ( rule__SeparatorsL__Alternatives ) ) )
            // InternalNLX.g:1385:2: ( ( rule__SeparatorsL__Alternatives ) )
            {
            // InternalNLX.g:1385:2: ( ( rule__SeparatorsL__Alternatives ) )
            // InternalNLX.g:1386:3: ( rule__SeparatorsL__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSeparatorsLAccess().getAlternatives()); 
            }
            // InternalNLX.g:1387:3: ( rule__SeparatorsL__Alternatives )
            // InternalNLX.g:1387:4: rule__SeparatorsL__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SeparatorsL__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSeparatorsLAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSeparatorsL"


    // $ANTLR start "entryRuleSeparatorsIt"
    // InternalNLX.g:1397:1: entryRuleSeparatorsIt : ruleSeparatorsIt EOF ;
    public final void entryRuleSeparatorsIt() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1401:1: ( ruleSeparatorsIt EOF )
            // InternalNLX.g:1402:1: ruleSeparatorsIt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSeparatorsItRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSeparatorsIt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSeparatorsItRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSeparatorsIt"


    // $ANTLR start "ruleSeparatorsIt"
    // InternalNLX.g:1412:1: ruleSeparatorsIt : ( ( rule__SeparatorsIt__Alternatives ) ) ;
    public final void ruleSeparatorsIt() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1417:2: ( ( ( rule__SeparatorsIt__Alternatives ) ) )
            // InternalNLX.g:1418:2: ( ( rule__SeparatorsIt__Alternatives ) )
            {
            // InternalNLX.g:1418:2: ( ( rule__SeparatorsIt__Alternatives ) )
            // InternalNLX.g:1419:3: ( rule__SeparatorsIt__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSeparatorsItAccess().getAlternatives()); 
            }
            // InternalNLX.g:1420:3: ( rule__SeparatorsIt__Alternatives )
            // InternalNLX.g:1420:4: rule__SeparatorsIt__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SeparatorsIt__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSeparatorsItAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSeparatorsIt"

}

@SuppressWarnings("all")
abstract class InternalNLXParser3 extends InternalNLXParser2 {

        InternalNLXParser3(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalNLXParser3(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "entryRuleAllSep"
    // InternalNLX.g:1430:1: entryRuleAllSep : ruleAllSep EOF ;
    public final void entryRuleAllSep() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1434:1: ( ruleAllSep EOF )
            // InternalNLX.g:1435:1: ruleAllSep EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAllSepRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAllSep();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAllSepRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleAllSep"


    // $ANTLR start "ruleAllSep"
    // InternalNLX.g:1445:1: ruleAllSep : ( ( rule__AllSep__Alternatives ) ) ;
    public final void ruleAllSep() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1450:2: ( ( ( rule__AllSep__Alternatives ) ) )
            // InternalNLX.g:1451:2: ( ( rule__AllSep__Alternatives ) )
            {
            // InternalNLX.g:1451:2: ( ( rule__AllSep__Alternatives ) )
            // InternalNLX.g:1452:3: ( rule__AllSep__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAllSepAccess().getAlternatives()); 
            }
            // InternalNLX.g:1453:3: ( rule__AllSep__Alternatives )
            // InternalNLX.g:1453:4: rule__AllSep__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AllSep__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAllSepAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleAllSep"


    // $ANTLR start "entryRuleQuote"
    // InternalNLX.g:1463:1: entryRuleQuote : ruleQuote EOF ;
    public final void entryRuleQuote() throws RecognitionException {
        try {
            // InternalNLX.g:1464:1: ( ruleQuote EOF )
            // InternalNLX.g:1465:1: ruleQuote EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuoteRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleQuote();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuoteRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQuote"


    // $ANTLR start "ruleQuote"
    // InternalNLX.g:1472:1: ruleQuote : ( ( rule__Quote__QuoteAssignment ) ) ;
    public final void ruleQuote() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1476:2: ( ( ( rule__Quote__QuoteAssignment ) ) )
            // InternalNLX.g:1477:2: ( ( rule__Quote__QuoteAssignment ) )
            {
            // InternalNLX.g:1477:2: ( ( rule__Quote__QuoteAssignment ) )
            // InternalNLX.g:1478:3: ( rule__Quote__QuoteAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuoteAccess().getQuoteAssignment()); 
            }
            // InternalNLX.g:1479:3: ( rule__Quote__QuoteAssignment )
            // InternalNLX.g:1479:4: rule__Quote__QuoteAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Quote__QuoteAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuoteAccess().getQuoteAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQuote"


    // $ANTLR start "entryRuleUnit"
    // InternalNLX.g:1488:1: entryRuleUnit : ruleUnit EOF ;
    public final void entryRuleUnit() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1492:1: ( ruleUnit EOF )
            // InternalNLX.g:1493:1: ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalNLX.g:1503:1: ruleUnit : ( ( rule__Unit__Group__0 ) ) ;
    public final void ruleUnit() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1508:2: ( ( ( rule__Unit__Group__0 ) ) )
            // InternalNLX.g:1509:2: ( ( rule__Unit__Group__0 ) )
            {
            // InternalNLX.g:1509:2: ( ( rule__Unit__Group__0 ) )
            // InternalNLX.g:1510:3: ( rule__Unit__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup()); 
            }
            // InternalNLX.g:1511:3: ( rule__Unit__Group__0 )
            // InternalNLX.g:1511:4: rule__Unit__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleSimpleUnit"
    // InternalNLX.g:1521:1: entryRuleSimpleUnit : ruleSimpleUnit EOF ;
    public final void entryRuleSimpleUnit() throws RecognitionException {
        try {
            // InternalNLX.g:1522:1: ( ruleSimpleUnit EOF )
            // InternalNLX.g:1523:1: ruleSimpleUnit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleUnitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSimpleUnit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleUnitRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleUnit"


    // $ANTLR start "ruleSimpleUnit"
    // InternalNLX.g:1530:1: ruleSimpleUnit : ( ( rule__SimpleUnit__Alternatives ) ) ;
    public final void ruleSimpleUnit() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1534:2: ( ( ( rule__SimpleUnit__Alternatives ) ) )
            // InternalNLX.g:1535:2: ( ( rule__SimpleUnit__Alternatives ) )
            {
            // InternalNLX.g:1535:2: ( ( rule__SimpleUnit__Alternatives ) )
            // InternalNLX.g:1536:3: ( rule__SimpleUnit__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleUnitAccess().getAlternatives()); 
            }
            // InternalNLX.g:1537:3: ( rule__SimpleUnit__Alternatives )
            // InternalNLX.g:1537:4: rule__SimpleUnit__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleUnit__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleUnitAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleUnit"


    // $ANTLR start "entryRuleChapter_Unit_HI"
    // InternalNLX.g:1546:1: entryRuleChapter_Unit_HI : ruleChapter_Unit_HI EOF ;
    public final void entryRuleChapter_Unit_HI() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1550:1: ( ruleChapter_Unit_HI EOF )
            // InternalNLX.g:1551:1: ruleChapter_Unit_HI EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_HIRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChapter_Unit_HI();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_HIRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleChapter_Unit_HI"


    // $ANTLR start "ruleChapter_Unit_HI"
    // InternalNLX.g:1561:1: ruleChapter_Unit_HI : ( ( rule__Chapter_Unit_HI__Group__0 ) ) ;
    public final void ruleChapter_Unit_HI() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1566:2: ( ( ( rule__Chapter_Unit_HI__Group__0 ) ) )
            // InternalNLX.g:1567:2: ( ( rule__Chapter_Unit_HI__Group__0 ) )
            {
            // InternalNLX.g:1567:2: ( ( rule__Chapter_Unit_HI__Group__0 ) )
            // InternalNLX.g:1568:3: ( rule__Chapter_Unit_HI__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_HIAccess().getGroup()); 
            }
            // InternalNLX.g:1569:3: ( rule__Chapter_Unit_HI__Group__0 )
            // InternalNLX.g:1569:4: rule__Chapter_Unit_HI__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Chapter_Unit_HI__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_HIAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleChapter_Unit_HI"


    // $ANTLR start "entryRuleChapter_Unit_Low"
    // InternalNLX.g:1579:1: entryRuleChapter_Unit_Low : ruleChapter_Unit_Low EOF ;
    public final void entryRuleChapter_Unit_Low() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1583:1: ( ruleChapter_Unit_Low EOF )
            // InternalNLX.g:1584:1: ruleChapter_Unit_Low EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_LowRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChapter_Unit_Low();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_LowRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleChapter_Unit_Low"


    // $ANTLR start "ruleChapter_Unit_Low"
    // InternalNLX.g:1594:1: ruleChapter_Unit_Low : ( ( rule__Chapter_Unit_Low__Group__0 ) ) ;
    public final void ruleChapter_Unit_Low() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1599:2: ( ( ( rule__Chapter_Unit_Low__Group__0 ) ) )
            // InternalNLX.g:1600:2: ( ( rule__Chapter_Unit_Low__Group__0 ) )
            {
            // InternalNLX.g:1600:2: ( ( rule__Chapter_Unit_Low__Group__0 ) )
            // InternalNLX.g:1601:3: ( rule__Chapter_Unit_Low__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_LowAccess().getGroup()); 
            }
            // InternalNLX.g:1602:3: ( rule__Chapter_Unit_Low__Group__0 )
            // InternalNLX.g:1602:4: rule__Chapter_Unit_Low__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Chapter_Unit_Low__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_LowAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleChapter_Unit_Low"


    // $ANTLR start "entryRuleHashNumber"
    // InternalNLX.g:1612:1: entryRuleHashNumber : ruleHashNumber EOF ;
    public final void entryRuleHashNumber() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1616:1: ( ruleHashNumber EOF )
            // InternalNLX.g:1617:1: ruleHashNumber EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHashNumberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleHashNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHashNumberRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleHashNumber"


    // $ANTLR start "ruleHashNumber"
    // InternalNLX.g:1627:1: ruleHashNumber : ( ( rule__HashNumber__Group__0 ) ) ;
    public final void ruleHashNumber() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1632:2: ( ( ( rule__HashNumber__Group__0 ) ) )
            // InternalNLX.g:1633:2: ( ( rule__HashNumber__Group__0 ) )
            {
            // InternalNLX.g:1633:2: ( ( rule__HashNumber__Group__0 ) )
            // InternalNLX.g:1634:3: ( rule__HashNumber__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHashNumberAccess().getGroup()); 
            }
            // InternalNLX.g:1635:3: ( rule__HashNumber__Group__0 )
            // InternalNLX.g:1635:4: rule__HashNumber__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HashNumber__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHashNumberAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleHashNumber"


    // $ANTLR start "entryRuleChapterAlpha"
    // InternalNLX.g:1645:1: entryRuleChapterAlpha : ruleChapterAlpha EOF ;
    public final void entryRuleChapterAlpha() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1649:1: ( ruleChapterAlpha EOF )
            // InternalNLX.g:1650:1: ruleChapterAlpha EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChapterAlpha();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleChapterAlpha"


    // $ANTLR start "ruleChapterAlpha"
    // InternalNLX.g:1660:1: ruleChapterAlpha : ( ( rule__ChapterAlpha__Group__0 ) ) ;
    public final void ruleChapterAlpha() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1665:2: ( ( ( rule__ChapterAlpha__Group__0 ) ) )
            // InternalNLX.g:1666:2: ( ( rule__ChapterAlpha__Group__0 ) )
            {
            // InternalNLX.g:1666:2: ( ( rule__ChapterAlpha__Group__0 ) )
            // InternalNLX.g:1667:3: ( rule__ChapterAlpha__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getGroup()); 
            }
            // InternalNLX.g:1668:3: ( rule__ChapterAlpha__Group__0 )
            // InternalNLX.g:1668:4: rule__ChapterAlpha__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleChapterAlpha"


    // $ANTLR start "entryRuleChapterIntermediate"
    // InternalNLX.g:1678:1: entryRuleChapterIntermediate : ruleChapterIntermediate EOF ;
    public final void entryRuleChapterIntermediate() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1682:1: ( ruleChapterIntermediate EOF )
            // InternalNLX.g:1683:1: ruleChapterIntermediate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterIntermediateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChapterIntermediate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterIntermediateRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleChapterIntermediate"


    // $ANTLR start "ruleChapterIntermediate"
    // InternalNLX.g:1693:1: ruleChapterIntermediate : ( ( rule__ChapterIntermediate__Alternatives ) ) ;
    public final void ruleChapterIntermediate() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1698:2: ( ( ( rule__ChapterIntermediate__Alternatives ) ) )
            // InternalNLX.g:1699:2: ( ( rule__ChapterIntermediate__Alternatives ) )
            {
            // InternalNLX.g:1699:2: ( ( rule__ChapterIntermediate__Alternatives ) )
            // InternalNLX.g:1700:3: ( rule__ChapterIntermediate__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterIntermediateAccess().getAlternatives()); 
            }
            // InternalNLX.g:1701:3: ( rule__ChapterIntermediate__Alternatives )
            // InternalNLX.g:1701:4: rule__ChapterIntermediate__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterIntermediate__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterIntermediateAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleChapterIntermediate"


    // $ANTLR start "entryRuleSymbolsX"
    // InternalNLX.g:1711:1: entryRuleSymbolsX : ruleSymbolsX EOF ;
    public final void entryRuleSymbolsX() throws RecognitionException {
        try {
            // InternalNLX.g:1712:1: ( ruleSymbolsX EOF )
            // InternalNLX.g:1713:1: ruleSymbolsX EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSymbolsXRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSymbolsX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSymbolsXRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSymbolsX"


    // $ANTLR start "ruleSymbolsX"
    // InternalNLX.g:1720:1: ruleSymbolsX : ( ( rule__SymbolsX__Group__0 ) ) ;
    public final void ruleSymbolsX() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1724:2: ( ( ( rule__SymbolsX__Group__0 ) ) )
            // InternalNLX.g:1725:2: ( ( rule__SymbolsX__Group__0 ) )
            {
            // InternalNLX.g:1725:2: ( ( rule__SymbolsX__Group__0 ) )
            // InternalNLX.g:1726:3: ( rule__SymbolsX__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSymbolsXAccess().getGroup()); 
            }
            // InternalNLX.g:1727:3: ( rule__SymbolsX__Group__0 )
            // InternalNLX.g:1727:4: rule__SymbolsX__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SymbolsX__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSymbolsXAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSymbolsX"


    // $ANTLR start "entryRuleSpecialCh"
    // InternalNLX.g:1736:1: entryRuleSpecialCh : ruleSpecialCh EOF ;
    public final void entryRuleSpecialCh() throws RecognitionException {
        try {
            // InternalNLX.g:1737:1: ( ruleSpecialCh EOF )
            // InternalNLX.g:1738:1: ruleSpecialCh EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialChRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSpecialCh();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialChRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpecialCh"


    // $ANTLR start "ruleSpecialCh"
    // InternalNLX.g:1745:1: ruleSpecialCh : ( ( rule__SpecialCh__Alternatives ) ) ;
    public final void ruleSpecialCh() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1749:2: ( ( ( rule__SpecialCh__Alternatives ) ) )
            // InternalNLX.g:1750:2: ( ( rule__SpecialCh__Alternatives ) )
            {
            // InternalNLX.g:1750:2: ( ( rule__SpecialCh__Alternatives ) )
            // InternalNLX.g:1751:3: ( rule__SpecialCh__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialChAccess().getAlternatives()); 
            }
            // InternalNLX.g:1752:3: ( rule__SpecialCh__Alternatives )
            // InternalNLX.g:1752:4: rule__SpecialCh__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialCh__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialChAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpecialCh"


    // $ANTLR start "entryRuleSymbols"
    // InternalNLX.g:1761:1: entryRuleSymbols : ruleSymbols EOF ;
    public final void entryRuleSymbols() throws RecognitionException {
        try {
            // InternalNLX.g:1762:1: ( ruleSymbols EOF )
            // InternalNLX.g:1763:1: ruleSymbols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSymbolsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSymbols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSymbolsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSymbols"


    // $ANTLR start "ruleSymbols"
    // InternalNLX.g:1770:1: ruleSymbols : ( ( rule__Symbols__Group__0 ) ) ;
    public final void ruleSymbols() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1774:2: ( ( ( rule__Symbols__Group__0 ) ) )
            // InternalNLX.g:1775:2: ( ( rule__Symbols__Group__0 ) )
            {
            // InternalNLX.g:1775:2: ( ( rule__Symbols__Group__0 ) )
            // InternalNLX.g:1776:3: ( rule__Symbols__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSymbolsAccess().getGroup()); 
            }
            // InternalNLX.g:1777:3: ( rule__Symbols__Group__0 )
            // InternalNLX.g:1777:4: rule__Symbols__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Symbols__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSymbolsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSymbols"


    // $ANTLR start "entryRuleShortcutGen"
    // InternalNLX.g:1786:1: entryRuleShortcutGen : ruleShortcutGen EOF ;
    public final void entryRuleShortcutGen() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1790:1: ( ruleShortcutGen EOF )
            // InternalNLX.g:1791:1: ruleShortcutGen EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleShortcutGen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleShortcutGen"


    // $ANTLR start "ruleShortcutGen"
    // InternalNLX.g:1801:1: ruleShortcutGen : ( ( rule__ShortcutGen__Group__0 ) ) ;
    public final void ruleShortcutGen() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1806:2: ( ( ( rule__ShortcutGen__Group__0 ) ) )
            // InternalNLX.g:1807:2: ( ( rule__ShortcutGen__Group__0 ) )
            {
            // InternalNLX.g:1807:2: ( ( rule__ShortcutGen__Group__0 ) )
            // InternalNLX.g:1808:3: ( rule__ShortcutGen__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getGroup()); 
            }
            // InternalNLX.g:1809:3: ( rule__ShortcutGen__Group__0 )
            // InternalNLX.g:1809:4: rule__ShortcutGen__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutGen__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleShortcutGen"


    // $ANTLR start "entryRuleShortcutLib"
    // InternalNLX.g:1819:1: entryRuleShortcutLib : ruleShortcutLib EOF ;
    public final void entryRuleShortcutLib() throws RecognitionException {
        try {
            // InternalNLX.g:1820:1: ( ruleShortcutLib EOF )
            // InternalNLX.g:1821:1: ruleShortcutLib EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutLibRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleShortcutLib();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutLibRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleShortcutLib"


    // $ANTLR start "ruleShortcutLib"
    // InternalNLX.g:1828:1: ruleShortcutLib : ( ( rule__ShortcutLib__Group__0 ) ) ;
    public final void ruleShortcutLib() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1832:2: ( ( ( rule__ShortcutLib__Group__0 ) ) )
            // InternalNLX.g:1833:2: ( ( rule__ShortcutLib__Group__0 ) )
            {
            // InternalNLX.g:1833:2: ( ( rule__ShortcutLib__Group__0 ) )
            // InternalNLX.g:1834:3: ( rule__ShortcutLib__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutLibAccess().getGroup()); 
            }
            // InternalNLX.g:1835:3: ( rule__ShortcutLib__Group__0 )
            // InternalNLX.g:1835:4: rule__ShortcutLib__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutLib__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutLibAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShortcutLib"


    // $ANTLR start "entryRuleShortCut"
    // InternalNLX.g:1844:1: entryRuleShortCut : ruleShortCut EOF ;
    public final void entryRuleShortCut() throws RecognitionException {
        try {
            // InternalNLX.g:1845:1: ( ruleShortCut EOF )
            // InternalNLX.g:1846:1: ruleShortCut EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortCutRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleShortCut();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortCutRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleShortCut"


    // $ANTLR start "ruleShortCut"
    // InternalNLX.g:1853:1: ruleShortCut : ( ( rule__ShortCut__Alternatives ) ) ;
    public final void ruleShortCut() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1857:2: ( ( ( rule__ShortCut__Alternatives ) ) )
            // InternalNLX.g:1858:2: ( ( rule__ShortCut__Alternatives ) )
            {
            // InternalNLX.g:1858:2: ( ( rule__ShortCut__Alternatives ) )
            // InternalNLX.g:1859:3: ( rule__ShortCut__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortCutAccess().getAlternatives()); 
            }
            // InternalNLX.g:1860:3: ( rule__ShortCut__Alternatives )
            // InternalNLX.g:1860:4: rule__ShortCut__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortCut__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortCutAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShortCut"


    // $ANTLR start "entryRuleIgnoredText"
    // InternalNLX.g:1869:1: entryRuleIgnoredText : ruleIgnoredText EOF ;
    public final void entryRuleIgnoredText() throws RecognitionException {
        try {
            // InternalNLX.g:1870:1: ( ruleIgnoredText EOF )
            // InternalNLX.g:1871:1: ruleIgnoredText EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIgnoredTextRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIgnoredText();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIgnoredTextRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIgnoredText"


    // $ANTLR start "ruleIgnoredText"
    // InternalNLX.g:1878:1: ruleIgnoredText : ( ( rule__IgnoredText__IgnoredAssignment ) ) ;
    public final void ruleIgnoredText() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1882:2: ( ( ( rule__IgnoredText__IgnoredAssignment ) ) )
            // InternalNLX.g:1883:2: ( ( rule__IgnoredText__IgnoredAssignment ) )
            {
            // InternalNLX.g:1883:2: ( ( rule__IgnoredText__IgnoredAssignment ) )
            // InternalNLX.g:1884:3: ( rule__IgnoredText__IgnoredAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIgnoredTextAccess().getIgnoredAssignment()); 
            }
            // InternalNLX.g:1885:3: ( rule__IgnoredText__IgnoredAssignment )
            // InternalNLX.g:1885:4: rule__IgnoredText__IgnoredAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IgnoredText__IgnoredAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIgnoredTextAccess().getIgnoredAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIgnoredText"


    // $ANTLR start "entryRulesimpleNum"
    // InternalNLX.g:1894:1: entryRulesimpleNum : rulesimpleNum EOF ;
    public final void entryRulesimpleNum() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1898:1: ( rulesimpleNum EOF )
            // InternalNLX.g:1899:1: rulesimpleNum EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleNumRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulesimpleNum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleNumRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRulesimpleNum"


    // $ANTLR start "rulesimpleNum"
    // InternalNLX.g:1909:1: rulesimpleNum : ( RULE_INT ) ;
    public final void rulesimpleNum() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1914:2: ( ( RULE_INT ) )
            // InternalNLX.g:1915:2: ( RULE_INT )
            {
            // InternalNLX.g:1915:2: ( RULE_INT )
            // InternalNLX.g:1916:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleNumAccess().getINTTerminalRuleCall()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleNumAccess().getINTTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "rulesimpleNum"


    // $ANTLR start "entryRuleItNum"
    // InternalNLX.g:1927:1: entryRuleItNum : ruleItNum EOF ;
    public final void entryRuleItNum() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1931:1: ( ruleItNum EOF )
            // InternalNLX.g:1932:1: ruleItNum EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItNumRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleItNum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItNumRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleItNum"


    // $ANTLR start "ruleItNum"
    // InternalNLX.g:1942:1: ruleItNum : ( ( rule__ItNum__Group__0 ) ) ;
    public final void ruleItNum() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1947:2: ( ( ( rule__ItNum__Group__0 ) ) )
            // InternalNLX.g:1948:2: ( ( rule__ItNum__Group__0 ) )
            {
            // InternalNLX.g:1948:2: ( ( rule__ItNum__Group__0 ) )
            // InternalNLX.g:1949:3: ( rule__ItNum__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItNumAccess().getGroup()); 
            }
            // InternalNLX.g:1950:3: ( rule__ItNum__Group__0 )
            // InternalNLX.g:1950:4: rule__ItNum__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItNum__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItNumAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleItNum"


    // $ANTLR start "entryRuleSpecialSymbols"
    // InternalNLX.g:1960:1: entryRuleSpecialSymbols : ruleSpecialSymbols EOF ;
    public final void entryRuleSpecialSymbols() throws RecognitionException {
        try {
            // InternalNLX.g:1961:1: ( ruleSpecialSymbols EOF )
            // InternalNLX.g:1962:1: ruleSpecialSymbols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialSymbolsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSpecialSymbols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialSymbolsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpecialSymbols"


    // $ANTLR start "ruleSpecialSymbols"
    // InternalNLX.g:1969:1: ruleSpecialSymbols : ( ( rule__SpecialSymbols__Alternatives ) ) ;
    public final void ruleSpecialSymbols() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:1973:2: ( ( ( rule__SpecialSymbols__Alternatives ) ) )
            // InternalNLX.g:1974:2: ( ( rule__SpecialSymbols__Alternatives ) )
            {
            // InternalNLX.g:1974:2: ( ( rule__SpecialSymbols__Alternatives ) )
            // InternalNLX.g:1975:3: ( rule__SpecialSymbols__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialSymbolsAccess().getAlternatives()); 
            }
            // InternalNLX.g:1976:3: ( rule__SpecialSymbols__Alternatives )
            // InternalNLX.g:1976:4: rule__SpecialSymbols__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialSymbols__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialSymbolsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpecialSymbols"


    // $ANTLR start "entryRuledecimalNumEN"
    // InternalNLX.g:1985:1: entryRuledecimalNumEN : ruledecimalNumEN EOF ;
    public final void entryRuledecimalNumEN() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:1989:1: ( ruledecimalNumEN EOF )
            // InternalNLX.g:1990:1: ruledecimalNumEN EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalNumENRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruledecimalNumEN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalNumENRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuledecimalNumEN"


    // $ANTLR start "ruledecimalNumEN"
    // InternalNLX.g:2000:1: ruledecimalNumEN : ( ( rule__DecimalNumEN__Group__0 ) ) ;
    public final void ruledecimalNumEN() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2005:2: ( ( ( rule__DecimalNumEN__Group__0 ) ) )
            // InternalNLX.g:2006:2: ( ( rule__DecimalNumEN__Group__0 ) )
            {
            // InternalNLX.g:2006:2: ( ( rule__DecimalNumEN__Group__0 ) )
            // InternalNLX.g:2007:3: ( rule__DecimalNumEN__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalNumENAccess().getGroup()); 
            }
            // InternalNLX.g:2008:3: ( rule__DecimalNumEN__Group__0 )
            // InternalNLX.g:2008:4: rule__DecimalNumEN__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalNumEN__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalNumENAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruledecimalNumEN"


    // $ANTLR start "entryRuledecimalNumDE"
    // InternalNLX.g:2018:1: entryRuledecimalNumDE : ruledecimalNumDE EOF ;
    public final void entryRuledecimalNumDE() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:2022:1: ( ruledecimalNumDE EOF )
            // InternalNLX.g:2023:1: ruledecimalNumDE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalNumDERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruledecimalNumDE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalNumDERule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuledecimalNumDE"


    // $ANTLR start "ruledecimalNumDE"
    // InternalNLX.g:2033:1: ruledecimalNumDE : ( ( rule__DecimalNumDE__Group__0 ) ) ;
    public final void ruledecimalNumDE() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2038:2: ( ( ( rule__DecimalNumDE__Group__0 ) ) )
            // InternalNLX.g:2039:2: ( ( rule__DecimalNumDE__Group__0 ) )
            {
            // InternalNLX.g:2039:2: ( ( rule__DecimalNumDE__Group__0 ) )
            // InternalNLX.g:2040:3: ( rule__DecimalNumDE__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalNumDEAccess().getGroup()); 
            }
            // InternalNLX.g:2041:3: ( rule__DecimalNumDE__Group__0 )
            // InternalNLX.g:2041:4: rule__DecimalNumDE__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalNumDE__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalNumDEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruledecimalNumDE"


    // $ANTLR start "entryRulechapterNum"
    // InternalNLX.g:2051:1: entryRulechapterNum : rulechapterNum EOF ;
    public final void entryRulechapterNum() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:2055:1: ( rulechapterNum EOF )
            // InternalNLX.g:2056:1: rulechapterNum EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterNumRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulechapterNum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterNumRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRulechapterNum"


    // $ANTLR start "rulechapterNum"
    // InternalNLX.g:2066:1: rulechapterNum : ( ( rule__ChapterNum__Group__0 ) ) ;
    public final void rulechapterNum() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2071:2: ( ( ( rule__ChapterNum__Group__0 ) ) )
            // InternalNLX.g:2072:2: ( ( rule__ChapterNum__Group__0 ) )
            {
            // InternalNLX.g:2072:2: ( ( rule__ChapterNum__Group__0 ) )
            // InternalNLX.g:2073:3: ( rule__ChapterNum__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterNumAccess().getGroup()); 
            }
            // InternalNLX.g:2074:3: ( rule__ChapterNum__Group__0 )
            // InternalNLX.g:2074:4: rule__ChapterNum__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterNum__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterNumAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "rulechapterNum"


    // $ANTLR start "entryRuleNumber"
    // InternalNLX.g:2084:1: entryRuleNumber : ruleNumber EOF ;
    public final void entryRuleNumber() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:2088:1: ( ruleNumber EOF )
            // InternalNLX.g:2089:1: ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalNLX.g:2099:1: ruleNumber : ( ( rule__Number__Alternatives ) ) ;
    public final void ruleNumber() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2104:2: ( ( ( rule__Number__Alternatives ) ) )
            // InternalNLX.g:2105:2: ( ( rule__Number__Alternatives ) )
            {
            // InternalNLX.g:2105:2: ( ( rule__Number__Alternatives ) )
            // InternalNLX.g:2106:3: ( rule__Number__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives()); 
            }
            // InternalNLX.g:2107:3: ( rule__Number__Alternatives )
            // InternalNLX.g:2107:4: rule__Number__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Number__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleUrlAdress"
    // InternalNLX.g:2117:1: entryRuleUrlAdress : ruleUrlAdress EOF ;
    public final void entryRuleUrlAdress() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:2121:1: ( ruleUrlAdress EOF )
            // InternalNLX.g:2122:1: ruleUrlAdress EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUrlAdress();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleUrlAdress"


    // $ANTLR start "ruleUrlAdress"
    // InternalNLX.g:2132:1: ruleUrlAdress : ( ( rule__UrlAdress__Group__0 ) ) ;
    public final void ruleUrlAdress() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2137:2: ( ( ( rule__UrlAdress__Group__0 ) ) )
            // InternalNLX.g:2138:2: ( ( rule__UrlAdress__Group__0 ) )
            {
            // InternalNLX.g:2138:2: ( ( rule__UrlAdress__Group__0 ) )
            // InternalNLX.g:2139:3: ( rule__UrlAdress__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getGroup()); 
            }
            // InternalNLX.g:2140:3: ( rule__UrlAdress__Group__0 )
            // InternalNLX.g:2140:4: rule__UrlAdress__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UrlAdress__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleUrlAdress"


    // $ANTLR start "entryRuleEmailAT"
    // InternalNLX.g:2150:1: entryRuleEmailAT : ruleEmailAT EOF ;
    public final void entryRuleEmailAT() throws RecognitionException {
        try {
            // InternalNLX.g:2151:1: ( ruleEmailAT EOF )
            // InternalNLX.g:2152:1: ruleEmailAT EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmailATRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEmailAT();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmailATRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEmailAT"


    // $ANTLR start "ruleEmailAT"
    // InternalNLX.g:2159:1: ruleEmailAT : ( ( rule__EmailAT__EmailAssignment ) ) ;
    public final void ruleEmailAT() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2163:2: ( ( ( rule__EmailAT__EmailAssignment ) ) )
            // InternalNLX.g:2164:2: ( ( rule__EmailAT__EmailAssignment ) )
            {
            // InternalNLX.g:2164:2: ( ( rule__EmailAT__EmailAssignment ) )
            // InternalNLX.g:2165:3: ( rule__EmailAT__EmailAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmailATAccess().getEmailAssignment()); 
            }
            // InternalNLX.g:2166:3: ( rule__EmailAT__EmailAssignment )
            // InternalNLX.g:2166:4: rule__EmailAT__EmailAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EmailAT__EmailAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmailATAccess().getEmailAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEmailAT"


    // $ANTLR start "entryRuleMailAdress"
    // InternalNLX.g:2175:1: entryRuleMailAdress : ruleMailAdress EOF ;
    public final void entryRuleMailAdress() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:2179:1: ( ruleMailAdress EOF )
            // InternalNLX.g:2180:1: ruleMailAdress EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMailAdressRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMailAdress();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMailAdressRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleMailAdress"


    // $ANTLR start "ruleMailAdress"
    // InternalNLX.g:2190:1: ruleMailAdress : ( ( rule__MailAdress__Group__0 ) ) ;
    public final void ruleMailAdress() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2195:2: ( ( ( rule__MailAdress__Group__0 ) ) )
            // InternalNLX.g:2196:2: ( ( rule__MailAdress__Group__0 ) )
            {
            // InternalNLX.g:2196:2: ( ( rule__MailAdress__Group__0 ) )
            // InternalNLX.g:2197:3: ( rule__MailAdress__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMailAdressAccess().getGroup()); 
            }
            // InternalNLX.g:2198:3: ( rule__MailAdress__Group__0 )
            // InternalNLX.g:2198:4: rule__MailAdress__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MailAdress__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMailAdressAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleMailAdress"


    // $ANTLR start "entryRuleFormula"
    // InternalNLX.g:2208:1: entryRuleFormula : ruleFormula EOF ;
    public final void entryRuleFormula() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:2212:1: ( ruleFormula EOF )
            // InternalNLX.g:2213:1: ruleFormula EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFormula();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleFormula"


    // $ANTLR start "ruleFormula"
    // InternalNLX.g:2223:1: ruleFormula : ( ( rule__Formula__Group__0 ) ) ;
    public final void ruleFormula() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2228:2: ( ( ( rule__Formula__Group__0 ) ) )
            // InternalNLX.g:2229:2: ( ( rule__Formula__Group__0 ) )
            {
            // InternalNLX.g:2229:2: ( ( rule__Formula__Group__0 ) )
            // InternalNLX.g:2230:3: ( rule__Formula__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getGroup()); 
            }
            // InternalNLX.g:2231:3: ( rule__Formula__Group__0 )
            // InternalNLX.g:2231:4: rule__Formula__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleFormula"


    // $ANTLR start "entryRuleArray"
    // InternalNLX.g:2241:1: entryRuleArray : ruleArray EOF ;
    public final void entryRuleArray() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalNLX.g:2245:1: ( ruleArray EOF )
            // InternalNLX.g:2246:1: ruleArray EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleArray();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleArray"


    // $ANTLR start "ruleArray"
    // InternalNLX.g:2256:1: ruleArray : ( ( rule__Array__Group__0 ) ) ;
    public final void ruleArray() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2261:2: ( ( ( rule__Array__Group__0 ) ) )
            // InternalNLX.g:2262:2: ( ( rule__Array__Group__0 ) )
            {
            // InternalNLX.g:2262:2: ( ( rule__Array__Group__0 ) )
            // InternalNLX.g:2263:3: ( rule__Array__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayAccess().getGroup()); 
            }
            // InternalNLX.g:2264:3: ( rule__Array__Group__0 )
            // InternalNLX.g:2264:4: rule__Array__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Array__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleArray"


    // $ANTLR start "entryRuleNew_Line"
    // InternalNLX.g:2274:1: entryRuleNew_Line : ruleNew_Line EOF ;
    public final void entryRuleNew_Line() throws RecognitionException {
        try {
            // InternalNLX.g:2275:1: ( ruleNew_Line EOF )
            // InternalNLX.g:2276:1: ruleNew_Line EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNew_LineRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNew_Line();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNew_LineRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNew_Line"


    // $ANTLR start "ruleNew_Line"
    // InternalNLX.g:2283:1: ruleNew_Line : ( ( rule__New_Line__Group__0 ) ) ;
    public final void ruleNew_Line() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2287:2: ( ( ( rule__New_Line__Group__0 ) ) )
            // InternalNLX.g:2288:2: ( ( rule__New_Line__Group__0 ) )
            {
            // InternalNLX.g:2288:2: ( ( rule__New_Line__Group__0 ) )
            // InternalNLX.g:2289:3: ( rule__New_Line__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNew_LineAccess().getGroup()); 
            }
            // InternalNLX.g:2290:3: ( rule__New_Line__Group__0 )
            // InternalNLX.g:2290:4: rule__New_Line__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__New_Line__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNew_LineAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNew_Line"


    // $ANTLR start "rule__SentenceType__Alternatives_1"
    // InternalNLX.g:2298:1: rule__SentenceType__Alternatives_1 : ( ( ( ruleChapterSentence ) ) | ( ruleParagraphBlock ) | ( ruleTable ) );
    public final void rule__SentenceType__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2302:1: ( ( ( ruleChapterSentence ) ) | ( ruleParagraphBlock ) | ( ruleTable ) )
            int alt4=3;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalNLX.g:2303:2: ( ( ruleChapterSentence ) )
                    {
                    // InternalNLX.g:2303:2: ( ( ruleChapterSentence ) )
                    // InternalNLX.g:2304:3: ( ruleChapterSentence )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSentenceTypeAccess().getChapterSentenceParserRuleCall_1_0()); 
                    }
                    // InternalNLX.g:2305:3: ( ruleChapterSentence )
                    // InternalNLX.g:2305:4: ruleChapterSentence
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChapterSentence();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSentenceTypeAccess().getChapterSentenceParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2309:2: ( ruleParagraphBlock )
                    {
                    // InternalNLX.g:2309:2: ( ruleParagraphBlock )
                    // InternalNLX.g:2310:3: ruleParagraphBlock
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSentenceTypeAccess().getParagraphBlockParserRuleCall_1_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParagraphBlock();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSentenceTypeAccess().getParagraphBlockParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2315:2: ( ruleTable )
                    {
                    // InternalNLX.g:2315:2: ( ruleTable )
                    // InternalNLX.g:2316:3: ruleTable
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSentenceTypeAccess().getTableParserRuleCall_1_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTable();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSentenceTypeAccess().getTableParserRuleCall_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceType__Alternatives_1"


    // $ANTLR start "rule__Paragraph__Alternatives"
    // InternalNLX.g:2325:1: rule__Paragraph__Alternatives : ( ( ( ( RULE_NEWLINE ) ) ( ( RULE_NEWLINE )* ) ) | ( RULE_END ) );
    public final void rule__Paragraph__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2329:1: ( ( ( ( RULE_NEWLINE ) ) ( ( RULE_NEWLINE )* ) ) | ( RULE_END ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_NEWLINE) ) {
                alt6=1;
            }
            else if ( (LA6_0==RULE_END) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalNLX.g:2330:2: ( ( ( RULE_NEWLINE ) ) ( ( RULE_NEWLINE )* ) )
                    {
                    // InternalNLX.g:2330:2: ( ( ( RULE_NEWLINE ) ) ( ( RULE_NEWLINE )* ) )
                    // InternalNLX.g:2331:3: ( ( RULE_NEWLINE ) ) ( ( RULE_NEWLINE )* )
                    {
                    // InternalNLX.g:2331:3: ( ( RULE_NEWLINE ) )
                    // InternalNLX.g:2332:4: ( RULE_NEWLINE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParagraphAccess().getNEWLINETerminalRuleCall_0()); 
                    }
                    // InternalNLX.g:2333:4: ( RULE_NEWLINE )
                    // InternalNLX.g:2333:5: RULE_NEWLINE
                    {
                    match(input,RULE_NEWLINE,FollowSets000.FOLLOW_6); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParagraphAccess().getNEWLINETerminalRuleCall_0()); 
                    }

                    }

                    // InternalNLX.g:2336:3: ( ( RULE_NEWLINE )* )
                    // InternalNLX.g:2337:4: ( RULE_NEWLINE )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParagraphAccess().getNEWLINETerminalRuleCall_0()); 
                    }
                    // InternalNLX.g:2338:4: ( RULE_NEWLINE )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==RULE_NEWLINE) ) {
                            int LA5_2 = input.LA(2);

                            if ( (synpred6_InternalNLX()) ) {
                                alt5=1;
                            }


                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalNLX.g:2338:5: RULE_NEWLINE
                    	    {
                    	    match(input,RULE_NEWLINE,FollowSets000.FOLLOW_6); if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParagraphAccess().getNEWLINETerminalRuleCall_0()); 
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2343:2: ( RULE_END )
                    {
                    // InternalNLX.g:2343:2: ( RULE_END )
                    // InternalNLX.g:2344:3: RULE_END
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParagraphAccess().getENDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_END,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParagraphAccess().getENDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Paragraph__Alternatives"


    // $ANTLR start "rule__BlockElement__Alternatives"
    // InternalNLX.g:2353:1: rule__BlockElement__Alternatives : ( ( ruleSentenceChain ) | ( ruleIgnoredText ) | ( ruleFootNote ) | ( ( ruleListSentence ) ) );
    public final void rule__BlockElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2357:1: ( ( ruleSentenceChain ) | ( ruleIgnoredText ) | ( ruleFootNote ) | ( ( ruleListSentence ) ) )
            int alt7=4;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalNLX.g:2358:2: ( ruleSentenceChain )
                    {
                    // InternalNLX.g:2358:2: ( ruleSentenceChain )
                    // InternalNLX.g:2359:3: ruleSentenceChain
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBlockElementAccess().getSentenceChainParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSentenceChain();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBlockElementAccess().getSentenceChainParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2364:2: ( ruleIgnoredText )
                    {
                    // InternalNLX.g:2364:2: ( ruleIgnoredText )
                    // InternalNLX.g:2365:3: ruleIgnoredText
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBlockElementAccess().getIgnoredTextParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIgnoredText();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBlockElementAccess().getIgnoredTextParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2370:2: ( ruleFootNote )
                    {
                    // InternalNLX.g:2370:2: ( ruleFootNote )
                    // InternalNLX.g:2371:3: ruleFootNote
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBlockElementAccess().getFootNoteParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFootNote();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBlockElementAccess().getFootNoteParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:2376:2: ( ( ruleListSentence ) )
                    {
                    // InternalNLX.g:2376:2: ( ( ruleListSentence ) )
                    // InternalNLX.g:2377:3: ( ruleListSentence )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBlockElementAccess().getListSentenceParserRuleCall_3()); 
                    }
                    // InternalNLX.g:2378:3: ( ruleListSentence )
                    // InternalNLX.g:2378:4: ruleListSentence
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleListSentence();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBlockElementAccess().getListSentenceParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElement__Alternatives"


    // $ANTLR start "rule__TableBorder__Alternatives"
    // InternalNLX.g:2386:1: rule__TableBorder__Alternatives : ( ( ruleTableColumnSeparator ) | ( ruleTableLine ) );
    public final void rule__TableBorder__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2390:1: ( ( ruleTableColumnSeparator ) | ( ruleTableLine ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_HORIZ_SEP) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_TABLE_LINE) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalNLX.g:2391:2: ( ruleTableColumnSeparator )
                    {
                    // InternalNLX.g:2391:2: ( ruleTableColumnSeparator )
                    // InternalNLX.g:2392:3: ruleTableColumnSeparator
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableBorderAccess().getTableColumnSeparatorParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTableColumnSeparator();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableBorderAccess().getTableColumnSeparatorParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2397:2: ( ruleTableLine )
                    {
                    // InternalNLX.g:2397:2: ( ruleTableLine )
                    // InternalNLX.g:2398:3: ruleTableLine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableBorderAccess().getTableLineParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTableLine();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableBorderAccess().getTableLineParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableBorder__Alternatives"


    // $ANTLR start "rule__SentenceChain__Alternatives_3"
    // InternalNLX.g:2407:1: rule__SentenceChain__Alternatives_3 : ( ( ( rule__SentenceChain__EndpointAssignment_3_0 ) ) | ( ( rule__SentenceChain__EndpointAssignment_3_1 ) ) );
    public final void rule__SentenceChain__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2411:1: ( ( ( rule__SentenceChain__EndpointAssignment_3_0 ) ) | ( ( rule__SentenceChain__EndpointAssignment_3_1 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_FULL_STOP_NL) ) {
                alt9=1;
            }
            else if ( (LA9_0==RULE_NEWLINE) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalNLX.g:2412:2: ( ( rule__SentenceChain__EndpointAssignment_3_0 ) )
                    {
                    // InternalNLX.g:2412:2: ( ( rule__SentenceChain__EndpointAssignment_3_0 ) )
                    // InternalNLX.g:2413:3: ( rule__SentenceChain__EndpointAssignment_3_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSentenceChainAccess().getEndpointAssignment_3_0()); 
                    }
                    // InternalNLX.g:2414:3: ( rule__SentenceChain__EndpointAssignment_3_0 )
                    // InternalNLX.g:2414:4: rule__SentenceChain__EndpointAssignment_3_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SentenceChain__EndpointAssignment_3_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSentenceChainAccess().getEndpointAssignment_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2418:2: ( ( rule__SentenceChain__EndpointAssignment_3_1 ) )
                    {
                    // InternalNLX.g:2418:2: ( ( rule__SentenceChain__EndpointAssignment_3_1 ) )
                    // InternalNLX.g:2419:3: ( rule__SentenceChain__EndpointAssignment_3_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSentenceChainAccess().getEndpointAssignment_3_1()); 
                    }
                    // InternalNLX.g:2420:3: ( rule__SentenceChain__EndpointAssignment_3_1 )
                    // InternalNLX.g:2420:4: rule__SentenceChain__EndpointAssignment_3_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SentenceChain__EndpointAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSentenceChainAccess().getEndpointAssignment_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Alternatives_3"


    // $ANTLR start "rule__SentenceChainX__Alternatives_3_0"
    // InternalNLX.g:2428:1: rule__SentenceChainX__Alternatives_3_0 : ( ( ( rule__SentenceChainX__EndpointAssignment_3_0_0 ) ) | ( ( rule__SentenceChainX__EndpointAssignment_3_0_1 ) ) | ( ( rule__SentenceChainX__EndpointAssignment_3_0_2 ) ) );
    public final void rule__SentenceChainX__Alternatives_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2432:1: ( ( ( rule__SentenceChainX__EndpointAssignment_3_0_0 ) ) | ( ( rule__SentenceChainX__EndpointAssignment_3_0_1 ) ) | ( ( rule__SentenceChainX__EndpointAssignment_3_0_2 ) ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case RULE_FULL_STOP_NL:
                {
                alt10=1;
                }
                break;
            case RULE_NEWLINE:
                {
                alt10=2;
                }
                break;
            case RULE_KOMMA:
                {
                alt10=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalNLX.g:2433:2: ( ( rule__SentenceChainX__EndpointAssignment_3_0_0 ) )
                    {
                    // InternalNLX.g:2433:2: ( ( rule__SentenceChainX__EndpointAssignment_3_0_0 ) )
                    // InternalNLX.g:2434:3: ( rule__SentenceChainX__EndpointAssignment_3_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSentenceChainXAccess().getEndpointAssignment_3_0_0()); 
                    }
                    // InternalNLX.g:2435:3: ( rule__SentenceChainX__EndpointAssignment_3_0_0 )
                    // InternalNLX.g:2435:4: rule__SentenceChainX__EndpointAssignment_3_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SentenceChainX__EndpointAssignment_3_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSentenceChainXAccess().getEndpointAssignment_3_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2439:2: ( ( rule__SentenceChainX__EndpointAssignment_3_0_1 ) )
                    {
                    // InternalNLX.g:2439:2: ( ( rule__SentenceChainX__EndpointAssignment_3_0_1 ) )
                    // InternalNLX.g:2440:3: ( rule__SentenceChainX__EndpointAssignment_3_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSentenceChainXAccess().getEndpointAssignment_3_0_1()); 
                    }
                    // InternalNLX.g:2441:3: ( rule__SentenceChainX__EndpointAssignment_3_0_1 )
                    // InternalNLX.g:2441:4: rule__SentenceChainX__EndpointAssignment_3_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SentenceChainX__EndpointAssignment_3_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSentenceChainXAccess().getEndpointAssignment_3_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2445:2: ( ( rule__SentenceChainX__EndpointAssignment_3_0_2 ) )
                    {
                    // InternalNLX.g:2445:2: ( ( rule__SentenceChainX__EndpointAssignment_3_0_2 ) )
                    // InternalNLX.g:2446:3: ( rule__SentenceChainX__EndpointAssignment_3_0_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSentenceChainXAccess().getEndpointAssignment_3_0_2()); 
                    }
                    // InternalNLX.g:2447:3: ( rule__SentenceChainX__EndpointAssignment_3_0_2 )
                    // InternalNLX.g:2447:4: rule__SentenceChainX__EndpointAssignment_3_0_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SentenceChainX__EndpointAssignment_3_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSentenceChainXAccess().getEndpointAssignment_3_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Alternatives_3_0"


    // $ANTLR start "rule__ListSentence__Alternatives_1"
    // InternalNLX.g:2455:1: rule__ListSentence__Alternatives_1 : ( ( ( rule__ListSentence__SentenceChainAssignment_1_0 ) ) | ( RULE_NEWLINE ) );
    public final void rule__ListSentence__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2459:1: ( ( ( rule__ListSentence__SentenceChainAssignment_1_0 ) ) | ( RULE_NEWLINE ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_HASH||LA11_0==RULE_MULTI||LA11_0==RULE_DOT||(LA11_0>=RULE_ID && LA11_0<=RULE_DOUBLE_DOT)||(LA11_0>=RULE_CURL && LA11_0<=RULE_SLASH)||(LA11_0>=RULE_SEPARATORS_IT && LA11_0<=RULE_PARAGR)||(LA11_0>=RULE_OPERATORS && LA11_0<=RULE_TRIPLE_DOT)||(LA11_0>=RULE_BR_O && LA11_0<=RULE_EXBR_O)||LA11_0==RULE_EXBRC_O||(LA11_0>=RULE_CURRENCY && LA11_0<=RULE_AT)) ) {
                alt11=1;
            }
            else if ( (LA11_0==RULE_NEWLINE) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalNLX.g:2460:2: ( ( rule__ListSentence__SentenceChainAssignment_1_0 ) )
                    {
                    // InternalNLX.g:2460:2: ( ( rule__ListSentence__SentenceChainAssignment_1_0 ) )
                    // InternalNLX.g:2461:3: ( rule__ListSentence__SentenceChainAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListSentenceAccess().getSentenceChainAssignment_1_0()); 
                    }
                    // InternalNLX.g:2462:3: ( rule__ListSentence__SentenceChainAssignment_1_0 )
                    // InternalNLX.g:2462:4: rule__ListSentence__SentenceChainAssignment_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ListSentence__SentenceChainAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListSentenceAccess().getSentenceChainAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2466:2: ( RULE_NEWLINE )
                    {
                    // InternalNLX.g:2466:2: ( RULE_NEWLINE )
                    // InternalNLX.g:2467:3: RULE_NEWLINE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListSentenceAccess().getNEWLINETerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_NEWLINE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListSentenceAccess().getNEWLINETerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListSentence__Alternatives_1"


    // $ANTLR start "rule__ChapterSentence__Alternatives_0"
    // InternalNLX.g:2476:1: rule__ChapterSentence__Alternatives_0 : ( ( ( rule__ChapterSentence__ChapterNumberAssignment_0_0 ) ) | ( ( rule__ChapterSentence__ChapterNumberAssignment_0_1 ) ) | ( ( rule__ChapterSentence__ChapterNumberAssignment_0_2 ) ) );
    public final void rule__ChapterSentence__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2480:1: ( ( ( rule__ChapterSentence__ChapterNumberAssignment_0_0 ) ) | ( ( rule__ChapterSentence__ChapterNumberAssignment_0_1 ) ) | ( ( rule__ChapterSentence__ChapterNumberAssignment_0_2 ) ) )
            int alt12=3;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_INT) ) {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==RULE_DOT) ) {
                    int LA12_3 = input.LA(3);

                    if ( (LA12_3==RULE_INT) ) {
                        int LA12_4 = input.LA(4);

                        if ( (synpred16_InternalNLX()) ) {
                            alt12=1;
                        }
                        else if ( (true) ) {
                            alt12=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 12, 4, input);

                            throw nvae;
                        }
                    }
                    else if ( ((LA12_3>=RULE_ID_C && LA12_3<=RULE_IT_ID)||LA12_3==RULE_ID_ALL) ) {
                        alt12=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 12, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA12_0>=RULE_ID_C && LA12_0<=RULE_ALL_ALPHA)) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalNLX.g:2481:2: ( ( rule__ChapterSentence__ChapterNumberAssignment_0_0 ) )
                    {
                    // InternalNLX.g:2481:2: ( ( rule__ChapterSentence__ChapterNumberAssignment_0_0 ) )
                    // InternalNLX.g:2482:3: ( rule__ChapterSentence__ChapterNumberAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterSentenceAccess().getChapterNumberAssignment_0_0()); 
                    }
                    // InternalNLX.g:2483:3: ( rule__ChapterSentence__ChapterNumberAssignment_0_0 )
                    // InternalNLX.g:2483:4: rule__ChapterSentence__ChapterNumberAssignment_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ChapterSentence__ChapterNumberAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterSentenceAccess().getChapterNumberAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2487:2: ( ( rule__ChapterSentence__ChapterNumberAssignment_0_1 ) )
                    {
                    // InternalNLX.g:2487:2: ( ( rule__ChapterSentence__ChapterNumberAssignment_0_1 ) )
                    // InternalNLX.g:2488:3: ( rule__ChapterSentence__ChapterNumberAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterSentenceAccess().getChapterNumberAssignment_0_1()); 
                    }
                    // InternalNLX.g:2489:3: ( rule__ChapterSentence__ChapterNumberAssignment_0_1 )
                    // InternalNLX.g:2489:4: rule__ChapterSentence__ChapterNumberAssignment_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ChapterSentence__ChapterNumberAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterSentenceAccess().getChapterNumberAssignment_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2493:2: ( ( rule__ChapterSentence__ChapterNumberAssignment_0_2 ) )
                    {
                    // InternalNLX.g:2493:2: ( ( rule__ChapterSentence__ChapterNumberAssignment_0_2 ) )
                    // InternalNLX.g:2494:3: ( rule__ChapterSentence__ChapterNumberAssignment_0_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterSentenceAccess().getChapterNumberAssignment_0_2()); 
                    }
                    // InternalNLX.g:2495:3: ( rule__ChapterSentence__ChapterNumberAssignment_0_2 )
                    // InternalNLX.g:2495:4: rule__ChapterSentence__ChapterNumberAssignment_0_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ChapterSentence__ChapterNumberAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterSentenceAccess().getChapterNumberAssignment_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterSentence__Alternatives_0"


    // $ANTLR start "rule__SubSentence__Alternatives_1"
    // InternalNLX.g:2503:1: rule__SubSentence__Alternatives_1 : ( ( ( rule__SubSentence__Group_1_0__0 ) ) | ( ( rule__SubSentence__Group_1_1__0 ) ) );
    public final void rule__SubSentence__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2507:1: ( ( ( rule__SubSentence__Group_1_0__0 ) ) | ( ( rule__SubSentence__Group_1_1__0 ) ) )
            int alt13=2;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // InternalNLX.g:2508:2: ( ( rule__SubSentence__Group_1_0__0 ) )
                    {
                    // InternalNLX.g:2508:2: ( ( rule__SubSentence__Group_1_0__0 ) )
                    // InternalNLX.g:2509:3: ( rule__SubSentence__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubSentenceAccess().getGroup_1_0()); 
                    }
                    // InternalNLX.g:2510:3: ( rule__SubSentence__Group_1_0__0 )
                    // InternalNLX.g:2510:4: rule__SubSentence__Group_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SubSentence__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubSentenceAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2514:2: ( ( rule__SubSentence__Group_1_1__0 ) )
                    {
                    // InternalNLX.g:2514:2: ( ( rule__SubSentence__Group_1_1__0 ) )
                    // InternalNLX.g:2515:3: ( rule__SubSentence__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubSentenceAccess().getGroup_1_1()); 
                    }
                    // InternalNLX.g:2516:3: ( rule__SubSentence__Group_1_1__0 )
                    // InternalNLX.g:2516:4: rule__SubSentence__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SubSentence__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubSentenceAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Alternatives_1"


    // $ANTLR start "rule__FreeSubSentence__Alternatives_1"
    // InternalNLX.g:2524:1: rule__FreeSubSentence__Alternatives_1 : ( ( RULE_SPACE ) | ( ( rule__FreeSubSentence__ElementsAssignment_1_1 ) ) );
    public final void rule__FreeSubSentence__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2528:1: ( ( RULE_SPACE ) | ( ( rule__FreeSubSentence__ElementsAssignment_1_1 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_SPACE) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_NEWLINE) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalNLX.g:2529:2: ( RULE_SPACE )
                    {
                    // InternalNLX.g:2529:2: ( RULE_SPACE )
                    // InternalNLX.g:2530:3: RULE_SPACE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFreeSubSentenceAccess().getSPACETerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFreeSubSentenceAccess().getSPACETerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2535:2: ( ( rule__FreeSubSentence__ElementsAssignment_1_1 ) )
                    {
                    // InternalNLX.g:2535:2: ( ( rule__FreeSubSentence__ElementsAssignment_1_1 ) )
                    // InternalNLX.g:2536:3: ( rule__FreeSubSentence__ElementsAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFreeSubSentenceAccess().getElementsAssignment_1_1()); 
                    }
                    // InternalNLX.g:2537:3: ( rule__FreeSubSentence__ElementsAssignment_1_1 )
                    // InternalNLX.g:2537:4: rule__FreeSubSentence__ElementsAssignment_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__FreeSubSentence__ElementsAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFreeSubSentenceAccess().getElementsAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Alternatives_1"


    // $ANTLR start "rule__FreeSubSentence__Alternatives_3_0"
    // InternalNLX.g:2545:1: rule__FreeSubSentence__Alternatives_3_0 : ( ( RULE_SPACE ) | ( ( rule__FreeSubSentence__ElementsAssignment_3_0_1 ) ) );
    public final void rule__FreeSubSentence__Alternatives_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2549:1: ( ( RULE_SPACE ) | ( ( rule__FreeSubSentence__ElementsAssignment_3_0_1 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_SPACE) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_NEWLINE) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalNLX.g:2550:2: ( RULE_SPACE )
                    {
                    // InternalNLX.g:2550:2: ( RULE_SPACE )
                    // InternalNLX.g:2551:3: RULE_SPACE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFreeSubSentenceAccess().getSPACETerminalRuleCall_3_0_0()); 
                    }
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFreeSubSentenceAccess().getSPACETerminalRuleCall_3_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2556:2: ( ( rule__FreeSubSentence__ElementsAssignment_3_0_1 ) )
                    {
                    // InternalNLX.g:2556:2: ( ( rule__FreeSubSentence__ElementsAssignment_3_0_1 ) )
                    // InternalNLX.g:2557:3: ( rule__FreeSubSentence__ElementsAssignment_3_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFreeSubSentenceAccess().getElementsAssignment_3_0_1()); 
                    }
                    // InternalNLX.g:2558:3: ( rule__FreeSubSentence__ElementsAssignment_3_0_1 )
                    // InternalNLX.g:2558:4: rule__FreeSubSentence__ElementsAssignment_3_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__FreeSubSentence__ElementsAssignment_3_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFreeSubSentenceAccess().getElementsAssignment_3_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Alternatives_3_0"


    // $ANTLR start "rule__FreeSubSentence__Alternatives_4"
    // InternalNLX.g:2566:1: rule__FreeSubSentence__Alternatives_4 : ( ( RULE_SPACE ) | ( ( rule__FreeSubSentence__ElementsAssignment_4_1 ) ) );
    public final void rule__FreeSubSentence__Alternatives_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2570:1: ( ( RULE_SPACE ) | ( ( rule__FreeSubSentence__ElementsAssignment_4_1 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_SPACE) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_NEWLINE) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalNLX.g:2571:2: ( RULE_SPACE )
                    {
                    // InternalNLX.g:2571:2: ( RULE_SPACE )
                    // InternalNLX.g:2572:3: RULE_SPACE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFreeSubSentenceAccess().getSPACETerminalRuleCall_4_0()); 
                    }
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFreeSubSentenceAccess().getSPACETerminalRuleCall_4_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2577:2: ( ( rule__FreeSubSentence__ElementsAssignment_4_1 ) )
                    {
                    // InternalNLX.g:2577:2: ( ( rule__FreeSubSentence__ElementsAssignment_4_1 ) )
                    // InternalNLX.g:2578:3: ( rule__FreeSubSentence__ElementsAssignment_4_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFreeSubSentenceAccess().getElementsAssignment_4_1()); 
                    }
                    // InternalNLX.g:2579:3: ( rule__FreeSubSentence__ElementsAssignment_4_1 )
                    // InternalNLX.g:2579:4: rule__FreeSubSentence__ElementsAssignment_4_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__FreeSubSentence__ElementsAssignment_4_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFreeSubSentenceAccess().getElementsAssignment_4_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Alternatives_4"


    // $ANTLR start "rule__ListPoint__Alternatives"
    // InternalNLX.g:2587:1: rule__ListPoint__Alternatives : ( ( RULE_MULTI ) | ( RULE_DASH ) | ( ruleListPointNum ) | ( RULE_MINUS ) );
    public final void rule__ListPoint__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2591:1: ( ( RULE_MULTI ) | ( RULE_DASH ) | ( ruleListPointNum ) | ( RULE_MINUS ) )
            int alt17=4;
            switch ( input.LA(1) ) {
            case RULE_MULTI:
                {
                alt17=1;
                }
                break;
            case RULE_DASH:
                {
                alt17=2;
                }
                break;
            case RULE_INT:
            case RULE_ALPHA:
                {
                alt17=3;
                }
                break;
            case RULE_MINUS:
                {
                alt17=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalNLX.g:2592:2: ( RULE_MULTI )
                    {
                    // InternalNLX.g:2592:2: ( RULE_MULTI )
                    // InternalNLX.g:2593:3: RULE_MULTI
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListPointAccess().getMULTITerminalRuleCall_0()); 
                    }
                    match(input,RULE_MULTI,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListPointAccess().getMULTITerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2598:2: ( RULE_DASH )
                    {
                    // InternalNLX.g:2598:2: ( RULE_DASH )
                    // InternalNLX.g:2599:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListPointAccess().getDASHTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListPointAccess().getDASHTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2604:2: ( ruleListPointNum )
                    {
                    // InternalNLX.g:2604:2: ( ruleListPointNum )
                    // InternalNLX.g:2605:3: ruleListPointNum
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListPointAccess().getListPointNumParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleListPointNum();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListPointAccess().getListPointNumParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:2610:2: ( RULE_MINUS )
                    {
                    // InternalNLX.g:2610:2: ( RULE_MINUS )
                    // InternalNLX.g:2611:3: RULE_MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListPointAccess().getMINUSTerminalRuleCall_3()); 
                    }
                    match(input,RULE_MINUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListPointAccess().getMINUSTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPoint__Alternatives"


    // $ANTLR start "rule__ListPointNum__Alternatives"
    // InternalNLX.g:2620:1: rule__ListPointNum__Alternatives : ( ( ( rule__ListPointNum__Group_0__0 ) ) | ( ( rule__ListPointNum__Group_1__0 ) ) );
    public final void rule__ListPointNum__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2624:1: ( ( ( rule__ListPointNum__Group_0__0 ) ) | ( ( rule__ListPointNum__Group_1__0 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_INT) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_ALPHA) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalNLX.g:2625:2: ( ( rule__ListPointNum__Group_0__0 ) )
                    {
                    // InternalNLX.g:2625:2: ( ( rule__ListPointNum__Group_0__0 ) )
                    // InternalNLX.g:2626:3: ( rule__ListPointNum__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListPointNumAccess().getGroup_0()); 
                    }
                    // InternalNLX.g:2627:3: ( rule__ListPointNum__Group_0__0 )
                    // InternalNLX.g:2627:4: rule__ListPointNum__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ListPointNum__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListPointNumAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2631:2: ( ( rule__ListPointNum__Group_1__0 ) )
                    {
                    // InternalNLX.g:2631:2: ( ( rule__ListPointNum__Group_1__0 ) )
                    // InternalNLX.g:2632:3: ( rule__ListPointNum__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListPointNumAccess().getGroup_1()); 
                    }
                    // InternalNLX.g:2633:3: ( rule__ListPointNum__Group_1__0 )
                    // InternalNLX.g:2633:4: rule__ListPointNum__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ListPointNum__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListPointNumAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Alternatives"


    // $ANTLR start "rule__ListPointNum__Alternatives_0_1"
    // InternalNLX.g:2641:1: rule__ListPointNum__Alternatives_0_1 : ( ( ( rule__ListPointNum__Group_0_1_0__0 ) ) | ( RULE_FULL_STOP_IM ) );
    public final void rule__ListPointNum__Alternatives_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2645:1: ( ( ( rule__ListPointNum__Group_0_1_0__0 ) ) | ( RULE_FULL_STOP_IM ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_DOT) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_FULL_STOP_IM) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalNLX.g:2646:2: ( ( rule__ListPointNum__Group_0_1_0__0 ) )
                    {
                    // InternalNLX.g:2646:2: ( ( rule__ListPointNum__Group_0_1_0__0 ) )
                    // InternalNLX.g:2647:3: ( rule__ListPointNum__Group_0_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListPointNumAccess().getGroup_0_1_0()); 
                    }
                    // InternalNLX.g:2648:3: ( rule__ListPointNum__Group_0_1_0__0 )
                    // InternalNLX.g:2648:4: rule__ListPointNum__Group_0_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ListPointNum__Group_0_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListPointNumAccess().getGroup_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2652:2: ( RULE_FULL_STOP_IM )
                    {
                    // InternalNLX.g:2652:2: ( RULE_FULL_STOP_IM )
                    // InternalNLX.g:2653:3: RULE_FULL_STOP_IM
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListPointNumAccess().getFULL_STOP_IMTerminalRuleCall_0_1_1()); 
                    }
                    match(input,RULE_FULL_STOP_IM,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListPointNumAccess().getFULL_STOP_IMTerminalRuleCall_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Alternatives_0_1"


    // $ANTLR start "rule__ListPointNum__Alternatives_1_1"
    // InternalNLX.g:2662:1: rule__ListPointNum__Alternatives_1_1 : ( ( ( rule__ListPointNum__Group_1_1_0__0 ) ) | ( RULE_FULL_STOP_IM ) );
    public final void rule__ListPointNum__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2666:1: ( ( ( rule__ListPointNum__Group_1_1_0__0 ) ) | ( RULE_FULL_STOP_IM ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_DOT) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_FULL_STOP_IM) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalNLX.g:2667:2: ( ( rule__ListPointNum__Group_1_1_0__0 ) )
                    {
                    // InternalNLX.g:2667:2: ( ( rule__ListPointNum__Group_1_1_0__0 ) )
                    // InternalNLX.g:2668:3: ( rule__ListPointNum__Group_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListPointNumAccess().getGroup_1_1_0()); 
                    }
                    // InternalNLX.g:2669:3: ( rule__ListPointNum__Group_1_1_0__0 )
                    // InternalNLX.g:2669:4: rule__ListPointNum__Group_1_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ListPointNum__Group_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListPointNumAccess().getGroup_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2673:2: ( RULE_FULL_STOP_IM )
                    {
                    // InternalNLX.g:2673:2: ( RULE_FULL_STOP_IM )
                    // InternalNLX.g:2674:3: RULE_FULL_STOP_IM
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListPointNumAccess().getFULL_STOP_IMTerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_FULL_STOP_IM,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListPointNumAccess().getFULL_STOP_IMTerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Alternatives_1_1"


    // $ANTLR start "rule__NoNElement__Alternatives"
    // InternalNLX.g:2683:1: rule__NoNElement__Alternatives : ( ( ruleQuote ) | ( ruleBrackets ) | ( ruleWord ) | ( ruleSymbolsX ) | ( ruleIgnoredText ) | ( ruleShortCut ) | ( ruleHashNumber ) | ( ruleUrlAdress ) | ( ruleMailAdress ) | ( ruleFormula ) | ( ruleArray ) | ( ruleItWord ) );
    public final void rule__NoNElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2687:1: ( ( ruleQuote ) | ( ruleBrackets ) | ( ruleWord ) | ( ruleSymbolsX ) | ( ruleIgnoredText ) | ( ruleShortCut ) | ( ruleHashNumber ) | ( ruleUrlAdress ) | ( ruleMailAdress ) | ( ruleFormula ) | ( ruleArray ) | ( ruleItWord ) )
            int alt21=12;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalNLX.g:2688:2: ( ruleQuote )
                    {
                    // InternalNLX.g:2688:2: ( ruleQuote )
                    // InternalNLX.g:2689:3: ruleQuote
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getQuoteParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleQuote();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getQuoteParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2694:2: ( ruleBrackets )
                    {
                    // InternalNLX.g:2694:2: ( ruleBrackets )
                    // InternalNLX.g:2695:3: ruleBrackets
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getBracketsParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBrackets();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getBracketsParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2700:2: ( ruleWord )
                    {
                    // InternalNLX.g:2700:2: ( ruleWord )
                    // InternalNLX.g:2701:3: ruleWord
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getWordParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWord();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getWordParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:2706:2: ( ruleSymbolsX )
                    {
                    // InternalNLX.g:2706:2: ( ruleSymbolsX )
                    // InternalNLX.g:2707:3: ruleSymbolsX
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getSymbolsXParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSymbolsX();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getSymbolsXParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNLX.g:2712:2: ( ruleIgnoredText )
                    {
                    // InternalNLX.g:2712:2: ( ruleIgnoredText )
                    // InternalNLX.g:2713:3: ruleIgnoredText
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getIgnoredTextParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIgnoredText();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getIgnoredTextParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalNLX.g:2718:2: ( ruleShortCut )
                    {
                    // InternalNLX.g:2718:2: ( ruleShortCut )
                    // InternalNLX.g:2719:3: ruleShortCut
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getShortCutParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleShortCut();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getShortCutParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalNLX.g:2724:2: ( ruleHashNumber )
                    {
                    // InternalNLX.g:2724:2: ( ruleHashNumber )
                    // InternalNLX.g:2725:3: ruleHashNumber
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getHashNumberParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleHashNumber();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getHashNumberParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalNLX.g:2730:2: ( ruleUrlAdress )
                    {
                    // InternalNLX.g:2730:2: ( ruleUrlAdress )
                    // InternalNLX.g:2731:3: ruleUrlAdress
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getUrlAdressParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUrlAdress();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getUrlAdressParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalNLX.g:2736:2: ( ruleMailAdress )
                    {
                    // InternalNLX.g:2736:2: ( ruleMailAdress )
                    // InternalNLX.g:2737:3: ruleMailAdress
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getMailAdressParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMailAdress();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getMailAdressParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalNLX.g:2742:2: ( ruleFormula )
                    {
                    // InternalNLX.g:2742:2: ( ruleFormula )
                    // InternalNLX.g:2743:3: ruleFormula
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getFormulaParserRuleCall_9()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFormula();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getFormulaParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalNLX.g:2748:2: ( ruleArray )
                    {
                    // InternalNLX.g:2748:2: ( ruleArray )
                    // InternalNLX.g:2749:3: ruleArray
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getArrayParserRuleCall_10()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleArray();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getArrayParserRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalNLX.g:2754:2: ( ruleItWord )
                    {
                    // InternalNLX.g:2754:2: ( ruleItWord )
                    // InternalNLX.g:2755:3: ruleItWord
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementAccess().getItWordParserRuleCall_11()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleItWord();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementAccess().getItWordParserRuleCall_11()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNElement__Alternatives"


    // $ANTLR start "rule__Brackets__Alternatives"
    // InternalNLX.g:2764:1: rule__Brackets__Alternatives : ( ( ruleBracketSentence ) | ( ruleExtBracketSentence ) | ( ruleExtBracketSentenceC ) );
    public final void rule__Brackets__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2768:1: ( ( ruleBracketSentence ) | ( ruleExtBracketSentence ) | ( ruleExtBracketSentenceC ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case RULE_BR_O:
                {
                alt22=1;
                }
                break;
            case RULE_EXBR_O:
                {
                alt22=2;
                }
                break;
            case RULE_EXBRC_O:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalNLX.g:2769:2: ( ruleBracketSentence )
                    {
                    // InternalNLX.g:2769:2: ( ruleBracketSentence )
                    // InternalNLX.g:2770:3: ruleBracketSentence
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBracketsAccess().getBracketSentenceParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBracketSentence();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBracketsAccess().getBracketSentenceParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2775:2: ( ruleExtBracketSentence )
                    {
                    // InternalNLX.g:2775:2: ( ruleExtBracketSentence )
                    // InternalNLX.g:2776:3: ruleExtBracketSentence
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBracketsAccess().getExtBracketSentenceParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExtBracketSentence();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBracketsAccess().getExtBracketSentenceParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2781:2: ( ruleExtBracketSentenceC )
                    {
                    // InternalNLX.g:2781:2: ( ruleExtBracketSentenceC )
                    // InternalNLX.g:2782:3: ruleExtBracketSentenceC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBracketsAccess().getExtBracketSentenceCParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExtBracketSentenceC();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBracketsAccess().getExtBracketSentenceCParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Brackets__Alternatives"


    // $ANTLR start "rule__NoNElementX__Alternatives"
    // InternalNLX.g:2791:1: rule__NoNElementX__Alternatives : ( ( ruleNoNElement ) | ( ruleWordShort ) );
    public final void rule__NoNElementX__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2795:1: ( ( ruleNoNElement ) | ( ruleWordShort ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_HASH||LA23_0==RULE_MULTI||LA23_0==RULE_DOT||(LA23_0>=RULE_ID && LA23_0<=RULE_ALL_ALPHA)||(LA23_0>=RULE_IT_ID && LA23_0<=RULE_DOUBLE_DOT)||(LA23_0>=RULE_CURL && LA23_0<=RULE_SLASH)||(LA23_0>=RULE_SEPARATORS_IT && LA23_0<=RULE_PARAGR)||(LA23_0>=RULE_OPERATORS && LA23_0<=RULE_TRIPLE_DOT)||(LA23_0>=RULE_BR_O && LA23_0<=RULE_EXBR_O)||LA23_0==RULE_EXBRC_O||(LA23_0>=RULE_CURRENCY && LA23_0<=RULE_AT)) ) {
                alt23=1;
            }
            else if ( (LA23_0==RULE_ALPHA) ) {
                int LA23_2 = input.LA(2);

                if ( ((LA23_2>=RULE_MULTI && LA23_2<=RULE_MINUS)||LA23_2==RULE_DOT||(LA23_2>=RULE_SLASH && LA23_2<=RULE_COLON)) ) {
                    alt23=1;
                }
                else if ( (LA23_2==EOF||LA23_2==RULE_SPACE) ) {
                    alt23=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 23, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalNLX.g:2796:2: ( ruleNoNElement )
                    {
                    // InternalNLX.g:2796:2: ( ruleNoNElement )
                    // InternalNLX.g:2797:3: ruleNoNElement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementXAccess().getNoNElementParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNoNElement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementXAccess().getNoNElementParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2802:2: ( ruleWordShort )
                    {
                    // InternalNLX.g:2802:2: ( ruleWordShort )
                    // InternalNLX.g:2803:3: ruleWordShort
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementXAccess().getWordShortParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWordShort();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementXAccess().getWordShortParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNElementX__Alternatives"


    // $ANTLR start "rule__NoNElementX2__Alternatives"
    // InternalNLX.g:2812:1: rule__NoNElementX2__Alternatives : ( ( ruleSimpleUnit ) | ( ruleUnit ) | ( ruleNoNElement ) | ( ruleChapterAlpha ) );
    public final void rule__NoNElementX2__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2816:1: ( ( ruleSimpleUnit ) | ( ruleUnit ) | ( ruleNoNElement ) | ( ruleChapterAlpha ) )
            int alt24=4;
            alt24 = dfa24.predict(input);
            switch (alt24) {
                case 1 :
                    // InternalNLX.g:2817:2: ( ruleSimpleUnit )
                    {
                    // InternalNLX.g:2817:2: ( ruleSimpleUnit )
                    // InternalNLX.g:2818:3: ruleSimpleUnit
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementX2Access().getSimpleUnitParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSimpleUnit();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementX2Access().getSimpleUnitParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2823:2: ( ruleUnit )
                    {
                    // InternalNLX.g:2823:2: ( ruleUnit )
                    // InternalNLX.g:2824:3: ruleUnit
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementX2Access().getUnitParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnit();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementX2Access().getUnitParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2829:2: ( ruleNoNElement )
                    {
                    // InternalNLX.g:2829:2: ( ruleNoNElement )
                    // InternalNLX.g:2830:3: ruleNoNElement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementX2Access().getNoNElementParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNoNElement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementX2Access().getNoNElementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:2835:2: ( ruleChapterAlpha )
                    {
                    // InternalNLX.g:2835:2: ( ruleChapterAlpha )
                    // InternalNLX.g:2836:3: ruleChapterAlpha
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNoNElementX2Access().getChapterAlphaParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChapterAlpha();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNoNElementX2Access().getChapterAlphaParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNElementX2__Alternatives"


    // $ANTLR start "rule__Elements__Alternatives"
    // InternalNLX.g:2845:1: rule__Elements__Alternatives : ( ( ruleSymbols ) | ( ( ruleNoNElementX2 ) ) | ( ruleWordShort ) );
    public final void rule__Elements__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2849:1: ( ( ruleSymbols ) | ( ( ruleNoNElementX2 ) ) | ( ruleWordShort ) )
            int alt25=3;
            switch ( input.LA(1) ) {
            case RULE_DASH:
            case RULE_SEPARATORS:
            case RULE_PERCENT:
                {
                alt25=1;
                }
                break;
            case RULE_MINUS:
                {
                int LA25_2 = input.LA(2);

                if ( (LA25_2==EOF||(LA25_2>=RULE_NEWLINE && LA25_2<=RULE_SPACE)||(LA25_2>=RULE_FULL_STOP_IM && LA25_2<=RULE_FULL_STOP_NL)||(LA25_2>=RULE_BR_CL && LA25_2<=RULE_KOMMA)||(LA25_2>=RULE_TABLE_LINE && LA25_2<=RULE_HORIZ_SEP)||LA25_2==RULE_EXBR_CL||LA25_2==RULE_EXBRC_CL) ) {
                    alt25=1;
                }
                else if ( (LA25_2==RULE_INT) ) {
                    alt25=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 25, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_MULTI:
                {
                switch ( input.LA(2) ) {
                case EOF:
                case RULE_NEWLINE:
                case RULE_END:
                case RULE_SPACE:
                case RULE_FULL_STOP_IM:
                case RULE_FS:
                case RULE_FULL_STOP_NL:
                case RULE_BR_CL:
                case RULE_KOMMA:
                case RULE_TABLE_LINE:
                case RULE_HORIZ_SEP:
                case RULE_EXBR_CL:
                case RULE_EXBRC_CL:
                    {
                    alt25=1;
                    }
                    break;
                case RULE_DOT:
                    {
                    int LA25_6 = input.LA(3);

                    if ( (LA25_6==RULE_NEWLINE||LA25_6==RULE_SPACE||LA25_6==RULE_BR_CL||LA25_6==RULE_EXBR_CL||LA25_6==RULE_EXBRC_CL) ) {
                        alt25=1;
                    }
                    else if ( (LA25_6==RULE_INT||(LA25_6>=RULE_MULTI && LA25_6<=RULE_MINUS)||LA25_6==RULE_DOT||(LA25_6>=RULE_ID && LA25_6<=RULE_COLON)) ) {
                        alt25=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 25, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_INT:
                case RULE_MULTI:
                case RULE_DASH:
                case RULE_MINUS:
                case RULE_ID:
                case RULE_ID_C:
                case RULE_ALL_ALPHA:
                case RULE_ALPHA:
                case RULE_IT_ID:
                case RULE_DOUBLE_DOT:
                case RULE_ID_ALL:
                case RULE_HEX_NUMBER:
                case RULE_CURL:
                case RULE_SLASH:
                case RULE_SEPARATORS:
                case RULE_SEPARATORS_IT:
                case RULE_COLON:
                    {
                    alt25=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 25, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_HASH:
            case RULE_INT:
            case RULE_DOT:
            case RULE_ID:
            case RULE_ID_C:
            case RULE_ALL_ALPHA:
            case RULE_IT_ID:
            case RULE_DOUBLE_DOT:
            case RULE_HEX_NUMBER:
            case RULE_CURL:
            case RULE_SLASH:
            case RULE_SEPARATORS_IT:
            case RULE_COLON:
            case RULE_PARAGR:
            case RULE_OPERATORS:
            case RULE_ARROW:
            case RULE_SMILEY:
            case RULE_TRIPLE_DOT:
            case RULE_BR_O:
            case RULE_EXBR_O:
            case RULE_EXBRC_O:
            case RULE_CURRENCY:
            case RULE_STRING:
            case RULE_SHORTCUTS:
            case RULE_IGNORED:
            case RULE_URL_PROTOCOL:
            case RULE_AT:
                {
                alt25=2;
                }
                break;
            case RULE_ALPHA:
                {
                switch ( input.LA(2) ) {
                case RULE_DOT:
                    {
                    int LA25_7 = input.LA(3);

                    if ( (LA25_7==RULE_INT||(LA25_7>=RULE_MULTI && LA25_7<=RULE_MINUS)||LA25_7==RULE_DOT||(LA25_7>=RULE_ID && LA25_7<=RULE_COLON)) ) {
                        alt25=2;
                    }
                    else if ( (LA25_7==RULE_NEWLINE||LA25_7==RULE_SPACE||LA25_7==RULE_BR_CL||LA25_7==RULE_EXBR_CL||LA25_7==RULE_EXBRC_CL) ) {
                        alt25=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 25, 7, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_MULTI:
                case RULE_DASH:
                case RULE_MINUS:
                case RULE_SLASH:
                case RULE_SEPARATORS:
                case RULE_SEPARATORS_IT:
                case RULE_COLON:
                    {
                    alt25=2;
                    }
                    break;
                case EOF:
                case RULE_NEWLINE:
                case RULE_END:
                case RULE_SPACE:
                case RULE_FULL_STOP_IM:
                case RULE_FS:
                case RULE_FULL_STOP_NL:
                case RULE_BR_CL:
                case RULE_KOMMA:
                case RULE_TABLE_LINE:
                case RULE_HORIZ_SEP:
                case RULE_EXBR_CL:
                case RULE_EXBRC_CL:
                    {
                    alt25=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 25, 5, input);

                    throw nvae;
                }

                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalNLX.g:2850:2: ( ruleSymbols )
                    {
                    // InternalNLX.g:2850:2: ( ruleSymbols )
                    // InternalNLX.g:2851:3: ruleSymbols
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getElementsAccess().getSymbolsParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSymbols();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getElementsAccess().getSymbolsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2856:2: ( ( ruleNoNElementX2 ) )
                    {
                    // InternalNLX.g:2856:2: ( ( ruleNoNElementX2 ) )
                    // InternalNLX.g:2857:3: ( ruleNoNElementX2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getElementsAccess().getNoNElementX2ParserRuleCall_1()); 
                    }
                    // InternalNLX.g:2858:3: ( ruleNoNElementX2 )
                    // InternalNLX.g:2858:4: ruleNoNElementX2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNoNElementX2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getElementsAccess().getNoNElementX2ParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2862:2: ( ruleWordShort )
                    {
                    // InternalNLX.g:2862:2: ( ruleWordShort )
                    // InternalNLX.g:2863:3: ruleWordShort
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getElementsAccess().getWordShortParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWordShort();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getElementsAccess().getWordShortParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elements__Alternatives"


    // $ANTLR start "rule__AllElements__Alternatives"
    // InternalNLX.g:2872:1: rule__AllElements__Alternatives : ( ( ( ruleElements ) ) | ( ruleNew_Line ) );
    public final void rule__AllElements__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2876:1: ( ( ( ruleElements ) ) | ( ruleNew_Line ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( ((LA26_0>=RULE_HASH && LA26_0<=RULE_INT)||(LA26_0>=RULE_MULTI && LA26_0<=RULE_MINUS)||LA26_0==RULE_DOT||(LA26_0>=RULE_ID && LA26_0<=RULE_DOUBLE_DOT)||(LA26_0>=RULE_HEX_NUMBER && LA26_0<=RULE_TRIPLE_DOT)||(LA26_0>=RULE_BR_O && LA26_0<=RULE_EXBR_O)||LA26_0==RULE_EXBRC_O||(LA26_0>=RULE_CURRENCY && LA26_0<=RULE_AT)) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_NEWLINE) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalNLX.g:2877:2: ( ( ruleElements ) )
                    {
                    // InternalNLX.g:2877:2: ( ( ruleElements ) )
                    // InternalNLX.g:2878:3: ( ruleElements )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAllElementsAccess().getElementsParserRuleCall_0()); 
                    }
                    // InternalNLX.g:2879:3: ( ruleElements )
                    // InternalNLX.g:2879:4: ruleElements
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleElements();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAllElementsAccess().getElementsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2883:2: ( ruleNew_Line )
                    {
                    // InternalNLX.g:2883:2: ( ruleNew_Line )
                    // InternalNLX.g:2884:3: ruleNew_Line
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAllElementsAccess().getNew_LineParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNew_Line();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAllElementsAccess().getNew_LineParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AllElements__Alternatives"


    // $ANTLR start "rule__BracketSentence__SeparatorAlternatives_3_0"
    // InternalNLX.g:2893:1: rule__BracketSentence__SeparatorAlternatives_3_0 : ( ( RULE_DOT ) | ( RULE_FS ) | ( ruleFullStop ) );
    public final void rule__BracketSentence__SeparatorAlternatives_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2897:1: ( ( RULE_DOT ) | ( RULE_FS ) | ( ruleFullStop ) )
            int alt27=3;
            switch ( input.LA(1) ) {
            case RULE_DOT:
                {
                alt27=1;
                }
                break;
            case RULE_FS:
                {
                alt27=2;
                }
                break;
            case RULE_FULL_STOP_IM:
            case RULE_FULL_STOP_NL:
                {
                alt27=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalNLX.g:2898:2: ( RULE_DOT )
                    {
                    // InternalNLX.g:2898:2: ( RULE_DOT )
                    // InternalNLX.g:2899:3: RULE_DOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBracketSentenceAccess().getSeparatorDOTTerminalRuleCall_3_0_0()); 
                    }
                    match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBracketSentenceAccess().getSeparatorDOTTerminalRuleCall_3_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2904:2: ( RULE_FS )
                    {
                    // InternalNLX.g:2904:2: ( RULE_FS )
                    // InternalNLX.g:2905:3: RULE_FS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBracketSentenceAccess().getSeparatorFSTerminalRuleCall_3_0_1()); 
                    }
                    match(input,RULE_FS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBracketSentenceAccess().getSeparatorFSTerminalRuleCall_3_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2910:2: ( ruleFullStop )
                    {
                    // InternalNLX.g:2910:2: ( ruleFullStop )
                    // InternalNLX.g:2911:3: ruleFullStop
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBracketSentenceAccess().getSeparatorFullStopParserRuleCall_3_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFullStop();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBracketSentenceAccess().getSeparatorFullStopParserRuleCall_3_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__SeparatorAlternatives_3_0"


    // $ANTLR start "rule__BracketSentence__Alternatives_4"
    // InternalNLX.g:2920:1: rule__BracketSentence__Alternatives_4 : ( ( RULE_SPACE ) | ( RULE_NEWLINE ) );
    public final void rule__BracketSentence__Alternatives_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2924:1: ( ( RULE_SPACE ) | ( RULE_NEWLINE ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_SPACE) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_NEWLINE) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalNLX.g:2925:2: ( RULE_SPACE )
                    {
                    // InternalNLX.g:2925:2: ( RULE_SPACE )
                    // InternalNLX.g:2926:3: RULE_SPACE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBracketSentenceAccess().getSPACETerminalRuleCall_4_0()); 
                    }
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBracketSentenceAccess().getSPACETerminalRuleCall_4_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2931:2: ( RULE_NEWLINE )
                    {
                    // InternalNLX.g:2931:2: ( RULE_NEWLINE )
                    // InternalNLX.g:2932:3: RULE_NEWLINE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBracketSentenceAccess().getNEWLINETerminalRuleCall_4_1()); 
                    }
                    match(input,RULE_NEWLINE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBracketSentenceAccess().getNEWLINETerminalRuleCall_4_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Alternatives_4"


    // $ANTLR start "rule__ExtBracketSentence__SeparatorAlternatives_3_0"
    // InternalNLX.g:2941:1: rule__ExtBracketSentence__SeparatorAlternatives_3_0 : ( ( RULE_DOT ) | ( RULE_FS ) | ( ruleFullStop ) );
    public final void rule__ExtBracketSentence__SeparatorAlternatives_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2945:1: ( ( RULE_DOT ) | ( RULE_FS ) | ( ruleFullStop ) )
            int alt29=3;
            switch ( input.LA(1) ) {
            case RULE_DOT:
                {
                alt29=1;
                }
                break;
            case RULE_FS:
                {
                alt29=2;
                }
                break;
            case RULE_FULL_STOP_IM:
            case RULE_FULL_STOP_NL:
                {
                alt29=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalNLX.g:2946:2: ( RULE_DOT )
                    {
                    // InternalNLX.g:2946:2: ( RULE_DOT )
                    // InternalNLX.g:2947:3: RULE_DOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExtBracketSentenceAccess().getSeparatorDOTTerminalRuleCall_3_0_0()); 
                    }
                    match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExtBracketSentenceAccess().getSeparatorDOTTerminalRuleCall_3_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2952:2: ( RULE_FS )
                    {
                    // InternalNLX.g:2952:2: ( RULE_FS )
                    // InternalNLX.g:2953:3: RULE_FS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExtBracketSentenceAccess().getSeparatorFSTerminalRuleCall_3_0_1()); 
                    }
                    match(input,RULE_FS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExtBracketSentenceAccess().getSeparatorFSTerminalRuleCall_3_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2958:2: ( ruleFullStop )
                    {
                    // InternalNLX.g:2958:2: ( ruleFullStop )
                    // InternalNLX.g:2959:3: ruleFullStop
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExtBracketSentenceAccess().getSeparatorFullStopParserRuleCall_3_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFullStop();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExtBracketSentenceAccess().getSeparatorFullStopParserRuleCall_3_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__SeparatorAlternatives_3_0"


    // $ANTLR start "rule__ExtBracketSentenceC__SeparatorAlternatives_3_0"
    // InternalNLX.g:2968:1: rule__ExtBracketSentenceC__SeparatorAlternatives_3_0 : ( ( RULE_DOT ) | ( RULE_FS ) | ( ruleFullStop ) );
    public final void rule__ExtBracketSentenceC__SeparatorAlternatives_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2972:1: ( ( RULE_DOT ) | ( RULE_FS ) | ( ruleFullStop ) )
            int alt30=3;
            switch ( input.LA(1) ) {
            case RULE_DOT:
                {
                alt30=1;
                }
                break;
            case RULE_FS:
                {
                alt30=2;
                }
                break;
            case RULE_FULL_STOP_IM:
            case RULE_FULL_STOP_NL:
                {
                alt30=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalNLX.g:2973:2: ( RULE_DOT )
                    {
                    // InternalNLX.g:2973:2: ( RULE_DOT )
                    // InternalNLX.g:2974:3: RULE_DOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExtBracketSentenceCAccess().getSeparatorDOTTerminalRuleCall_3_0_0()); 
                    }
                    match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExtBracketSentenceCAccess().getSeparatorDOTTerminalRuleCall_3_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:2979:2: ( RULE_FS )
                    {
                    // InternalNLX.g:2979:2: ( RULE_FS )
                    // InternalNLX.g:2980:3: RULE_FS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExtBracketSentenceCAccess().getSeparatorFSTerminalRuleCall_3_0_1()); 
                    }
                    match(input,RULE_FS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExtBracketSentenceCAccess().getSeparatorFSTerminalRuleCall_3_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:2985:2: ( ruleFullStop )
                    {
                    // InternalNLX.g:2985:2: ( ruleFullStop )
                    // InternalNLX.g:2986:3: ruleFullStop
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExtBracketSentenceCAccess().getSeparatorFullStopParserRuleCall_3_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFullStop();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExtBracketSentenceCAccess().getSeparatorFullStopParserRuleCall_3_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__SeparatorAlternatives_3_0"


    // $ANTLR start "rule__FullStop__Alternatives"
    // InternalNLX.g:2995:1: rule__FullStop__Alternatives : ( ( RULE_FULL_STOP_NL ) | ( RULE_FULL_STOP_IM ) );
    public final void rule__FullStop__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:2999:1: ( ( RULE_FULL_STOP_NL ) | ( RULE_FULL_STOP_IM ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_FULL_STOP_NL) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_FULL_STOP_IM) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalNLX.g:3000:2: ( RULE_FULL_STOP_NL )
                    {
                    // InternalNLX.g:3000:2: ( RULE_FULL_STOP_NL )
                    // InternalNLX.g:3001:3: RULE_FULL_STOP_NL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFullStopAccess().getFULL_STOP_NLTerminalRuleCall_0()); 
                    }
                    match(input,RULE_FULL_STOP_NL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFullStopAccess().getFULL_STOP_NLTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3006:2: ( RULE_FULL_STOP_IM )
                    {
                    // InternalNLX.g:3006:2: ( RULE_FULL_STOP_IM )
                    // InternalNLX.g:3007:3: RULE_FULL_STOP_IM
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFullStopAccess().getFULL_STOP_IMTerminalRuleCall_1()); 
                    }
                    match(input,RULE_FULL_STOP_IM,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFullStopAccess().getFULL_STOP_IMTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullStop__Alternatives"


    // $ANTLR start "rule__Word__Alternatives_0"
    // InternalNLX.g:3016:1: rule__Word__Alternatives_0 : ( ( ( rule__Word__WordAssignment_0_0 ) ) | ( ( rule__Word__Group_0_1__0 ) ) );
    public final void rule__Word__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3020:1: ( ( ( rule__Word__WordAssignment_0_0 ) ) | ( ( rule__Word__Group_0_1__0 ) ) )
            int alt32=2;
            alt32 = dfa32.predict(input);
            switch (alt32) {
                case 1 :
                    // InternalNLX.g:3021:2: ( ( rule__Word__WordAssignment_0_0 ) )
                    {
                    // InternalNLX.g:3021:2: ( ( rule__Word__WordAssignment_0_0 ) )
                    // InternalNLX.g:3022:3: ( rule__Word__WordAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWordAccess().getWordAssignment_0_0()); 
                    }
                    // InternalNLX.g:3023:3: ( rule__Word__WordAssignment_0_0 )
                    // InternalNLX.g:3023:4: rule__Word__WordAssignment_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Word__WordAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWordAccess().getWordAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3027:2: ( ( rule__Word__Group_0_1__0 ) )
                    {
                    // InternalNLX.g:3027:2: ( ( rule__Word__Group_0_1__0 ) )
                    // InternalNLX.g:3028:3: ( rule__Word__Group_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWordAccess().getGroup_0_1()); 
                    }
                    // InternalNLX.g:3029:3: ( rule__Word__Group_0_1__0 )
                    // InternalNLX.g:3029:4: rule__Word__Group_0_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Word__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWordAccess().getGroup_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Alternatives_0"


    // $ANTLR start "rule__FragmentX__Alternatives"
    // InternalNLX.g:3037:1: rule__FragmentX__Alternatives : ( ( RULE_ID ) | ( RULE_ID_C ) | ( RULE_ALL_ALPHA ) );
    public final void rule__FragmentX__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3041:1: ( ( RULE_ID ) | ( RULE_ID_C ) | ( RULE_ALL_ALPHA ) )
            int alt33=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt33=1;
                }
                break;
            case RULE_ID_C:
                {
                alt33=2;
                }
                break;
            case RULE_ALL_ALPHA:
                {
                alt33=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalNLX.g:3042:2: ( RULE_ID )
                    {
                    // InternalNLX.g:3042:2: ( RULE_ID )
                    // InternalNLX.g:3043:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFragmentXAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFragmentXAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3048:2: ( RULE_ID_C )
                    {
                    // InternalNLX.g:3048:2: ( RULE_ID_C )
                    // InternalNLX.g:3049:3: RULE_ID_C
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFragmentXAccess().getID_CTerminalRuleCall_1()); 
                    }
                    match(input,RULE_ID_C,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFragmentXAccess().getID_CTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3054:2: ( RULE_ALL_ALPHA )
                    {
                    // InternalNLX.g:3054:2: ( RULE_ALL_ALPHA )
                    // InternalNLX.g:3055:3: RULE_ALL_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFragmentXAccess().getALL_ALPHATerminalRuleCall_2()); 
                    }
                    match(input,RULE_ALL_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFragmentXAccess().getALL_ALPHATerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FragmentX__Alternatives"


    // $ANTLR start "rule__Fragment__Alternatives"
    // InternalNLX.g:3064:1: rule__Fragment__Alternatives : ( ( ruleFragmentX ) | ( RULE_ALPHA ) );
    public final void rule__Fragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3068:1: ( ( ruleFragmentX ) | ( RULE_ALPHA ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( ((LA34_0>=RULE_ID && LA34_0<=RULE_ALL_ALPHA)) ) {
                alt34=1;
            }
            else if ( (LA34_0==RULE_ALPHA) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalNLX.g:3069:2: ( ruleFragmentX )
                    {
                    // InternalNLX.g:3069:2: ( ruleFragmentX )
                    // InternalNLX.g:3070:3: ruleFragmentX
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFragmentAccess().getFragmentXParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFragmentX();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFragmentAccess().getFragmentXParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3075:2: ( RULE_ALPHA )
                    {
                    // InternalNLX.g:3075:2: ( RULE_ALPHA )
                    // InternalNLX.g:3076:3: RULE_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFragmentAccess().getALPHATerminalRuleCall_1()); 
                    }
                    match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFragmentAccess().getALPHATerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fragment__Alternatives"


    // $ANTLR start "rule__Asterisk__Alternatives"
    // InternalNLX.g:3085:1: rule__Asterisk__Alternatives : ( ( ( rule__Asterisk__Group_0__0 ) ) | ( ( rule__Asterisk__Group_1__0 ) ) | ( ( rule__Asterisk__Group_2__0 ) ) );
    public final void rule__Asterisk__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3089:1: ( ( ( rule__Asterisk__Group_0__0 ) ) | ( ( rule__Asterisk__Group_1__0 ) ) | ( ( rule__Asterisk__Group_2__0 ) ) )
            int alt35=3;
            switch ( input.LA(1) ) {
            case RULE_MULTI:
                {
                alt35=1;
                }
                break;
            case RULE_ID:
            case RULE_ID_C:
            case RULE_ALL_ALPHA:
            case RULE_ALPHA:
                {
                alt35=2;
                }
                break;
            case RULE_IT_ID:
            case RULE_DOUBLE_DOT:
                {
                alt35=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }

            switch (alt35) {
                case 1 :
                    // InternalNLX.g:3090:2: ( ( rule__Asterisk__Group_0__0 ) )
                    {
                    // InternalNLX.g:3090:2: ( ( rule__Asterisk__Group_0__0 ) )
                    // InternalNLX.g:3091:3: ( rule__Asterisk__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAsteriskAccess().getGroup_0()); 
                    }
                    // InternalNLX.g:3092:3: ( rule__Asterisk__Group_0__0 )
                    // InternalNLX.g:3092:4: rule__Asterisk__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Asterisk__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAsteriskAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3096:2: ( ( rule__Asterisk__Group_1__0 ) )
                    {
                    // InternalNLX.g:3096:2: ( ( rule__Asterisk__Group_1__0 ) )
                    // InternalNLX.g:3097:3: ( rule__Asterisk__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAsteriskAccess().getGroup_1()); 
                    }
                    // InternalNLX.g:3098:3: ( rule__Asterisk__Group_1__0 )
                    // InternalNLX.g:3098:4: rule__Asterisk__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Asterisk__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAsteriskAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3102:2: ( ( rule__Asterisk__Group_2__0 ) )
                    {
                    // InternalNLX.g:3102:2: ( ( rule__Asterisk__Group_2__0 ) )
                    // InternalNLX.g:3103:3: ( rule__Asterisk__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAsteriskAccess().getGroup_2()); 
                    }
                    // InternalNLX.g:3104:3: ( rule__Asterisk__Group_2__0 )
                    // InternalNLX.g:3104:4: rule__Asterisk__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Asterisk__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAsteriskAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Alternatives"


    // $ANTLR start "rule__ItWord__Alternatives_0"
    // InternalNLX.g:3112:1: rule__ItWord__Alternatives_0 : ( ( ( rule__ItWord__Group_0_0__0 ) ) | ( ( rule__ItWord__Group_0_1__0 ) ) );
    public final void rule__ItWord__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3116:1: ( ( ( rule__ItWord__Group_0_0__0 ) ) | ( ( rule__ItWord__Group_0_1__0 ) ) )
            int alt36=2;
            alt36 = dfa36.predict(input);
            switch (alt36) {
                case 1 :
                    // InternalNLX.g:3117:2: ( ( rule__ItWord__Group_0_0__0 ) )
                    {
                    // InternalNLX.g:3117:2: ( ( rule__ItWord__Group_0_0__0 ) )
                    // InternalNLX.g:3118:3: ( rule__ItWord__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getGroup_0_0()); 
                    }
                    // InternalNLX.g:3119:3: ( rule__ItWord__Group_0_0__0 )
                    // InternalNLX.g:3119:4: rule__ItWord__Group_0_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3123:2: ( ( rule__ItWord__Group_0_1__0 ) )
                    {
                    // InternalNLX.g:3123:2: ( ( rule__ItWord__Group_0_1__0 ) )
                    // InternalNLX.g:3124:3: ( rule__ItWord__Group_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getGroup_0_1()); 
                    }
                    // InternalNLX.g:3125:3: ( rule__ItWord__Group_0_1__0 )
                    // InternalNLX.g:3125:4: rule__ItWord__Group_0_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getGroup_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Alternatives_0"


    // $ANTLR start "rule__ItWord__Alternatives_0_0_0"
    // InternalNLX.g:3133:1: rule__ItWord__Alternatives_0_0_0 : ( ( ( rule__ItWord__Group_0_0_0_0__0 ) ) | ( ( rule__ItWord__Alternatives_0_0_0_1 ) ) );
    public final void rule__ItWord__Alternatives_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3137:1: ( ( ( rule__ItWord__Group_0_0_0_0__0 ) ) | ( ( rule__ItWord__Alternatives_0_0_0_1 ) ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_HASH||LA37_0==RULE_MULTI||LA37_0==RULE_DOT||(LA37_0>=RULE_SEPARATORS_IT && LA37_0<=RULE_COLON)||LA37_0==RULE_CURRENCY) ) {
                alt37=1;
            }
            else if ( (LA37_0==RULE_ALL_ALPHA||(LA37_0>=RULE_IT_ID && LA37_0<=RULE_DOUBLE_DOT)||LA37_0==RULE_CURL) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalNLX.g:3138:2: ( ( rule__ItWord__Group_0_0_0_0__0 ) )
                    {
                    // InternalNLX.g:3138:2: ( ( rule__ItWord__Group_0_0_0_0__0 ) )
                    // InternalNLX.g:3139:3: ( rule__ItWord__Group_0_0_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getGroup_0_0_0_0()); 
                    }
                    // InternalNLX.g:3140:3: ( rule__ItWord__Group_0_0_0_0__0 )
                    // InternalNLX.g:3140:4: rule__ItWord__Group_0_0_0_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__Group_0_0_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getGroup_0_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3144:2: ( ( rule__ItWord__Alternatives_0_0_0_1 ) )
                    {
                    // InternalNLX.g:3144:2: ( ( rule__ItWord__Alternatives_0_0_0_1 ) )
                    // InternalNLX.g:3145:3: ( rule__ItWord__Alternatives_0_0_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getAlternatives_0_0_0_1()); 
                    }
                    // InternalNLX.g:3146:3: ( rule__ItWord__Alternatives_0_0_0_1 )
                    // InternalNLX.g:3146:4: rule__ItWord__Alternatives_0_0_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__Alternatives_0_0_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getAlternatives_0_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Alternatives_0_0_0"


    // $ANTLR start "rule__ItWord__Alternatives_0_0_0_0_0"
    // InternalNLX.g:3154:1: rule__ItWord__Alternatives_0_0_0_0_0 : ( ( ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 ) ) ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 )* ) ) | ( ( rule__ItWord__WordAssignment_0_0_0_0_0_1 ) ) | ( ( rule__ItWord__WordAssignment_0_0_0_0_0_2 ) ) | ( ( rule__ItWord__WordAssignment_0_0_0_0_0_3 ) ) );
    public final void rule__ItWord__Alternatives_0_0_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3158:1: ( ( ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 ) ) ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 )* ) ) | ( ( rule__ItWord__WordAssignment_0_0_0_0_0_1 ) ) | ( ( rule__ItWord__WordAssignment_0_0_0_0_0_2 ) ) | ( ( rule__ItWord__WordAssignment_0_0_0_0_0_3 ) ) )
            int alt39=4;
            switch ( input.LA(1) ) {
            case RULE_DOT:
            case RULE_SEPARATORS_IT:
            case RULE_COLON:
                {
                alt39=1;
                }
                break;
            case RULE_HASH:
                {
                alt39=2;
                }
                break;
            case RULE_MULTI:
                {
                alt39=3;
                }
                break;
            case RULE_CURRENCY:
                {
                alt39=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalNLX.g:3159:2: ( ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 ) ) ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 )* ) )
                    {
                    // InternalNLX.g:3159:2: ( ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 ) ) ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 )* ) )
                    // InternalNLX.g:3160:3: ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 ) ) ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 )* )
                    {
                    // InternalNLX.g:3160:3: ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 ) )
                    // InternalNLX.g:3161:4: ( rule__ItWord__WordAssignment_0_0_0_0_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_0_0()); 
                    }
                    // InternalNLX.g:3162:4: ( rule__ItWord__WordAssignment_0_0_0_0_0_0 )
                    // InternalNLX.g:3162:5: rule__ItWord__WordAssignment_0_0_0_0_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_7);
                    rule__ItWord__WordAssignment_0_0_0_0_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_0_0()); 
                    }

                    }

                    // InternalNLX.g:3165:3: ( ( rule__ItWord__WordAssignment_0_0_0_0_0_0 )* )
                    // InternalNLX.g:3166:4: ( rule__ItWord__WordAssignment_0_0_0_0_0_0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_0_0()); 
                    }
                    // InternalNLX.g:3167:4: ( rule__ItWord__WordAssignment_0_0_0_0_0_0 )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==RULE_DOT||(LA38_0>=RULE_SEPARATORS_IT && LA38_0<=RULE_COLON)) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // InternalNLX.g:3167:5: rule__ItWord__WordAssignment_0_0_0_0_0_0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_7);
                    	    rule__ItWord__WordAssignment_0_0_0_0_0_0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_0_0()); 
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3172:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_0_1 ) )
                    {
                    // InternalNLX.g:3172:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_0_1 ) )
                    // InternalNLX.g:3173:3: ( rule__ItWord__WordAssignment_0_0_0_0_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_0_1()); 
                    }
                    // InternalNLX.g:3174:3: ( rule__ItWord__WordAssignment_0_0_0_0_0_1 )
                    // InternalNLX.g:3174:4: rule__ItWord__WordAssignment_0_0_0_0_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__WordAssignment_0_0_0_0_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3178:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_0_2 ) )
                    {
                    // InternalNLX.g:3178:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_0_2 ) )
                    // InternalNLX.g:3179:3: ( rule__ItWord__WordAssignment_0_0_0_0_0_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_0_2()); 
                    }
                    // InternalNLX.g:3180:3: ( rule__ItWord__WordAssignment_0_0_0_0_0_2 )
                    // InternalNLX.g:3180:4: rule__ItWord__WordAssignment_0_0_0_0_0_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__WordAssignment_0_0_0_0_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:3184:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_0_3 ) )
                    {
                    // InternalNLX.g:3184:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_0_3 ) )
                    // InternalNLX.g:3185:3: ( rule__ItWord__WordAssignment_0_0_0_0_0_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_0_3()); 
                    }
                    // InternalNLX.g:3186:3: ( rule__ItWord__WordAssignment_0_0_0_0_0_3 )
                    // InternalNLX.g:3186:4: rule__ItWord__WordAssignment_0_0_0_0_0_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__WordAssignment_0_0_0_0_0_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Alternatives_0_0_0_0_0"


    // $ANTLR start "rule__ItWord__Alternatives_0_0_0_0_1"
    // InternalNLX.g:3194:1: rule__ItWord__Alternatives_0_0_0_0_1 : ( ( ( rule__ItWord__WordAssignment_0_0_0_0_1_0 ) ) | ( ( rule__ItWord__WordAssignment_0_0_0_0_1_1 ) ) );
    public final void rule__ItWord__Alternatives_0_0_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3198:1: ( ( ( rule__ItWord__WordAssignment_0_0_0_0_1_0 ) ) | ( ( rule__ItWord__WordAssignment_0_0_0_0_1_1 ) ) )
            int alt40=2;
            switch ( input.LA(1) ) {
            case RULE_ALL_ALPHA:
                {
                int LA40_1 = input.LA(2);

                if ( (synpred68_InternalNLX()) ) {
                    alt40=1;
                }
                else if ( (true) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ALPHA:
                {
                int LA40_2 = input.LA(2);

                if ( (synpred68_InternalNLX()) ) {
                    alt40=1;
                }
                else if ( (true) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
            case RULE_MULTI:
            case RULE_IT_ID:
            case RULE_DOUBLE_DOT:
            case RULE_ID_ALL:
            case RULE_HEX_NUMBER:
            case RULE_CURL:
                {
                alt40=1;
                }
                break;
            case RULE_ID:
                {
                int LA40_4 = input.LA(2);

                if ( (synpred68_InternalNLX()) ) {
                    alt40=1;
                }
                else if ( (true) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID_C:
                {
                int LA40_5 = input.LA(2);

                if ( (synpred68_InternalNLX()) ) {
                    alt40=1;
                }
                else if ( (true) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 5, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // InternalNLX.g:3199:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_1_0 ) )
                    {
                    // InternalNLX.g:3199:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_1_0 ) )
                    // InternalNLX.g:3200:3: ( rule__ItWord__WordAssignment_0_0_0_0_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_1_0()); 
                    }
                    // InternalNLX.g:3201:3: ( rule__ItWord__WordAssignment_0_0_0_0_1_0 )
                    // InternalNLX.g:3201:4: rule__ItWord__WordAssignment_0_0_0_0_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__WordAssignment_0_0_0_0_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3205:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_1_1 ) )
                    {
                    // InternalNLX.g:3205:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_1_1 ) )
                    // InternalNLX.g:3206:3: ( rule__ItWord__WordAssignment_0_0_0_0_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_1_1()); 
                    }
                    // InternalNLX.g:3207:3: ( rule__ItWord__WordAssignment_0_0_0_0_1_1 )
                    // InternalNLX.g:3207:4: rule__ItWord__WordAssignment_0_0_0_0_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__WordAssignment_0_0_0_0_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Alternatives_0_0_0_0_1"


    // $ANTLR start "rule__ItWord__Alternatives_0_0_0_1"
    // InternalNLX.g:3215:1: rule__ItWord__Alternatives_0_0_0_1 : ( ( ( rule__ItWord__WordAssignment_0_0_0_1_0 ) ) | ( ( rule__ItWord__WordAssignment_0_0_0_1_1 ) ) | ( ( rule__ItWord__Group_0_0_0_1_2__0 ) ) );
    public final void rule__ItWord__Alternatives_0_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3219:1: ( ( ( rule__ItWord__WordAssignment_0_0_0_1_0 ) ) | ( ( rule__ItWord__WordAssignment_0_0_0_1_1 ) ) | ( ( rule__ItWord__Group_0_0_0_1_2__0 ) ) )
            int alt41=3;
            switch ( input.LA(1) ) {
            case RULE_IT_ID:
            case RULE_DOUBLE_DOT:
                {
                alt41=1;
                }
                break;
            case RULE_CURL:
                {
                alt41=2;
                }
                break;
            case RULE_ALL_ALPHA:
                {
                alt41=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // InternalNLX.g:3220:2: ( ( rule__ItWord__WordAssignment_0_0_0_1_0 ) )
                    {
                    // InternalNLX.g:3220:2: ( ( rule__ItWord__WordAssignment_0_0_0_1_0 ) )
                    // InternalNLX.g:3221:3: ( rule__ItWord__WordAssignment_0_0_0_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_1_0()); 
                    }
                    // InternalNLX.g:3222:3: ( rule__ItWord__WordAssignment_0_0_0_1_0 )
                    // InternalNLX.g:3222:4: rule__ItWord__WordAssignment_0_0_0_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__WordAssignment_0_0_0_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3226:2: ( ( rule__ItWord__WordAssignment_0_0_0_1_1 ) )
                    {
                    // InternalNLX.g:3226:2: ( ( rule__ItWord__WordAssignment_0_0_0_1_1 ) )
                    // InternalNLX.g:3227:3: ( rule__ItWord__WordAssignment_0_0_0_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_1_1()); 
                    }
                    // InternalNLX.g:3228:3: ( rule__ItWord__WordAssignment_0_0_0_1_1 )
                    // InternalNLX.g:3228:4: rule__ItWord__WordAssignment_0_0_0_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__WordAssignment_0_0_0_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3232:2: ( ( rule__ItWord__Group_0_0_0_1_2__0 ) )
                    {
                    // InternalNLX.g:3232:2: ( ( rule__ItWord__Group_0_0_0_1_2__0 ) )
                    // InternalNLX.g:3233:3: ( rule__ItWord__Group_0_0_0_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getGroup_0_0_0_1_2()); 
                    }
                    // InternalNLX.g:3234:3: ( rule__ItWord__Group_0_0_0_1_2__0 )
                    // InternalNLX.g:3234:4: rule__ItWord__Group_0_0_0_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__Group_0_0_0_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getGroup_0_0_0_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Alternatives_0_0_0_1"


    // $ANTLR start "rule__ItWord__Alternatives_0_1_0"
    // InternalNLX.g:3242:1: rule__ItWord__Alternatives_0_1_0 : ( ( ( rule__ItWord__WordAssignment_0_1_0_0 ) ) | ( ( rule__ItWord__WordAssignment_0_1_0_1 ) ) );
    public final void rule__ItWord__Alternatives_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3246:1: ( ( ( rule__ItWord__WordAssignment_0_1_0_0 ) ) | ( ( rule__ItWord__WordAssignment_0_1_0_1 ) ) )
            int alt42=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA42_1 = input.LA(2);

                if ( (LA42_1==RULE_MULTI) ) {
                    alt42=2;
                }
                else if ( ((LA42_1>=RULE_DASH && LA42_1<=RULE_MINUS)||LA42_1==RULE_DOT||(LA42_1>=RULE_SLASH && LA42_1<=RULE_COLON)) ) {
                    alt42=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID_C:
                {
                int LA42_2 = input.LA(2);

                if ( ((LA42_2>=RULE_DASH && LA42_2<=RULE_MINUS)||LA42_2==RULE_DOT||(LA42_2>=RULE_SLASH && LA42_2<=RULE_COLON)) ) {
                    alt42=1;
                }
                else if ( (LA42_2==RULE_MULTI) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ALL_ALPHA:
                {
                int LA42_3 = input.LA(2);

                if ( (LA42_3==RULE_MULTI) ) {
                    alt42=2;
                }
                else if ( ((LA42_3>=RULE_DASH && LA42_3<=RULE_MINUS)||LA42_3==RULE_DOT||(LA42_3>=RULE_SLASH && LA42_3<=RULE_COLON)) ) {
                    alt42=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ALPHA:
                {
                int LA42_4 = input.LA(2);

                if ( ((LA42_4>=RULE_DASH && LA42_4<=RULE_MINUS)||LA42_4==RULE_DOT||(LA42_4>=RULE_SLASH && LA42_4<=RULE_COLON)) ) {
                    alt42=1;
                }
                else if ( (LA42_4==RULE_MULTI) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_MULTI:
            case RULE_IT_ID:
            case RULE_DOUBLE_DOT:
                {
                alt42=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }

            switch (alt42) {
                case 1 :
                    // InternalNLX.g:3247:2: ( ( rule__ItWord__WordAssignment_0_1_0_0 ) )
                    {
                    // InternalNLX.g:3247:2: ( ( rule__ItWord__WordAssignment_0_1_0_0 ) )
                    // InternalNLX.g:3248:3: ( rule__ItWord__WordAssignment_0_1_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getWordAssignment_0_1_0_0()); 
                    }
                    // InternalNLX.g:3249:3: ( rule__ItWord__WordAssignment_0_1_0_0 )
                    // InternalNLX.g:3249:4: rule__ItWord__WordAssignment_0_1_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__WordAssignment_0_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getWordAssignment_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3253:2: ( ( rule__ItWord__WordAssignment_0_1_0_1 ) )
                    {
                    // InternalNLX.g:3253:2: ( ( rule__ItWord__WordAssignment_0_1_0_1 ) )
                    // InternalNLX.g:3254:3: ( rule__ItWord__WordAssignment_0_1_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getWordAssignment_0_1_0_1()); 
                    }
                    // InternalNLX.g:3255:3: ( rule__ItWord__WordAssignment_0_1_0_1 )
                    // InternalNLX.g:3255:4: rule__ItWord__WordAssignment_0_1_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__WordAssignment_0_1_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getWordAssignment_0_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Alternatives_0_1_0"


    // $ANTLR start "rule__ItWord__Alternatives_0_1_1"
    // InternalNLX.g:3263:1: rule__ItWord__Alternatives_0_1_1 : ( ( ( rule__ItWord__Group_0_1_1_0__0 ) ) | ( ( rule__ItWord__Group_0_1_1_1__0 ) ) );
    public final void rule__ItWord__Alternatives_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3267:1: ( ( ( rule__ItWord__Group_0_1_1_0__0 ) ) | ( ( rule__ItWord__Group_0_1_1_1__0 ) ) )
            int alt43=2;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // InternalNLX.g:3268:2: ( ( rule__ItWord__Group_0_1_1_0__0 ) )
                    {
                    // InternalNLX.g:3268:2: ( ( rule__ItWord__Group_0_1_1_0__0 ) )
                    // InternalNLX.g:3269:3: ( rule__ItWord__Group_0_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getGroup_0_1_1_0()); 
                    }
                    // InternalNLX.g:3270:3: ( rule__ItWord__Group_0_1_1_0__0 )
                    // InternalNLX.g:3270:4: rule__ItWord__Group_0_1_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__Group_0_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getGroup_0_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3274:2: ( ( rule__ItWord__Group_0_1_1_1__0 ) )
                    {
                    // InternalNLX.g:3274:2: ( ( rule__ItWord__Group_0_1_1_1__0 ) )
                    // InternalNLX.g:3275:3: ( rule__ItWord__Group_0_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordAccess().getGroup_0_1_1_1()); 
                    }
                    // InternalNLX.g:3276:3: ( rule__ItWord__Group_0_1_1_1__0 )
                    // InternalNLX.g:3276:4: rule__ItWord__Group_0_1_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItWord__Group_0_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordAccess().getGroup_0_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Alternatives_0_1_1"


    // $ANTLR start "rule__Whitespace__Alternatives"
    // InternalNLX.g:3284:1: rule__Whitespace__Alternatives : ( ( RULE_SPACE ) | ( ( rule__Whitespace__Group_1__0 ) ) );
    public final void rule__Whitespace__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3288:1: ( ( RULE_SPACE ) | ( ( rule__Whitespace__Group_1__0 ) ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_SPACE) ) {
                int LA44_1 = input.LA(2);

                if ( (LA44_1==EOF||(LA44_1>=RULE_HASH && LA44_1<=RULE_INT)||(LA44_1>=RULE_MULTI && LA44_1<=RULE_MINUS)||LA44_1==RULE_DOT||(LA44_1>=RULE_ID && LA44_1<=RULE_DOUBLE_DOT)||(LA44_1>=RULE_CURL && LA44_1<=RULE_SLASH)||(LA44_1>=RULE_SEPARATORS_IT && LA44_1<=RULE_PARAGR)||(LA44_1>=RULE_OPERATORS && LA44_1<=RULE_TRIPLE_DOT)||LA44_1==RULE_TABLE_LINE||(LA44_1>=RULE_BR_O && LA44_1<=RULE_EXBR_O)||LA44_1==RULE_EXBRC_O||(LA44_1>=RULE_CURRENCY && LA44_1<=RULE_AT)) ) {
                    alt44=1;
                }
                else if ( (LA44_1==RULE_NEWLINE) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA44_0==RULE_NEWLINE) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalNLX.g:3289:2: ( RULE_SPACE )
                    {
                    // InternalNLX.g:3289:2: ( RULE_SPACE )
                    // InternalNLX.g:3290:3: RULE_SPACE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWhitespaceAccess().getSPACETerminalRuleCall_0()); 
                    }
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWhitespaceAccess().getSPACETerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3295:2: ( ( rule__Whitespace__Group_1__0 ) )
                    {
                    // InternalNLX.g:3295:2: ( ( rule__Whitespace__Group_1__0 ) )
                    // InternalNLX.g:3296:3: ( rule__Whitespace__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWhitespaceAccess().getGroup_1()); 
                    }
                    // InternalNLX.g:3297:3: ( rule__Whitespace__Group_1__0 )
                    // InternalNLX.g:3297:4: rule__Whitespace__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Whitespace__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWhitespaceAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Whitespace__Alternatives"


    // $ANTLR start "rule__ItWordEl__Alternatives"
    // InternalNLX.g:3305:1: rule__ItWordEl__Alternatives : ( ( RULE_IT_ID ) | ( RULE_DOUBLE_DOT ) );
    public final void rule__ItWordEl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3309:1: ( ( RULE_IT_ID ) | ( RULE_DOUBLE_DOT ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==RULE_IT_ID) ) {
                alt45=1;
            }
            else if ( (LA45_0==RULE_DOUBLE_DOT) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalNLX.g:3310:2: ( RULE_IT_ID )
                    {
                    // InternalNLX.g:3310:2: ( RULE_IT_ID )
                    // InternalNLX.g:3311:3: RULE_IT_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElAccess().getIT_IDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_IT_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElAccess().getIT_IDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3316:2: ( RULE_DOUBLE_DOT )
                    {
                    // InternalNLX.g:3316:2: ( RULE_DOUBLE_DOT )
                    // InternalNLX.g:3317:3: RULE_DOUBLE_DOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElAccess().getDOUBLE_DOTTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DOUBLE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElAccess().getDOUBLE_DOTTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWordEl__Alternatives"


    // $ANTLR start "rule__ItWordElurl__Alternatives"
    // InternalNLX.g:3326:1: rule__ItWordElurl__Alternatives : ( ( RULE_IT_ID ) | ( RULE_ID_ALL ) | ( RULE_ID ) );
    public final void rule__ItWordElurl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3330:1: ( ( RULE_IT_ID ) | ( RULE_ID_ALL ) | ( RULE_ID ) )
            int alt46=3;
            switch ( input.LA(1) ) {
            case RULE_IT_ID:
                {
                alt46=1;
                }
                break;
            case RULE_ID_ALL:
                {
                alt46=2;
                }
                break;
            case RULE_ID:
                {
                alt46=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }

            switch (alt46) {
                case 1 :
                    // InternalNLX.g:3331:2: ( RULE_IT_ID )
                    {
                    // InternalNLX.g:3331:2: ( RULE_IT_ID )
                    // InternalNLX.g:3332:3: RULE_IT_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElurlAccess().getIT_IDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_IT_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElurlAccess().getIT_IDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3337:2: ( RULE_ID_ALL )
                    {
                    // InternalNLX.g:3337:2: ( RULE_ID_ALL )
                    // InternalNLX.g:3338:3: RULE_ID_ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElurlAccess().getID_ALLTerminalRuleCall_1()); 
                    }
                    match(input,RULE_ID_ALL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElurlAccess().getID_ALLTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3343:2: ( RULE_ID )
                    {
                    // InternalNLX.g:3343:2: ( RULE_ID )
                    // InternalNLX.g:3344:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElurlAccess().getIDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElurlAccess().getIDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWordElurl__Alternatives"


    // $ANTLR start "rule__ItWordElX__Alternatives"
    // InternalNLX.g:3353:1: rule__ItWordElX__Alternatives : ( ( ruleItWordEl ) | ( RULE_INT ) | ( RULE_HEX_NUMBER ) | ( RULE_ID_ALL ) );
    public final void rule__ItWordElX__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3357:1: ( ( ruleItWordEl ) | ( RULE_INT ) | ( RULE_HEX_NUMBER ) | ( RULE_ID_ALL ) )
            int alt47=4;
            switch ( input.LA(1) ) {
            case RULE_IT_ID:
            case RULE_DOUBLE_DOT:
                {
                alt47=1;
                }
                break;
            case RULE_INT:
                {
                alt47=2;
                }
                break;
            case RULE_HEX_NUMBER:
                {
                alt47=3;
                }
                break;
            case RULE_ID_ALL:
                {
                alt47=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }

            switch (alt47) {
                case 1 :
                    // InternalNLX.g:3358:2: ( ruleItWordEl )
                    {
                    // InternalNLX.g:3358:2: ( ruleItWordEl )
                    // InternalNLX.g:3359:3: ruleItWordEl
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElXAccess().getItWordElParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleItWordEl();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElXAccess().getItWordElParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3364:2: ( RULE_INT )
                    {
                    // InternalNLX.g:3364:2: ( RULE_INT )
                    // InternalNLX.g:3365:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElXAccess().getINTTerminalRuleCall_1()); 
                    }
                    match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElXAccess().getINTTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3370:2: ( RULE_HEX_NUMBER )
                    {
                    // InternalNLX.g:3370:2: ( RULE_HEX_NUMBER )
                    // InternalNLX.g:3371:3: RULE_HEX_NUMBER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElXAccess().getHEX_NUMBERTerminalRuleCall_2()); 
                    }
                    match(input,RULE_HEX_NUMBER,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElXAccess().getHEX_NUMBERTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:3376:2: ( RULE_ID_ALL )
                    {
                    // InternalNLX.g:3376:2: ( RULE_ID_ALL )
                    // InternalNLX.g:3377:3: RULE_ID_ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElXAccess().getID_ALLTerminalRuleCall_3()); 
                    }
                    match(input,RULE_ID_ALL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElXAccess().getID_ALLTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWordElX__Alternatives"

}

@SuppressWarnings("all")
abstract class InternalNLXParser4 extends InternalNLXParser3 {

        InternalNLXParser4(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalNLXParser4(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__ItWordElXx__Alternatives"
    // InternalNLX.g:3386:1: rule__ItWordElXx__Alternatives : ( ( RULE_ALL_ALPHA ) | ( RULE_ALPHA ) | ( ( ruleItWordElX ) ) | ( ruleFragment ) | ( ruleAsterisk ) | ( RULE_ID_C ) | ( RULE_CURL ) );
    public final void rule__ItWordElXx__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3390:1: ( ( RULE_ALL_ALPHA ) | ( RULE_ALPHA ) | ( ( ruleItWordElX ) ) | ( ruleFragment ) | ( ruleAsterisk ) | ( RULE_ID_C ) | ( RULE_CURL ) )
            int alt48=7;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalNLX.g:3391:2: ( RULE_ALL_ALPHA )
                    {
                    // InternalNLX.g:3391:2: ( RULE_ALL_ALPHA )
                    // InternalNLX.g:3392:3: RULE_ALL_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElXxAccess().getALL_ALPHATerminalRuleCall_0()); 
                    }
                    match(input,RULE_ALL_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElXxAccess().getALL_ALPHATerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3397:2: ( RULE_ALPHA )
                    {
                    // InternalNLX.g:3397:2: ( RULE_ALPHA )
                    // InternalNLX.g:3398:3: RULE_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElXxAccess().getALPHATerminalRuleCall_1()); 
                    }
                    match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElXxAccess().getALPHATerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3403:2: ( ( ruleItWordElX ) )
                    {
                    // InternalNLX.g:3403:2: ( ( ruleItWordElX ) )
                    // InternalNLX.g:3404:3: ( ruleItWordElX )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElXxAccess().getItWordElXParserRuleCall_2()); 
                    }
                    // InternalNLX.g:3405:3: ( ruleItWordElX )
                    // InternalNLX.g:3405:4: ruleItWordElX
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleItWordElX();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElXxAccess().getItWordElXParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:3409:2: ( ruleFragment )
                    {
                    // InternalNLX.g:3409:2: ( ruleFragment )
                    // InternalNLX.g:3410:3: ruleFragment
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElXxAccess().getFragmentParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFragment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElXxAccess().getFragmentParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNLX.g:3415:2: ( ruleAsterisk )
                    {
                    // InternalNLX.g:3415:2: ( ruleAsterisk )
                    // InternalNLX.g:3416:3: ruleAsterisk
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElXxAccess().getAsteriskParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAsterisk();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElXxAccess().getAsteriskParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalNLX.g:3421:2: ( RULE_ID_C )
                    {
                    // InternalNLX.g:3421:2: ( RULE_ID_C )
                    // InternalNLX.g:3422:3: RULE_ID_C
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElXxAccess().getID_CTerminalRuleCall_5()); 
                    }
                    match(input,RULE_ID_C,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElXxAccess().getID_CTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalNLX.g:3427:2: ( RULE_CURL )
                    {
                    // InternalNLX.g:3427:2: ( RULE_CURL )
                    // InternalNLX.g:3428:3: RULE_CURL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItWordElXxAccess().getCURLTerminalRuleCall_6()); 
                    }
                    match(input,RULE_CURL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItWordElXxAccess().getCURLTerminalRuleCall_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWordElXx__Alternatives"


    // $ANTLR start "rule__SeparatorsL__Alternatives"
    // InternalNLX.g:3437:1: rule__SeparatorsL__Alternatives : ( ( RULE_SLASH ) | ( RULE_SEPARATORS ) | ( RULE_DASH ) | ( RULE_MINUS ) );
    public final void rule__SeparatorsL__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3441:1: ( ( RULE_SLASH ) | ( RULE_SEPARATORS ) | ( RULE_DASH ) | ( RULE_MINUS ) )
            int alt49=4;
            switch ( input.LA(1) ) {
            case RULE_SLASH:
                {
                alt49=1;
                }
                break;
            case RULE_SEPARATORS:
                {
                alt49=2;
                }
                break;
            case RULE_DASH:
                {
                alt49=3;
                }
                break;
            case RULE_MINUS:
                {
                alt49=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalNLX.g:3442:2: ( RULE_SLASH )
                    {
                    // InternalNLX.g:3442:2: ( RULE_SLASH )
                    // InternalNLX.g:3443:3: RULE_SLASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSeparatorsLAccess().getSLASHTerminalRuleCall_0()); 
                    }
                    match(input,RULE_SLASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSeparatorsLAccess().getSLASHTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3448:2: ( RULE_SEPARATORS )
                    {
                    // InternalNLX.g:3448:2: ( RULE_SEPARATORS )
                    // InternalNLX.g:3449:3: RULE_SEPARATORS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSeparatorsLAccess().getSEPARATORSTerminalRuleCall_1()); 
                    }
                    match(input,RULE_SEPARATORS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSeparatorsLAccess().getSEPARATORSTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3454:2: ( RULE_DASH )
                    {
                    // InternalNLX.g:3454:2: ( RULE_DASH )
                    // InternalNLX.g:3455:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSeparatorsLAccess().getDASHTerminalRuleCall_2()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSeparatorsLAccess().getDASHTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:3460:2: ( RULE_MINUS )
                    {
                    // InternalNLX.g:3460:2: ( RULE_MINUS )
                    // InternalNLX.g:3461:3: RULE_MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSeparatorsLAccess().getMINUSTerminalRuleCall_3()); 
                    }
                    match(input,RULE_MINUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSeparatorsLAccess().getMINUSTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SeparatorsL__Alternatives"


    // $ANTLR start "rule__SeparatorsIt__Alternatives"
    // InternalNLX.g:3470:1: rule__SeparatorsIt__Alternatives : ( ( RULE_DOT ) | ( RULE_SEPARATORS_IT ) | ( RULE_COLON ) );
    public final void rule__SeparatorsIt__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3474:1: ( ( RULE_DOT ) | ( RULE_SEPARATORS_IT ) | ( RULE_COLON ) )
            int alt50=3;
            switch ( input.LA(1) ) {
            case RULE_DOT:
                {
                alt50=1;
                }
                break;
            case RULE_SEPARATORS_IT:
                {
                alt50=2;
                }
                break;
            case RULE_COLON:
                {
                alt50=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalNLX.g:3475:2: ( RULE_DOT )
                    {
                    // InternalNLX.g:3475:2: ( RULE_DOT )
                    // InternalNLX.g:3476:3: RULE_DOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSeparatorsItAccess().getDOTTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSeparatorsItAccess().getDOTTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3481:2: ( RULE_SEPARATORS_IT )
                    {
                    // InternalNLX.g:3481:2: ( RULE_SEPARATORS_IT )
                    // InternalNLX.g:3482:3: RULE_SEPARATORS_IT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSeparatorsItAccess().getSEPARATORS_ITTerminalRuleCall_1()); 
                    }
                    match(input,RULE_SEPARATORS_IT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSeparatorsItAccess().getSEPARATORS_ITTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3487:2: ( RULE_COLON )
                    {
                    // InternalNLX.g:3487:2: ( RULE_COLON )
                    // InternalNLX.g:3488:3: RULE_COLON
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSeparatorsItAccess().getCOLONTerminalRuleCall_2()); 
                    }
                    match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSeparatorsItAccess().getCOLONTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SeparatorsIt__Alternatives"


    // $ANTLR start "rule__AllSep__Alternatives"
    // InternalNLX.g:3497:1: rule__AllSep__Alternatives : ( ( ruleSeparatorsIt ) | ( ruleSeparatorsL ) );
    public final void rule__AllSep__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3501:1: ( ( ruleSeparatorsIt ) | ( ruleSeparatorsL ) )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_DOT||(LA51_0>=RULE_SEPARATORS_IT && LA51_0<=RULE_COLON)) ) {
                alt51=1;
            }
            else if ( ((LA51_0>=RULE_DASH && LA51_0<=RULE_MINUS)||(LA51_0>=RULE_SLASH && LA51_0<=RULE_SEPARATORS)) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalNLX.g:3502:2: ( ruleSeparatorsIt )
                    {
                    // InternalNLX.g:3502:2: ( ruleSeparatorsIt )
                    // InternalNLX.g:3503:3: ruleSeparatorsIt
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAllSepAccess().getSeparatorsItParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSeparatorsIt();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAllSepAccess().getSeparatorsItParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3508:2: ( ruleSeparatorsL )
                    {
                    // InternalNLX.g:3508:2: ( ruleSeparatorsL )
                    // InternalNLX.g:3509:3: ruleSeparatorsL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAllSepAccess().getSeparatorsLParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSeparatorsL();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAllSepAccess().getSeparatorsLParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AllSep__Alternatives"


    // $ANTLR start "rule__Unit__Alternatives_2"
    // InternalNLX.g:3518:1: rule__Unit__Alternatives_2 : ( ( ( rule__Unit__UnitAssignment_2_0 ) ) | ( ( rule__Unit__UnitAssignment_2_1 ) ) | ( ( rule__Unit__UnitAssignment_2_2 ) ) );
    public final void rule__Unit__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3522:1: ( ( ( rule__Unit__UnitAssignment_2_0 ) ) | ( ( rule__Unit__UnitAssignment_2_1 ) ) | ( ( rule__Unit__UnitAssignment_2_2 ) ) )
            int alt52=3;
            switch ( input.LA(1) ) {
            case RULE_CURRENCY:
                {
                alt52=1;
                }
                break;
            case RULE_ID:
                {
                alt52=2;
                }
                break;
            case RULE_PERCENT:
                {
                alt52=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalNLX.g:3523:2: ( ( rule__Unit__UnitAssignment_2_0 ) )
                    {
                    // InternalNLX.g:3523:2: ( ( rule__Unit__UnitAssignment_2_0 ) )
                    // InternalNLX.g:3524:3: ( rule__Unit__UnitAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getUnitAssignment_2_0()); 
                    }
                    // InternalNLX.g:3525:3: ( rule__Unit__UnitAssignment_2_0 )
                    // InternalNLX.g:3525:4: rule__Unit__UnitAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnitAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getUnitAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3529:2: ( ( rule__Unit__UnitAssignment_2_1 ) )
                    {
                    // InternalNLX.g:3529:2: ( ( rule__Unit__UnitAssignment_2_1 ) )
                    // InternalNLX.g:3530:3: ( rule__Unit__UnitAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getUnitAssignment_2_1()); 
                    }
                    // InternalNLX.g:3531:3: ( rule__Unit__UnitAssignment_2_1 )
                    // InternalNLX.g:3531:4: rule__Unit__UnitAssignment_2_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnitAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getUnitAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3535:2: ( ( rule__Unit__UnitAssignment_2_2 ) )
                    {
                    // InternalNLX.g:3535:2: ( ( rule__Unit__UnitAssignment_2_2 ) )
                    // InternalNLX.g:3536:3: ( rule__Unit__UnitAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getUnitAssignment_2_2()); 
                    }
                    // InternalNLX.g:3537:3: ( rule__Unit__UnitAssignment_2_2 )
                    // InternalNLX.g:3537:4: rule__Unit__UnitAssignment_2_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnitAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getUnitAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Alternatives_2"


    // $ANTLR start "rule__SimpleUnit__Alternatives"
    // InternalNLX.g:3545:1: rule__SimpleUnit__Alternatives : ( ( ( rule__SimpleUnit__Group_0__0 ) ) | ( ( rule__SimpleUnit__ValueAssignment_1 ) ) | ( ( rule__SimpleUnit__ValueAssignment_2 ) ) );
    public final void rule__SimpleUnit__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3549:1: ( ( ( rule__SimpleUnit__Group_0__0 ) ) | ( ( rule__SimpleUnit__ValueAssignment_1 ) ) | ( ( rule__SimpleUnit__ValueAssignment_2 ) ) )
            int alt53=3;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_INT) ) {
                int LA53_1 = input.LA(2);

                if ( (LA53_1==RULE_DOT) ) {
                    alt53=1;
                }
                else if ( ((LA53_1>=RULE_DASH && LA53_1<=RULE_MINUS)||LA53_1==RULE_SLASH||(LA53_1>=RULE_SEPARATORS_IT && LA53_1<=RULE_COLON)) ) {
                    alt53=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA53_0==RULE_HEX_NUMBER) ) {
                alt53=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // InternalNLX.g:3550:2: ( ( rule__SimpleUnit__Group_0__0 ) )
                    {
                    // InternalNLX.g:3550:2: ( ( rule__SimpleUnit__Group_0__0 ) )
                    // InternalNLX.g:3551:3: ( rule__SimpleUnit__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleUnitAccess().getGroup_0()); 
                    }
                    // InternalNLX.g:3552:3: ( rule__SimpleUnit__Group_0__0 )
                    // InternalNLX.g:3552:4: rule__SimpleUnit__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SimpleUnit__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleUnitAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3556:2: ( ( rule__SimpleUnit__ValueAssignment_1 ) )
                    {
                    // InternalNLX.g:3556:2: ( ( rule__SimpleUnit__ValueAssignment_1 ) )
                    // InternalNLX.g:3557:3: ( rule__SimpleUnit__ValueAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleUnitAccess().getValueAssignment_1()); 
                    }
                    // InternalNLX.g:3558:3: ( rule__SimpleUnit__ValueAssignment_1 )
                    // InternalNLX.g:3558:4: rule__SimpleUnit__ValueAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SimpleUnit__ValueAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleUnitAccess().getValueAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3562:2: ( ( rule__SimpleUnit__ValueAssignment_2 ) )
                    {
                    // InternalNLX.g:3562:2: ( ( rule__SimpleUnit__ValueAssignment_2 ) )
                    // InternalNLX.g:3563:3: ( rule__SimpleUnit__ValueAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleUnitAccess().getValueAssignment_2()); 
                    }
                    // InternalNLX.g:3564:3: ( rule__SimpleUnit__ValueAssignment_2 )
                    // InternalNLX.g:3564:4: rule__SimpleUnit__ValueAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SimpleUnit__ValueAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleUnitAccess().getValueAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleUnit__Alternatives"


    // $ANTLR start "rule__HashNumber__SignAlternatives_1_0"
    // InternalNLX.g:3572:1: rule__HashNumber__SignAlternatives_1_0 : ( ( RULE_HASH ) | ( RULE_PARAGR ) );
    public final void rule__HashNumber__SignAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3576:1: ( ( RULE_HASH ) | ( RULE_PARAGR ) )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_HASH) ) {
                alt54=1;
            }
            else if ( (LA54_0==RULE_PARAGR) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalNLX.g:3577:2: ( RULE_HASH )
                    {
                    // InternalNLX.g:3577:2: ( RULE_HASH )
                    // InternalNLX.g:3578:3: RULE_HASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHashNumberAccess().getSignHASHTerminalRuleCall_1_0_0()); 
                    }
                    match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHashNumberAccess().getSignHASHTerminalRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3583:2: ( RULE_PARAGR )
                    {
                    // InternalNLX.g:3583:2: ( RULE_PARAGR )
                    // InternalNLX.g:3584:3: RULE_PARAGR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHashNumberAccess().getSignPARAGRTerminalRuleCall_1_0_1()); 
                    }
                    match(input,RULE_PARAGR,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHashNumberAccess().getSignPARAGRTerminalRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HashNumber__SignAlternatives_1_0"


    // $ANTLR start "rule__ChapterAlpha__Alternatives_1"
    // InternalNLX.g:3593:1: rule__ChapterAlpha__Alternatives_1 : ( ( ( rule__ChapterAlpha__ValueAssignment_1_0 ) ) | ( ( rule__ChapterAlpha__ValueAssignment_1_1 ) ) );
    public final void rule__ChapterAlpha__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3597:1: ( ( ( rule__ChapterAlpha__ValueAssignment_1_0 ) ) | ( ( rule__ChapterAlpha__ValueAssignment_1_1 ) ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_ID_C) ) {
                alt55=1;
            }
            else if ( (LA55_0==RULE_ALL_ALPHA) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalNLX.g:3598:2: ( ( rule__ChapterAlpha__ValueAssignment_1_0 ) )
                    {
                    // InternalNLX.g:3598:2: ( ( rule__ChapterAlpha__ValueAssignment_1_0 ) )
                    // InternalNLX.g:3599:3: ( rule__ChapterAlpha__ValueAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterAlphaAccess().getValueAssignment_1_0()); 
                    }
                    // InternalNLX.g:3600:3: ( rule__ChapterAlpha__ValueAssignment_1_0 )
                    // InternalNLX.g:3600:4: rule__ChapterAlpha__ValueAssignment_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ChapterAlpha__ValueAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterAlphaAccess().getValueAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3604:2: ( ( rule__ChapterAlpha__ValueAssignment_1_1 ) )
                    {
                    // InternalNLX.g:3604:2: ( ( rule__ChapterAlpha__ValueAssignment_1_1 ) )
                    // InternalNLX.g:3605:3: ( rule__ChapterAlpha__ValueAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterAlphaAccess().getValueAssignment_1_1()); 
                    }
                    // InternalNLX.g:3606:3: ( rule__ChapterAlpha__ValueAssignment_1_1 )
                    // InternalNLX.g:3606:4: rule__ChapterAlpha__ValueAssignment_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ChapterAlpha__ValueAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterAlphaAccess().getValueAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Alternatives_1"


    // $ANTLR start "rule__ChapterAlpha__Alternatives_4_0"
    // InternalNLX.g:3614:1: rule__ChapterAlpha__Alternatives_4_0 : ( ( ( rule__ChapterAlpha__ValueAssignment_4_0_0 ) ) | ( ( rule__ChapterAlpha__ValueAssignment_4_0_1 ) ) );
    public final void rule__ChapterAlpha__Alternatives_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3618:1: ( ( ( rule__ChapterAlpha__ValueAssignment_4_0_0 ) ) | ( ( rule__ChapterAlpha__ValueAssignment_4_0_1 ) ) )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_DOT) ) {
                alt56=1;
            }
            else if ( (LA56_0==RULE_MINUS) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalNLX.g:3619:2: ( ( rule__ChapterAlpha__ValueAssignment_4_0_0 ) )
                    {
                    // InternalNLX.g:3619:2: ( ( rule__ChapterAlpha__ValueAssignment_4_0_0 ) )
                    // InternalNLX.g:3620:3: ( rule__ChapterAlpha__ValueAssignment_4_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterAlphaAccess().getValueAssignment_4_0_0()); 
                    }
                    // InternalNLX.g:3621:3: ( rule__ChapterAlpha__ValueAssignment_4_0_0 )
                    // InternalNLX.g:3621:4: rule__ChapterAlpha__ValueAssignment_4_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ChapterAlpha__ValueAssignment_4_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterAlphaAccess().getValueAssignment_4_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3625:2: ( ( rule__ChapterAlpha__ValueAssignment_4_0_1 ) )
                    {
                    // InternalNLX.g:3625:2: ( ( rule__ChapterAlpha__ValueAssignment_4_0_1 ) )
                    // InternalNLX.g:3626:3: ( rule__ChapterAlpha__ValueAssignment_4_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterAlphaAccess().getValueAssignment_4_0_1()); 
                    }
                    // InternalNLX.g:3627:3: ( rule__ChapterAlpha__ValueAssignment_4_0_1 )
                    // InternalNLX.g:3627:4: rule__ChapterAlpha__ValueAssignment_4_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ChapterAlpha__ValueAssignment_4_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterAlphaAccess().getValueAssignment_4_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Alternatives_4_0"


    // $ANTLR start "rule__ChapterIntermediate__Alternatives"
    // InternalNLX.g:3635:1: rule__ChapterIntermediate__Alternatives : ( ( RULE_ID_C ) | ( RULE_ID_ALL ) | ( ( RULE_INT ) ) | ( RULE_IT_ID ) | ( RULE_ALL_ALPHA ) | ( RULE_ALPHA ) );
    public final void rule__ChapterIntermediate__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3639:1: ( ( RULE_ID_C ) | ( RULE_ID_ALL ) | ( ( RULE_INT ) ) | ( RULE_IT_ID ) | ( RULE_ALL_ALPHA ) | ( RULE_ALPHA ) )
            int alt57=6;
            switch ( input.LA(1) ) {
            case RULE_ID_C:
                {
                alt57=1;
                }
                break;
            case RULE_ID_ALL:
                {
                alt57=2;
                }
                break;
            case RULE_INT:
                {
                alt57=3;
                }
                break;
            case RULE_IT_ID:
                {
                alt57=4;
                }
                break;
            case RULE_ALL_ALPHA:
                {
                alt57=5;
                }
                break;
            case RULE_ALPHA:
                {
                alt57=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }

            switch (alt57) {
                case 1 :
                    // InternalNLX.g:3640:2: ( RULE_ID_C )
                    {
                    // InternalNLX.g:3640:2: ( RULE_ID_C )
                    // InternalNLX.g:3641:3: RULE_ID_C
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterIntermediateAccess().getID_CTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID_C,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterIntermediateAccess().getID_CTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3646:2: ( RULE_ID_ALL )
                    {
                    // InternalNLX.g:3646:2: ( RULE_ID_ALL )
                    // InternalNLX.g:3647:3: RULE_ID_ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterIntermediateAccess().getID_ALLTerminalRuleCall_1()); 
                    }
                    match(input,RULE_ID_ALL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterIntermediateAccess().getID_ALLTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3652:2: ( ( RULE_INT ) )
                    {
                    // InternalNLX.g:3652:2: ( ( RULE_INT ) )
                    // InternalNLX.g:3653:3: ( RULE_INT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterIntermediateAccess().getINTTerminalRuleCall_2()); 
                    }
                    // InternalNLX.g:3654:3: ( RULE_INT )
                    // InternalNLX.g:3654:4: RULE_INT
                    {
                    match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterIntermediateAccess().getINTTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:3658:2: ( RULE_IT_ID )
                    {
                    // InternalNLX.g:3658:2: ( RULE_IT_ID )
                    // InternalNLX.g:3659:3: RULE_IT_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterIntermediateAccess().getIT_IDTerminalRuleCall_3()); 
                    }
                    match(input,RULE_IT_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterIntermediateAccess().getIT_IDTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNLX.g:3664:2: ( RULE_ALL_ALPHA )
                    {
                    // InternalNLX.g:3664:2: ( RULE_ALL_ALPHA )
                    // InternalNLX.g:3665:3: RULE_ALL_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterIntermediateAccess().getALL_ALPHATerminalRuleCall_4()); 
                    }
                    match(input,RULE_ALL_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterIntermediateAccess().getALL_ALPHATerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalNLX.g:3670:2: ( RULE_ALPHA )
                    {
                    // InternalNLX.g:3670:2: ( RULE_ALPHA )
                    // InternalNLX.g:3671:3: RULE_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChapterIntermediateAccess().getALPHATerminalRuleCall_5()); 
                    }
                    match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChapterIntermediateAccess().getALPHATerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterIntermediate__Alternatives"


    // $ANTLR start "rule__SpecialCh__Alternatives"
    // InternalNLX.g:3680:1: rule__SpecialCh__Alternatives : ( ( RULE_PERCENT ) | ( RULE_DASH ) | ( RULE_MINUS ) | ( RULE_SEPARATORS ) | ( RULE_MULTI ) );
    public final void rule__SpecialCh__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3684:1: ( ( RULE_PERCENT ) | ( RULE_DASH ) | ( RULE_MINUS ) | ( RULE_SEPARATORS ) | ( RULE_MULTI ) )
            int alt58=5;
            switch ( input.LA(1) ) {
            case RULE_PERCENT:
                {
                alt58=1;
                }
                break;
            case RULE_DASH:
                {
                alt58=2;
                }
                break;
            case RULE_MINUS:
                {
                alt58=3;
                }
                break;
            case RULE_SEPARATORS:
                {
                alt58=4;
                }
                break;
            case RULE_MULTI:
                {
                alt58=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }

            switch (alt58) {
                case 1 :
                    // InternalNLX.g:3685:2: ( RULE_PERCENT )
                    {
                    // InternalNLX.g:3685:2: ( RULE_PERCENT )
                    // InternalNLX.g:3686:3: RULE_PERCENT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpecialChAccess().getPERCENTTerminalRuleCall_0()); 
                    }
                    match(input,RULE_PERCENT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpecialChAccess().getPERCENTTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3691:2: ( RULE_DASH )
                    {
                    // InternalNLX.g:3691:2: ( RULE_DASH )
                    // InternalNLX.g:3692:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpecialChAccess().getDASHTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpecialChAccess().getDASHTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3697:2: ( RULE_MINUS )
                    {
                    // InternalNLX.g:3697:2: ( RULE_MINUS )
                    // InternalNLX.g:3698:3: RULE_MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpecialChAccess().getMINUSTerminalRuleCall_2()); 
                    }
                    match(input,RULE_MINUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpecialChAccess().getMINUSTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:3703:2: ( RULE_SEPARATORS )
                    {
                    // InternalNLX.g:3703:2: ( RULE_SEPARATORS )
                    // InternalNLX.g:3704:3: RULE_SEPARATORS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpecialChAccess().getSEPARATORSTerminalRuleCall_3()); 
                    }
                    match(input,RULE_SEPARATORS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpecialChAccess().getSEPARATORSTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNLX.g:3709:2: ( RULE_MULTI )
                    {
                    // InternalNLX.g:3709:2: ( RULE_MULTI )
                    // InternalNLX.g:3710:3: RULE_MULTI
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpecialChAccess().getMULTITerminalRuleCall_4()); 
                    }
                    match(input,RULE_MULTI,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpecialChAccess().getMULTITerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialCh__Alternatives"


    // $ANTLR start "rule__ShortcutGen__Alternatives_1"
    // InternalNLX.g:3719:1: rule__ShortcutGen__Alternatives_1 : ( ( ( rule__ShortcutGen__WordAssignment_1_0 ) ) | ( ( rule__ShortcutGen__WordAssignment_1_1 ) ) );
    public final void rule__ShortcutGen__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3723:1: ( ( ( rule__ShortcutGen__WordAssignment_1_0 ) ) | ( ( rule__ShortcutGen__WordAssignment_1_1 ) ) )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==RULE_ALL_ALPHA) ) {
                alt59=1;
            }
            else if ( (LA59_0==RULE_ALPHA) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalNLX.g:3724:2: ( ( rule__ShortcutGen__WordAssignment_1_0 ) )
                    {
                    // InternalNLX.g:3724:2: ( ( rule__ShortcutGen__WordAssignment_1_0 ) )
                    // InternalNLX.g:3725:3: ( rule__ShortcutGen__WordAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShortcutGenAccess().getWordAssignment_1_0()); 
                    }
                    // InternalNLX.g:3726:3: ( rule__ShortcutGen__WordAssignment_1_0 )
                    // InternalNLX.g:3726:4: rule__ShortcutGen__WordAssignment_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShortcutGen__WordAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShortcutGenAccess().getWordAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3730:2: ( ( rule__ShortcutGen__WordAssignment_1_1 ) )
                    {
                    // InternalNLX.g:3730:2: ( ( rule__ShortcutGen__WordAssignment_1_1 ) )
                    // InternalNLX.g:3731:3: ( rule__ShortcutGen__WordAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShortcutGenAccess().getWordAssignment_1_1()); 
                    }
                    // InternalNLX.g:3732:3: ( rule__ShortcutGen__WordAssignment_1_1 )
                    // InternalNLX.g:3732:4: rule__ShortcutGen__WordAssignment_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShortcutGen__WordAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShortcutGenAccess().getWordAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Alternatives_1"


    // $ANTLR start "rule__ShortcutGen__Alternatives_2_1"
    // InternalNLX.g:3740:1: rule__ShortcutGen__Alternatives_2_1 : ( ( ( rule__ShortcutGen__WordAssignment_2_1_0 ) ) | ( ( rule__ShortcutGen__WordAssignment_2_1_1 ) ) );
    public final void rule__ShortcutGen__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3744:1: ( ( ( rule__ShortcutGen__WordAssignment_2_1_0 ) ) | ( ( rule__ShortcutGen__WordAssignment_2_1_1 ) ) )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==RULE_ALL_ALPHA) ) {
                alt60=1;
            }
            else if ( (LA60_0==RULE_ALPHA) ) {
                alt60=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // InternalNLX.g:3745:2: ( ( rule__ShortcutGen__WordAssignment_2_1_0 ) )
                    {
                    // InternalNLX.g:3745:2: ( ( rule__ShortcutGen__WordAssignment_2_1_0 ) )
                    // InternalNLX.g:3746:3: ( rule__ShortcutGen__WordAssignment_2_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShortcutGenAccess().getWordAssignment_2_1_0()); 
                    }
                    // InternalNLX.g:3747:3: ( rule__ShortcutGen__WordAssignment_2_1_0 )
                    // InternalNLX.g:3747:4: rule__ShortcutGen__WordAssignment_2_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShortcutGen__WordAssignment_2_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShortcutGenAccess().getWordAssignment_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3751:2: ( ( rule__ShortcutGen__WordAssignment_2_1_1 ) )
                    {
                    // InternalNLX.g:3751:2: ( ( rule__ShortcutGen__WordAssignment_2_1_1 ) )
                    // InternalNLX.g:3752:3: ( rule__ShortcutGen__WordAssignment_2_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShortcutGenAccess().getWordAssignment_2_1_1()); 
                    }
                    // InternalNLX.g:3753:3: ( rule__ShortcutGen__WordAssignment_2_1_1 )
                    // InternalNLX.g:3753:4: rule__ShortcutGen__WordAssignment_2_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShortcutGen__WordAssignment_2_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShortcutGenAccess().getWordAssignment_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Alternatives_2_1"


    // $ANTLR start "rule__ShortCut__Alternatives"
    // InternalNLX.g:3761:1: rule__ShortCut__Alternatives : ( ( ( rule__ShortCut__ShortcutAssignment_0 ) ) | ( ( rule__ShortCut__ShortcutAssignment_1 ) ) );
    public final void rule__ShortCut__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3765:1: ( ( ( rule__ShortCut__ShortcutAssignment_0 ) ) | ( ( rule__ShortCut__ShortcutAssignment_1 ) ) )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==RULE_SHORTCUTS) ) {
                alt61=1;
            }
            else if ( ((LA61_0>=RULE_ALL_ALPHA && LA61_0<=RULE_ALPHA)) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalNLX.g:3766:2: ( ( rule__ShortCut__ShortcutAssignment_0 ) )
                    {
                    // InternalNLX.g:3766:2: ( ( rule__ShortCut__ShortcutAssignment_0 ) )
                    // InternalNLX.g:3767:3: ( rule__ShortCut__ShortcutAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShortCutAccess().getShortcutAssignment_0()); 
                    }
                    // InternalNLX.g:3768:3: ( rule__ShortCut__ShortcutAssignment_0 )
                    // InternalNLX.g:3768:4: rule__ShortCut__ShortcutAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShortCut__ShortcutAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShortCutAccess().getShortcutAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3772:2: ( ( rule__ShortCut__ShortcutAssignment_1 ) )
                    {
                    // InternalNLX.g:3772:2: ( ( rule__ShortCut__ShortcutAssignment_1 ) )
                    // InternalNLX.g:3773:3: ( rule__ShortCut__ShortcutAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShortCutAccess().getShortcutAssignment_1()); 
                    }
                    // InternalNLX.g:3774:3: ( rule__ShortCut__ShortcutAssignment_1 )
                    // InternalNLX.g:3774:4: rule__ShortCut__ShortcutAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShortCut__ShortcutAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShortCutAccess().getShortcutAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortCut__Alternatives"


    // $ANTLR start "rule__ItNum__Alternatives_1_0"
    // InternalNLX.g:3782:1: rule__ItNum__Alternatives_1_0 : ( ( RULE_SEPARATORS_IT ) | ( RULE_COLON ) | ( RULE_DASH ) | ( RULE_MINUS ) | ( RULE_SLASH ) );
    public final void rule__ItNum__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3786:1: ( ( RULE_SEPARATORS_IT ) | ( RULE_COLON ) | ( RULE_DASH ) | ( RULE_MINUS ) | ( RULE_SLASH ) )
            int alt62=5;
            switch ( input.LA(1) ) {
            case RULE_SEPARATORS_IT:
                {
                alt62=1;
                }
                break;
            case RULE_COLON:
                {
                alt62=2;
                }
                break;
            case RULE_DASH:
                {
                alt62=3;
                }
                break;
            case RULE_MINUS:
                {
                alt62=4;
                }
                break;
            case RULE_SLASH:
                {
                alt62=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }

            switch (alt62) {
                case 1 :
                    // InternalNLX.g:3787:2: ( RULE_SEPARATORS_IT )
                    {
                    // InternalNLX.g:3787:2: ( RULE_SEPARATORS_IT )
                    // InternalNLX.g:3788:3: RULE_SEPARATORS_IT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItNumAccess().getSEPARATORS_ITTerminalRuleCall_1_0_0()); 
                    }
                    match(input,RULE_SEPARATORS_IT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItNumAccess().getSEPARATORS_ITTerminalRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3793:2: ( RULE_COLON )
                    {
                    // InternalNLX.g:3793:2: ( RULE_COLON )
                    // InternalNLX.g:3794:3: RULE_COLON
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItNumAccess().getCOLONTerminalRuleCall_1_0_1()); 
                    }
                    match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItNumAccess().getCOLONTerminalRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3799:2: ( RULE_DASH )
                    {
                    // InternalNLX.g:3799:2: ( RULE_DASH )
                    // InternalNLX.g:3800:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItNumAccess().getDASHTerminalRuleCall_1_0_2()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItNumAccess().getDASHTerminalRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:3805:2: ( RULE_MINUS )
                    {
                    // InternalNLX.g:3805:2: ( RULE_MINUS )
                    // InternalNLX.g:3806:3: RULE_MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItNumAccess().getMINUSTerminalRuleCall_1_0_3()); 
                    }
                    match(input,RULE_MINUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItNumAccess().getMINUSTerminalRuleCall_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNLX.g:3811:2: ( RULE_SLASH )
                    {
                    // InternalNLX.g:3811:2: ( RULE_SLASH )
                    // InternalNLX.g:3812:3: RULE_SLASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItNumAccess().getSLASHTerminalRuleCall_1_0_4()); 
                    }
                    match(input,RULE_SLASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItNumAccess().getSLASHTerminalRuleCall_1_0_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Alternatives_1_0"


    // $ANTLR start "rule__SpecialSymbols__Alternatives"
    // InternalNLX.g:3821:1: rule__SpecialSymbols__Alternatives : ( ( RULE_SLASH ) | ( RULE_OPERATORS ) | ( RULE_ARROW ) | ( RULE_SMILEY ) | ( RULE_TRIPLE_DOT ) );
    public final void rule__SpecialSymbols__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3825:1: ( ( RULE_SLASH ) | ( RULE_OPERATORS ) | ( RULE_ARROW ) | ( RULE_SMILEY ) | ( RULE_TRIPLE_DOT ) )
            int alt63=5;
            switch ( input.LA(1) ) {
            case RULE_SLASH:
                {
                alt63=1;
                }
                break;
            case RULE_OPERATORS:
                {
                alt63=2;
                }
                break;
            case RULE_ARROW:
                {
                alt63=3;
                }
                break;
            case RULE_SMILEY:
                {
                alt63=4;
                }
                break;
            case RULE_TRIPLE_DOT:
                {
                alt63=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }

            switch (alt63) {
                case 1 :
                    // InternalNLX.g:3826:2: ( RULE_SLASH )
                    {
                    // InternalNLX.g:3826:2: ( RULE_SLASH )
                    // InternalNLX.g:3827:3: RULE_SLASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpecialSymbolsAccess().getSLASHTerminalRuleCall_0()); 
                    }
                    match(input,RULE_SLASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpecialSymbolsAccess().getSLASHTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3832:2: ( RULE_OPERATORS )
                    {
                    // InternalNLX.g:3832:2: ( RULE_OPERATORS )
                    // InternalNLX.g:3833:3: RULE_OPERATORS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpecialSymbolsAccess().getOPERATORSTerminalRuleCall_1()); 
                    }
                    match(input,RULE_OPERATORS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpecialSymbolsAccess().getOPERATORSTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3838:2: ( RULE_ARROW )
                    {
                    // InternalNLX.g:3838:2: ( RULE_ARROW )
                    // InternalNLX.g:3839:3: RULE_ARROW
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpecialSymbolsAccess().getARROWTerminalRuleCall_2()); 
                    }
                    match(input,RULE_ARROW,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpecialSymbolsAccess().getARROWTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNLX.g:3844:2: ( RULE_SMILEY )
                    {
                    // InternalNLX.g:3844:2: ( RULE_SMILEY )
                    // InternalNLX.g:3845:3: RULE_SMILEY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpecialSymbolsAccess().getSMILEYTerminalRuleCall_3()); 
                    }
                    match(input,RULE_SMILEY,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpecialSymbolsAccess().getSMILEYTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNLX.g:3850:2: ( RULE_TRIPLE_DOT )
                    {
                    // InternalNLX.g:3850:2: ( RULE_TRIPLE_DOT )
                    // InternalNLX.g:3851:3: RULE_TRIPLE_DOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpecialSymbolsAccess().getTRIPLE_DOTTerminalRuleCall_4()); 
                    }
                    match(input,RULE_TRIPLE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpecialSymbolsAccess().getTRIPLE_DOTTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialSymbols__Alternatives"


    // $ANTLR start "rule__Number__Alternatives"
    // InternalNLX.g:3860:1: rule__Number__Alternatives : ( ( rulesimpleNum ) | ( ruledecimalNumEN ) | ( ruledecimalNumDE ) );
    public final void rule__Number__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3864:1: ( ( rulesimpleNum ) | ( ruledecimalNumEN ) | ( ruledecimalNumDE ) )
            int alt64=3;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_INT) ) {
                switch ( input.LA(2) ) {
                case EOF:
                case RULE_NEWLINE:
                case RULE_END:
                case RULE_SPACE:
                case RULE_FULL_STOP_IM:
                case RULE_FS:
                case RULE_FULL_STOP_NL:
                case RULE_ID:
                case RULE_PERCENT:
                case RULE_BR_CL:
                case RULE_KOMMA:
                case RULE_TABLE_LINE:
                case RULE_HORIZ_SEP:
                case RULE_EXBR_CL:
                case RULE_EXBRC_CL:
                case RULE_CURRENCY:
                    {
                    alt64=1;
                    }
                    break;
                case RULE_DOT:
                    {
                    int LA64_3 = input.LA(3);

                    if ( (LA64_3==RULE_NEWLINE||LA64_3==RULE_SPACE||LA64_3==RULE_BR_CL||LA64_3==RULE_EXBR_CL||LA64_3==RULE_EXBRC_CL) ) {
                        alt64=1;
                    }
                    else if ( (LA64_3==RULE_INT) ) {
                        alt64=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 64, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_KM:
                    {
                    alt64=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalNLX.g:3865:2: ( rulesimpleNum )
                    {
                    // InternalNLX.g:3865:2: ( rulesimpleNum )
                    // InternalNLX.g:3866:3: rulesimpleNum
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getSimpleNumParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulesimpleNum();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getSimpleNumParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3871:2: ( ruledecimalNumEN )
                    {
                    // InternalNLX.g:3871:2: ( ruledecimalNumEN )
                    // InternalNLX.g:3872:3: ruledecimalNumEN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getDecimalNumENParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruledecimalNumEN();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getDecimalNumENParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3877:2: ( ruledecimalNumDE )
                    {
                    // InternalNLX.g:3877:2: ( ruledecimalNumDE )
                    // InternalNLX.g:3878:3: ruledecimalNumDE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getDecimalNumDEParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruledecimalNumDE();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getDecimalNumDEParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives"


    // $ANTLR start "rule__UrlAdress__Alternatives_2_1"
    // InternalNLX.g:3887:1: rule__UrlAdress__Alternatives_2_1 : ( ( ( rule__UrlAdress__UrlAssignment_2_1_0 ) ) | ( ( rule__UrlAdress__UrlAssignment_2_1_1 ) ) | ( ( rule__UrlAdress__UrlAssignment_2_1_2 ) ) );
    public final void rule__UrlAdress__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3891:1: ( ( ( rule__UrlAdress__UrlAssignment_2_1_0 ) ) | ( ( rule__UrlAdress__UrlAssignment_2_1_1 ) ) | ( ( rule__UrlAdress__UrlAssignment_2_1_2 ) ) )
            int alt65=3;
            switch ( input.LA(1) ) {
            case RULE_ALL_ALPHA:
                {
                int LA65_1 = input.LA(2);

                if ( (synpred121_InternalNLX()) ) {
                    alt65=1;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ALPHA:
                {
                int LA65_2 = input.LA(2);

                if ( (synpred121_InternalNLX()) ) {
                    alt65=1;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_MULTI:
            case RULE_IT_ID:
            case RULE_DOUBLE_DOT:
            case RULE_ID_ALL:
            case RULE_HEX_NUMBER:
            case RULE_CURL:
                {
                alt65=1;
                }
                break;
            case RULE_INT:
                {
                int LA65_4 = input.LA(2);

                if ( (synpred121_InternalNLX()) ) {
                    alt65=1;
                }
                else if ( (synpred122_InternalNLX()) ) {
                    alt65=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA65_5 = input.LA(2);

                if ( (synpred121_InternalNLX()) ) {
                    alt65=1;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID_C:
                {
                int LA65_6 = input.LA(2);

                if ( (synpred121_InternalNLX()) ) {
                    alt65=1;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 6, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }

            switch (alt65) {
                case 1 :
                    // InternalNLX.g:3892:2: ( ( rule__UrlAdress__UrlAssignment_2_1_0 ) )
                    {
                    // InternalNLX.g:3892:2: ( ( rule__UrlAdress__UrlAssignment_2_1_0 ) )
                    // InternalNLX.g:3893:3: ( rule__UrlAdress__UrlAssignment_2_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_1_0()); 
                    }
                    // InternalNLX.g:3894:3: ( rule__UrlAdress__UrlAssignment_2_1_0 )
                    // InternalNLX.g:3894:4: rule__UrlAdress__UrlAssignment_2_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__UrlAdress__UrlAssignment_2_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3898:2: ( ( rule__UrlAdress__UrlAssignment_2_1_1 ) )
                    {
                    // InternalNLX.g:3898:2: ( ( rule__UrlAdress__UrlAssignment_2_1_1 ) )
                    // InternalNLX.g:3899:3: ( rule__UrlAdress__UrlAssignment_2_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_1_1()); 
                    }
                    // InternalNLX.g:3900:3: ( rule__UrlAdress__UrlAssignment_2_1_1 )
                    // InternalNLX.g:3900:4: rule__UrlAdress__UrlAssignment_2_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__UrlAdress__UrlAssignment_2_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNLX.g:3904:2: ( ( rule__UrlAdress__UrlAssignment_2_1_2 ) )
                    {
                    // InternalNLX.g:3904:2: ( ( rule__UrlAdress__UrlAssignment_2_1_2 ) )
                    // InternalNLX.g:3905:3: ( rule__UrlAdress__UrlAssignment_2_1_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_1_2()); 
                    }
                    // InternalNLX.g:3906:3: ( rule__UrlAdress__UrlAssignment_2_1_2 )
                    // InternalNLX.g:3906:4: rule__UrlAdress__UrlAssignment_2_1_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__UrlAdress__UrlAssignment_2_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Alternatives_2_1"


    // $ANTLR start "rule__MailAdress__Alternatives_0"
    // InternalNLX.g:3914:1: rule__MailAdress__Alternatives_0 : ( ( ( rule__MailAdress__EmailAssignment_0_0 ) ) | ( ( rule__MailAdress__EmailAssignment_0_1 ) ) );
    public final void rule__MailAdress__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3918:1: ( ( ( rule__MailAdress__EmailAssignment_0_0 ) ) | ( ( rule__MailAdress__EmailAssignment_0_1 ) ) )
            int alt66=2;
            alt66 = dfa66.predict(input);
            switch (alt66) {
                case 1 :
                    // InternalNLX.g:3919:2: ( ( rule__MailAdress__EmailAssignment_0_0 ) )
                    {
                    // InternalNLX.g:3919:2: ( ( rule__MailAdress__EmailAssignment_0_0 ) )
                    // InternalNLX.g:3920:3: ( rule__MailAdress__EmailAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMailAdressAccess().getEmailAssignment_0_0()); 
                    }
                    // InternalNLX.g:3921:3: ( rule__MailAdress__EmailAssignment_0_0 )
                    // InternalNLX.g:3921:4: rule__MailAdress__EmailAssignment_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__MailAdress__EmailAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMailAdressAccess().getEmailAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3925:2: ( ( rule__MailAdress__EmailAssignment_0_1 ) )
                    {
                    // InternalNLX.g:3925:2: ( ( rule__MailAdress__EmailAssignment_0_1 ) )
                    // InternalNLX.g:3926:3: ( rule__MailAdress__EmailAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMailAdressAccess().getEmailAssignment_0_1()); 
                    }
                    // InternalNLX.g:3927:3: ( rule__MailAdress__EmailAssignment_0_1 )
                    // InternalNLX.g:3927:4: rule__MailAdress__EmailAssignment_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__MailAdress__EmailAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMailAdressAccess().getEmailAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MailAdress__Alternatives_0"


    // $ANTLR start "rule__Formula__Alternatives_1"
    // InternalNLX.g:3935:1: rule__Formula__Alternatives_1 : ( ( ( rule__Formula__NameAssignment_1_0 ) ) | ( ( rule__Formula__NameAssignment_1_1 ) ) );
    public final void rule__Formula__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3939:1: ( ( ( rule__Formula__NameAssignment_1_0 ) ) | ( ( rule__Formula__NameAssignment_1_1 ) ) )
            int alt67=2;
            alt67 = dfa67.predict(input);
            switch (alt67) {
                case 1 :
                    // InternalNLX.g:3940:2: ( ( rule__Formula__NameAssignment_1_0 ) )
                    {
                    // InternalNLX.g:3940:2: ( ( rule__Formula__NameAssignment_1_0 ) )
                    // InternalNLX.g:3941:3: ( rule__Formula__NameAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFormulaAccess().getNameAssignment_1_0()); 
                    }
                    // InternalNLX.g:3942:3: ( rule__Formula__NameAssignment_1_0 )
                    // InternalNLX.g:3942:4: rule__Formula__NameAssignment_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Formula__NameAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFormulaAccess().getNameAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3946:2: ( ( rule__Formula__NameAssignment_1_1 ) )
                    {
                    // InternalNLX.g:3946:2: ( ( rule__Formula__NameAssignment_1_1 ) )
                    // InternalNLX.g:3947:3: ( rule__Formula__NameAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFormulaAccess().getNameAssignment_1_1()); 
                    }
                    // InternalNLX.g:3948:3: ( rule__Formula__NameAssignment_1_1 )
                    // InternalNLX.g:3948:4: rule__Formula__NameAssignment_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Formula__NameAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFormulaAccess().getNameAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Alternatives_1"


    // $ANTLR start "rule__Formula__Alternatives_3_1"
    // InternalNLX.g:3956:1: rule__Formula__Alternatives_3_1 : ( ( ( rule__Formula__NameAssignment_3_1_0 ) ) | ( ( rule__Formula__NameAssignment_3_1_1 ) ) );
    public final void rule__Formula__Alternatives_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3960:1: ( ( ( rule__Formula__NameAssignment_3_1_0 ) ) | ( ( rule__Formula__NameAssignment_3_1_1 ) ) )
            int alt68=2;
            alt68 = dfa68.predict(input);
            switch (alt68) {
                case 1 :
                    // InternalNLX.g:3961:2: ( ( rule__Formula__NameAssignment_3_1_0 ) )
                    {
                    // InternalNLX.g:3961:2: ( ( rule__Formula__NameAssignment_3_1_0 ) )
                    // InternalNLX.g:3962:3: ( rule__Formula__NameAssignment_3_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFormulaAccess().getNameAssignment_3_1_0()); 
                    }
                    // InternalNLX.g:3963:3: ( rule__Formula__NameAssignment_3_1_0 )
                    // InternalNLX.g:3963:4: rule__Formula__NameAssignment_3_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Formula__NameAssignment_3_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFormulaAccess().getNameAssignment_3_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3967:2: ( ( rule__Formula__NameAssignment_3_1_1 ) )
                    {
                    // InternalNLX.g:3967:2: ( ( rule__Formula__NameAssignment_3_1_1 ) )
                    // InternalNLX.g:3968:3: ( rule__Formula__NameAssignment_3_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFormulaAccess().getNameAssignment_3_1_1()); 
                    }
                    // InternalNLX.g:3969:3: ( rule__Formula__NameAssignment_3_1_1 )
                    // InternalNLX.g:3969:4: rule__Formula__NameAssignment_3_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Formula__NameAssignment_3_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFormulaAccess().getNameAssignment_3_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Alternatives_3_1"


    // $ANTLR start "rule__Array__Alternatives_0"
    // InternalNLX.g:3977:1: rule__Array__Alternatives_0 : ( ( ( rule__Array__NameAssignment_0_0 ) ) | ( ( rule__Array__NameAssignment_0_1 ) ) );
    public final void rule__Array__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:3981:1: ( ( ( rule__Array__NameAssignment_0_0 ) ) | ( ( rule__Array__NameAssignment_0_1 ) ) )
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalNLX.g:3982:2: ( ( rule__Array__NameAssignment_0_0 ) )
                    {
                    // InternalNLX.g:3982:2: ( ( rule__Array__NameAssignment_0_0 ) )
                    // InternalNLX.g:3983:3: ( rule__Array__NameAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArrayAccess().getNameAssignment_0_0()); 
                    }
                    // InternalNLX.g:3984:3: ( rule__Array__NameAssignment_0_0 )
                    // InternalNLX.g:3984:4: rule__Array__NameAssignment_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Array__NameAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArrayAccess().getNameAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNLX.g:3988:2: ( ( rule__Array__NameAssignment_0_1 ) )
                    {
                    // InternalNLX.g:3988:2: ( ( rule__Array__NameAssignment_0_1 ) )
                    // InternalNLX.g:3989:3: ( rule__Array__NameAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArrayAccess().getNameAssignment_0_1()); 
                    }
                    // InternalNLX.g:3990:3: ( rule__Array__NameAssignment_0_1 )
                    // InternalNLX.g:3990:4: rule__Array__NameAssignment_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Array__NameAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArrayAccess().getNameAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__Alternatives_0"


    // $ANTLR start "rule__SentenceType__Group__0"
    // InternalNLX.g:3998:1: rule__SentenceType__Group__0 : rule__SentenceType__Group__0__Impl rule__SentenceType__Group__1 ;
    public final void rule__SentenceType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4002:1: ( rule__SentenceType__Group__0__Impl rule__SentenceType__Group__1 )
            // InternalNLX.g:4003:2: rule__SentenceType__Group__0__Impl rule__SentenceType__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__SentenceType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceType__Group__0"


    // $ANTLR start "rule__SentenceType__Group__0__Impl"
    // InternalNLX.g:4010:1: rule__SentenceType__Group__0__Impl : ( ( ruleWhitespace )? ) ;
    public final void rule__SentenceType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4014:1: ( ( ( ruleWhitespace )? ) )
            // InternalNLX.g:4015:1: ( ( ruleWhitespace )? )
            {
            // InternalNLX.g:4015:1: ( ( ruleWhitespace )? )
            // InternalNLX.g:4016:2: ( ruleWhitespace )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceTypeAccess().getWhitespaceParserRuleCall_0()); 
            }
            // InternalNLX.g:4017:2: ( ruleWhitespace )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_NEWLINE||LA70_0==RULE_SPACE) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalNLX.g:4017:3: ruleWhitespace
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWhitespace();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceTypeAccess().getWhitespaceParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceType__Group__0__Impl"


    // $ANTLR start "rule__SentenceType__Group__1"
    // InternalNLX.g:4025:1: rule__SentenceType__Group__1 : rule__SentenceType__Group__1__Impl rule__SentenceType__Group__2 ;
    public final void rule__SentenceType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4029:1: ( rule__SentenceType__Group__1__Impl rule__SentenceType__Group__2 )
            // InternalNLX.g:4030:2: rule__SentenceType__Group__1__Impl rule__SentenceType__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__SentenceType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceType__Group__1"


    // $ANTLR start "rule__SentenceType__Group__1__Impl"
    // InternalNLX.g:4037:1: rule__SentenceType__Group__1__Impl : ( ( rule__SentenceType__Alternatives_1 ) ) ;
    public final void rule__SentenceType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4041:1: ( ( ( rule__SentenceType__Alternatives_1 ) ) )
            // InternalNLX.g:4042:1: ( ( rule__SentenceType__Alternatives_1 ) )
            {
            // InternalNLX.g:4042:1: ( ( rule__SentenceType__Alternatives_1 ) )
            // InternalNLX.g:4043:2: ( rule__SentenceType__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceTypeAccess().getAlternatives_1()); 
            }
            // InternalNLX.g:4044:2: ( rule__SentenceType__Alternatives_1 )
            // InternalNLX.g:4044:3: rule__SentenceType__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceType__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceTypeAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceType__Group__1__Impl"


    // $ANTLR start "rule__SentenceType__Group__2"
    // InternalNLX.g:4052:1: rule__SentenceType__Group__2 : rule__SentenceType__Group__2__Impl ;
    public final void rule__SentenceType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4056:1: ( rule__SentenceType__Group__2__Impl )
            // InternalNLX.g:4057:2: rule__SentenceType__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceType__Group__2"


    // $ANTLR start "rule__SentenceType__Group__2__Impl"
    // InternalNLX.g:4063:1: rule__SentenceType__Group__2__Impl : ( ( rule__SentenceType__PEndAssignment_2 ) ) ;
    public final void rule__SentenceType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4067:1: ( ( ( rule__SentenceType__PEndAssignment_2 ) ) )
            // InternalNLX.g:4068:1: ( ( rule__SentenceType__PEndAssignment_2 ) )
            {
            // InternalNLX.g:4068:1: ( ( rule__SentenceType__PEndAssignment_2 ) )
            // InternalNLX.g:4069:2: ( rule__SentenceType__PEndAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceTypeAccess().getPEndAssignment_2()); 
            }
            // InternalNLX.g:4070:2: ( rule__SentenceType__PEndAssignment_2 )
            // InternalNLX.g:4070:3: rule__SentenceType__PEndAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceType__PEndAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceTypeAccess().getPEndAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceType__Group__2__Impl"


    // $ANTLR start "rule__FootNote__Group__0"
    // InternalNLX.g:4079:1: rule__FootNote__Group__0 : rule__FootNote__Group__0__Impl rule__FootNote__Group__1 ;
    public final void rule__FootNote__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4083:1: ( rule__FootNote__Group__0__Impl rule__FootNote__Group__1 )
            // InternalNLX.g:4084:2: rule__FootNote__Group__0__Impl rule__FootNote__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__FootNote__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FootNote__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FootNote__Group__0"


    // $ANTLR start "rule__FootNote__Group__0__Impl"
    // InternalNLX.g:4091:1: rule__FootNote__Group__0__Impl : ( ( rule__FootNote__NumberAssignment_0 ) ) ;
    public final void rule__FootNote__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4095:1: ( ( ( rule__FootNote__NumberAssignment_0 ) ) )
            // InternalNLX.g:4096:1: ( ( rule__FootNote__NumberAssignment_0 ) )
            {
            // InternalNLX.g:4096:1: ( ( rule__FootNote__NumberAssignment_0 ) )
            // InternalNLX.g:4097:2: ( rule__FootNote__NumberAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFootNoteAccess().getNumberAssignment_0()); 
            }
            // InternalNLX.g:4098:2: ( rule__FootNote__NumberAssignment_0 )
            // InternalNLX.g:4098:3: rule__FootNote__NumberAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FootNote__NumberAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFootNoteAccess().getNumberAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FootNote__Group__0__Impl"


    // $ANTLR start "rule__FootNote__Group__1"
    // InternalNLX.g:4106:1: rule__FootNote__Group__1 : rule__FootNote__Group__1__Impl rule__FootNote__Group__2 ;
    public final void rule__FootNote__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4110:1: ( rule__FootNote__Group__1__Impl rule__FootNote__Group__2 )
            // InternalNLX.g:4111:2: rule__FootNote__Group__1__Impl rule__FootNote__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__FootNote__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FootNote__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FootNote__Group__1"


    // $ANTLR start "rule__FootNote__Group__1__Impl"
    // InternalNLX.g:4118:1: rule__FootNote__Group__1__Impl : ( RULE_BR_CL ) ;
    public final void rule__FootNote__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4122:1: ( ( RULE_BR_CL ) )
            // InternalNLX.g:4123:1: ( RULE_BR_CL )
            {
            // InternalNLX.g:4123:1: ( RULE_BR_CL )
            // InternalNLX.g:4124:2: RULE_BR_CL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFootNoteAccess().getBR_CLTerminalRuleCall_1()); 
            }
            match(input,RULE_BR_CL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFootNoteAccess().getBR_CLTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FootNote__Group__1__Impl"


    // $ANTLR start "rule__FootNote__Group__2"
    // InternalNLX.g:4133:1: rule__FootNote__Group__2 : rule__FootNote__Group__2__Impl ;
    public final void rule__FootNote__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4137:1: ( rule__FootNote__Group__2__Impl )
            // InternalNLX.g:4138:2: rule__FootNote__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FootNote__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FootNote__Group__2"


    // $ANTLR start "rule__FootNote__Group__2__Impl"
    // InternalNLX.g:4144:1: rule__FootNote__Group__2__Impl : ( ( rule__FootNote__SentenceChainAssignment_2 ) ) ;
    public final void rule__FootNote__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4148:1: ( ( ( rule__FootNote__SentenceChainAssignment_2 ) ) )
            // InternalNLX.g:4149:1: ( ( rule__FootNote__SentenceChainAssignment_2 ) )
            {
            // InternalNLX.g:4149:1: ( ( rule__FootNote__SentenceChainAssignment_2 ) )
            // InternalNLX.g:4150:2: ( rule__FootNote__SentenceChainAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFootNoteAccess().getSentenceChainAssignment_2()); 
            }
            // InternalNLX.g:4151:2: ( rule__FootNote__SentenceChainAssignment_2 )
            // InternalNLX.g:4151:3: rule__FootNote__SentenceChainAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FootNote__SentenceChainAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFootNoteAccess().getSentenceChainAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FootNote__Group__2__Impl"


    // $ANTLR start "rule__TableRow__Group__0"
    // InternalNLX.g:4160:1: rule__TableRow__Group__0 : rule__TableRow__Group__0__Impl rule__TableRow__Group__1 ;
    public final void rule__TableRow__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4164:1: ( rule__TableRow__Group__0__Impl rule__TableRow__Group__1 )
            // InternalNLX.g:4165:2: rule__TableRow__Group__0__Impl rule__TableRow__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__TableRow__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableRow__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group__0"


    // $ANTLR start "rule__TableRow__Group__0__Impl"
    // InternalNLX.g:4172:1: rule__TableRow__Group__0__Impl : ( () ) ;
    public final void rule__TableRow__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4176:1: ( ( () ) )
            // InternalNLX.g:4177:1: ( () )
            {
            // InternalNLX.g:4177:1: ( () )
            // InternalNLX.g:4178:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getTableRowAction_0()); 
            }
            // InternalNLX.g:4179:2: ()
            // InternalNLX.g:4179:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getTableRowAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group__0__Impl"


    // $ANTLR start "rule__TableRow__Group__1"
    // InternalNLX.g:4187:1: rule__TableRow__Group__1 : rule__TableRow__Group__1__Impl rule__TableRow__Group__2 ;
    public final void rule__TableRow__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4191:1: ( rule__TableRow__Group__1__Impl rule__TableRow__Group__2 )
            // InternalNLX.g:4192:2: rule__TableRow__Group__1__Impl rule__TableRow__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__TableRow__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableRow__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group__1"


    // $ANTLR start "rule__TableRow__Group__1__Impl"
    // InternalNLX.g:4199:1: rule__TableRow__Group__1__Impl : ( ( rule__TableRow__ContentAssignment_1 ) ) ;
    public final void rule__TableRow__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4203:1: ( ( ( rule__TableRow__ContentAssignment_1 ) ) )
            // InternalNLX.g:4204:1: ( ( rule__TableRow__ContentAssignment_1 ) )
            {
            // InternalNLX.g:4204:1: ( ( rule__TableRow__ContentAssignment_1 ) )
            // InternalNLX.g:4205:2: ( rule__TableRow__ContentAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getContentAssignment_1()); 
            }
            // InternalNLX.g:4206:2: ( rule__TableRow__ContentAssignment_1 )
            // InternalNLX.g:4206:3: rule__TableRow__ContentAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableRow__ContentAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getContentAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group__1__Impl"


    // $ANTLR start "rule__TableRow__Group__2"
    // InternalNLX.g:4214:1: rule__TableRow__Group__2 : rule__TableRow__Group__2__Impl rule__TableRow__Group__3 ;
    public final void rule__TableRow__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4218:1: ( rule__TableRow__Group__2__Impl rule__TableRow__Group__3 )
            // InternalNLX.g:4219:2: rule__TableRow__Group__2__Impl rule__TableRow__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__TableRow__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableRow__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group__2"


    // $ANTLR start "rule__TableRow__Group__2__Impl"
    // InternalNLX.g:4226:1: rule__TableRow__Group__2__Impl : ( ( rule__TableRow__ContentAssignment_2 )? ) ;
    public final void rule__TableRow__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4230:1: ( ( ( rule__TableRow__ContentAssignment_2 )? ) )
            // InternalNLX.g:4231:1: ( ( rule__TableRow__ContentAssignment_2 )? )
            {
            // InternalNLX.g:4231:1: ( ( rule__TableRow__ContentAssignment_2 )? )
            // InternalNLX.g:4232:2: ( rule__TableRow__ContentAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getContentAssignment_2()); 
            }
            // InternalNLX.g:4233:2: ( rule__TableRow__ContentAssignment_2 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0>=RULE_HASH && LA71_0<=RULE_INT)||(LA71_0>=RULE_MULTI && LA71_0<=RULE_MINUS)||LA71_0==RULE_DOT||(LA71_0>=RULE_ID && LA71_0<=RULE_DOUBLE_DOT)||(LA71_0>=RULE_HEX_NUMBER && LA71_0<=RULE_TRIPLE_DOT)||(LA71_0>=RULE_BR_O && LA71_0<=RULE_EXBR_O)||LA71_0==RULE_EXBRC_O||(LA71_0>=RULE_CURRENCY && LA71_0<=RULE_AT)) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalNLX.g:4233:3: rule__TableRow__ContentAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TableRow__ContentAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getContentAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group__2__Impl"


    // $ANTLR start "rule__TableRow__Group__3"
    // InternalNLX.g:4241:1: rule__TableRow__Group__3 : rule__TableRow__Group__3__Impl rule__TableRow__Group__4 ;
    public final void rule__TableRow__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4245:1: ( rule__TableRow__Group__3__Impl rule__TableRow__Group__4 )
            // InternalNLX.g:4246:2: rule__TableRow__Group__3__Impl rule__TableRow__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__TableRow__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableRow__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group__3"


    // $ANTLR start "rule__TableRow__Group__3__Impl"
    // InternalNLX.g:4253:1: rule__TableRow__Group__3__Impl : ( ( rule__TableRow__Group_3__0 )* ) ;
    public final void rule__TableRow__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4257:1: ( ( ( rule__TableRow__Group_3__0 )* ) )
            // InternalNLX.g:4258:1: ( ( rule__TableRow__Group_3__0 )* )
            {
            // InternalNLX.g:4258:1: ( ( rule__TableRow__Group_3__0 )* )
            // InternalNLX.g:4259:2: ( rule__TableRow__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getGroup_3()); 
            }
            // InternalNLX.g:4260:2: ( rule__TableRow__Group_3__0 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==RULE_HORIZ_SEP) ) {
                    int LA72_1 = input.LA(2);

                    if ( ((LA72_1>=RULE_HASH && LA72_1<=RULE_INT)||(LA72_1>=RULE_MULTI && LA72_1<=RULE_MINUS)||LA72_1==RULE_DOT||(LA72_1>=RULE_ID && LA72_1<=RULE_DOUBLE_DOT)||(LA72_1>=RULE_HEX_NUMBER && LA72_1<=RULE_TRIPLE_DOT)||(LA72_1>=RULE_TABLE_LINE && LA72_1<=RULE_EXBR_O)||LA72_1==RULE_EXBRC_O||(LA72_1>=RULE_CURRENCY && LA72_1<=RULE_AT)) ) {
                        alt72=1;
                    }


                }
                else if ( (LA72_0==RULE_TABLE_LINE) ) {
                    int LA72_2 = input.LA(2);

                    if ( ((LA72_2>=RULE_HASH && LA72_2<=RULE_INT)||(LA72_2>=RULE_MULTI && LA72_2<=RULE_MINUS)||LA72_2==RULE_DOT||(LA72_2>=RULE_ID && LA72_2<=RULE_DOUBLE_DOT)||(LA72_2>=RULE_HEX_NUMBER && LA72_2<=RULE_TRIPLE_DOT)||(LA72_2>=RULE_TABLE_LINE && LA72_2<=RULE_EXBR_O)||LA72_2==RULE_EXBRC_O||(LA72_2>=RULE_CURRENCY && LA72_2<=RULE_AT)) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // InternalNLX.g:4260:3: rule__TableRow__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    rule__TableRow__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group__3__Impl"


    // $ANTLR start "rule__TableRow__Group__4"
    // InternalNLX.g:4268:1: rule__TableRow__Group__4 : rule__TableRow__Group__4__Impl ;
    public final void rule__TableRow__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4272:1: ( rule__TableRow__Group__4__Impl )
            // InternalNLX.g:4273:2: rule__TableRow__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableRow__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group__4"


    // $ANTLR start "rule__TableRow__Group__4__Impl"
    // InternalNLX.g:4279:1: rule__TableRow__Group__4__Impl : ( ( rule__TableRow__ContentAssignment_4 ) ) ;
    public final void rule__TableRow__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4283:1: ( ( ( rule__TableRow__ContentAssignment_4 ) ) )
            // InternalNLX.g:4284:1: ( ( rule__TableRow__ContentAssignment_4 ) )
            {
            // InternalNLX.g:4284:1: ( ( rule__TableRow__ContentAssignment_4 ) )
            // InternalNLX.g:4285:2: ( rule__TableRow__ContentAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getContentAssignment_4()); 
            }
            // InternalNLX.g:4286:2: ( rule__TableRow__ContentAssignment_4 )
            // InternalNLX.g:4286:3: rule__TableRow__ContentAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableRow__ContentAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getContentAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group__4__Impl"


    // $ANTLR start "rule__TableRow__Group_3__0"
    // InternalNLX.g:4295:1: rule__TableRow__Group_3__0 : rule__TableRow__Group_3__0__Impl rule__TableRow__Group_3__1 ;
    public final void rule__TableRow__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4299:1: ( rule__TableRow__Group_3__0__Impl rule__TableRow__Group_3__1 )
            // InternalNLX.g:4300:2: rule__TableRow__Group_3__0__Impl rule__TableRow__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__TableRow__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableRow__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group_3__0"


    // $ANTLR start "rule__TableRow__Group_3__0__Impl"
    // InternalNLX.g:4307:1: rule__TableRow__Group_3__0__Impl : ( ( rule__TableRow__ContentAssignment_3_0 ) ) ;
    public final void rule__TableRow__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4311:1: ( ( ( rule__TableRow__ContentAssignment_3_0 ) ) )
            // InternalNLX.g:4312:1: ( ( rule__TableRow__ContentAssignment_3_0 ) )
            {
            // InternalNLX.g:4312:1: ( ( rule__TableRow__ContentAssignment_3_0 ) )
            // InternalNLX.g:4313:2: ( rule__TableRow__ContentAssignment_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getContentAssignment_3_0()); 
            }
            // InternalNLX.g:4314:2: ( rule__TableRow__ContentAssignment_3_0 )
            // InternalNLX.g:4314:3: rule__TableRow__ContentAssignment_3_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableRow__ContentAssignment_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getContentAssignment_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group_3__0__Impl"


    // $ANTLR start "rule__TableRow__Group_3__1"
    // InternalNLX.g:4322:1: rule__TableRow__Group_3__1 : rule__TableRow__Group_3__1__Impl ;
    public final void rule__TableRow__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4326:1: ( rule__TableRow__Group_3__1__Impl )
            // InternalNLX.g:4327:2: rule__TableRow__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TableRow__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group_3__1"


    // $ANTLR start "rule__TableRow__Group_3__1__Impl"
    // InternalNLX.g:4333:1: rule__TableRow__Group_3__1__Impl : ( ( rule__TableRow__ContentAssignment_3_1 )? ) ;
    public final void rule__TableRow__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4337:1: ( ( ( rule__TableRow__ContentAssignment_3_1 )? ) )
            // InternalNLX.g:4338:1: ( ( rule__TableRow__ContentAssignment_3_1 )? )
            {
            // InternalNLX.g:4338:1: ( ( rule__TableRow__ContentAssignment_3_1 )? )
            // InternalNLX.g:4339:2: ( rule__TableRow__ContentAssignment_3_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getContentAssignment_3_1()); 
            }
            // InternalNLX.g:4340:2: ( rule__TableRow__ContentAssignment_3_1 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( ((LA73_0>=RULE_HASH && LA73_0<=RULE_INT)||(LA73_0>=RULE_MULTI && LA73_0<=RULE_MINUS)||LA73_0==RULE_DOT||(LA73_0>=RULE_ID && LA73_0<=RULE_DOUBLE_DOT)||(LA73_0>=RULE_HEX_NUMBER && LA73_0<=RULE_TRIPLE_DOT)||(LA73_0>=RULE_BR_O && LA73_0<=RULE_EXBR_O)||LA73_0==RULE_EXBRC_O||(LA73_0>=RULE_CURRENCY && LA73_0<=RULE_AT)) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalNLX.g:4340:3: rule__TableRow__ContentAssignment_3_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TableRow__ContentAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getContentAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__Group_3__1__Impl"


    // $ANTLR start "rule__Table__Group__0"
    // InternalNLX.g:4349:1: rule__Table__Group__0 : rule__Table__Group__0__Impl rule__Table__Group__1 ;
    public final void rule__Table__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4353:1: ( rule__Table__Group__0__Impl rule__Table__Group__1 )
            // InternalNLX.g:4354:2: rule__Table__Group__0__Impl rule__Table__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__Table__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group__0"


    // $ANTLR start "rule__Table__Group__0__Impl"
    // InternalNLX.g:4361:1: rule__Table__Group__0__Impl : ( ( rule__Table__LinesAssignment_0 ) ) ;
    public final void rule__Table__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4365:1: ( ( ( rule__Table__LinesAssignment_0 ) ) )
            // InternalNLX.g:4366:1: ( ( rule__Table__LinesAssignment_0 ) )
            {
            // InternalNLX.g:4366:1: ( ( rule__Table__LinesAssignment_0 ) )
            // InternalNLX.g:4367:2: ( rule__Table__LinesAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getLinesAssignment_0()); 
            }
            // InternalNLX.g:4368:2: ( rule__Table__LinesAssignment_0 )
            // InternalNLX.g:4368:3: rule__Table__LinesAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__LinesAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getLinesAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group__0__Impl"


    // $ANTLR start "rule__Table__Group__1"
    // InternalNLX.g:4376:1: rule__Table__Group__1 : rule__Table__Group__1__Impl rule__Table__Group__2 ;
    public final void rule__Table__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4380:1: ( rule__Table__Group__1__Impl rule__Table__Group__2 )
            // InternalNLX.g:4381:2: rule__Table__Group__1__Impl rule__Table__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Table__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group__1"


    // $ANTLR start "rule__Table__Group__1__Impl"
    // InternalNLX.g:4388:1: rule__Table__Group__1__Impl : ( RULE_NEWLINE ) ;
    public final void rule__Table__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4392:1: ( ( RULE_NEWLINE ) )
            // InternalNLX.g:4393:1: ( RULE_NEWLINE )
            {
            // InternalNLX.g:4393:1: ( RULE_NEWLINE )
            // InternalNLX.g:4394:2: RULE_NEWLINE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_1()); 
            }
            match(input,RULE_NEWLINE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group__1__Impl"


    // $ANTLR start "rule__Table__Group__2"
    // InternalNLX.g:4403:1: rule__Table__Group__2 : rule__Table__Group__2__Impl rule__Table__Group__3 ;
    public final void rule__Table__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4407:1: ( rule__Table__Group__2__Impl rule__Table__Group__3 )
            // InternalNLX.g:4408:2: rule__Table__Group__2__Impl rule__Table__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__Table__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group__2"


    // $ANTLR start "rule__Table__Group__2__Impl"
    // InternalNLX.g:4415:1: rule__Table__Group__2__Impl : ( ( ( rule__Table__Group_2__0 ) ) ( ( rule__Table__Group_2__0 )* ) ) ;
    public final void rule__Table__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4419:1: ( ( ( ( rule__Table__Group_2__0 ) ) ( ( rule__Table__Group_2__0 )* ) ) )
            // InternalNLX.g:4420:1: ( ( ( rule__Table__Group_2__0 ) ) ( ( rule__Table__Group_2__0 )* ) )
            {
            // InternalNLX.g:4420:1: ( ( ( rule__Table__Group_2__0 ) ) ( ( rule__Table__Group_2__0 )* ) )
            // InternalNLX.g:4421:2: ( ( rule__Table__Group_2__0 ) ) ( ( rule__Table__Group_2__0 )* )
            {
            // InternalNLX.g:4421:2: ( ( rule__Table__Group_2__0 ) )
            // InternalNLX.g:4422:3: ( rule__Table__Group_2__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getGroup_2()); 
            }
            // InternalNLX.g:4423:3: ( rule__Table__Group_2__0 )
            // InternalNLX.g:4423:4: rule__Table__Group_2__0
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Table__Group_2__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getGroup_2()); 
            }

            }

            // InternalNLX.g:4426:2: ( ( rule__Table__Group_2__0 )* )
            // InternalNLX.g:4427:3: ( rule__Table__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getGroup_2()); 
            }
            // InternalNLX.g:4428:3: ( rule__Table__Group_2__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==RULE_TABLE_LINE) ) {
                    int LA74_1 = input.LA(2);

                    if ( ((LA74_1>=RULE_HASH && LA74_1<=RULE_INT)||(LA74_1>=RULE_MULTI && LA74_1<=RULE_MINUS)||LA74_1==RULE_DOT||(LA74_1>=RULE_ID && LA74_1<=RULE_DOUBLE_DOT)||(LA74_1>=RULE_HEX_NUMBER && LA74_1<=RULE_TRIPLE_DOT)||(LA74_1>=RULE_TABLE_LINE && LA74_1<=RULE_EXBR_O)||LA74_1==RULE_EXBRC_O||(LA74_1>=RULE_CURRENCY && LA74_1<=RULE_AT)) ) {
                        alt74=1;
                    }


                }
                else if ( (LA74_0==RULE_HORIZ_SEP) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalNLX.g:4428:4: rule__Table__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    rule__Table__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getGroup_2()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group__2__Impl"


    // $ANTLR start "rule__Table__Group__3"
    // InternalNLX.g:4437:1: rule__Table__Group__3 : rule__Table__Group__3__Impl rule__Table__Group__4 ;
    public final void rule__Table__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4441:1: ( rule__Table__Group__3__Impl rule__Table__Group__4 )
            // InternalNLX.g:4442:2: rule__Table__Group__3__Impl rule__Table__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__Table__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group__3"


    // $ANTLR start "rule__Table__Group__3__Impl"
    // InternalNLX.g:4449:1: rule__Table__Group__3__Impl : ( ( rule__Table__Group_3__0 )* ) ;
    public final void rule__Table__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4453:1: ( ( ( rule__Table__Group_3__0 )* ) )
            // InternalNLX.g:4454:1: ( ( rule__Table__Group_3__0 )* )
            {
            // InternalNLX.g:4454:1: ( ( rule__Table__Group_3__0 )* )
            // InternalNLX.g:4455:2: ( rule__Table__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getGroup_3()); 
            }
            // InternalNLX.g:4456:2: ( rule__Table__Group_3__0 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==RULE_TABLE_LINE) ) {
                    int LA75_1 = input.LA(2);

                    if ( (LA75_1==RULE_NEWLINE) ) {
                        int LA75_3 = input.LA(3);

                        if ( (LA75_3==RULE_HORIZ_SEP) ) {
                            alt75=1;
                        }
                        else if ( (LA75_3==RULE_TABLE_LINE) ) {
                            int LA75_5 = input.LA(4);

                            if ( ((LA75_5>=RULE_HASH && LA75_5<=RULE_INT)||(LA75_5>=RULE_MULTI && LA75_5<=RULE_MINUS)||LA75_5==RULE_DOT||(LA75_5>=RULE_ID && LA75_5<=RULE_DOUBLE_DOT)||(LA75_5>=RULE_HEX_NUMBER && LA75_5<=RULE_TRIPLE_DOT)||(LA75_5>=RULE_TABLE_LINE && LA75_5<=RULE_EXBR_O)||LA75_5==RULE_EXBRC_O||(LA75_5>=RULE_CURRENCY && LA75_5<=RULE_AT)) ) {
                                alt75=1;
                            }


                        }


                    }


                }


                switch (alt75) {
            	case 1 :
            	    // InternalNLX.g:4456:3: rule__Table__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__Table__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group__3__Impl"


    // $ANTLR start "rule__Table__Group__4"
    // InternalNLX.g:4464:1: rule__Table__Group__4 : rule__Table__Group__4__Impl ;
    public final void rule__Table__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4468:1: ( rule__Table__Group__4__Impl )
            // InternalNLX.g:4469:2: rule__Table__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group__4"


    // $ANTLR start "rule__Table__Group__4__Impl"
    // InternalNLX.g:4475:1: rule__Table__Group__4__Impl : ( ( rule__Table__LinesAssignment_4 ) ) ;
    public final void rule__Table__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4479:1: ( ( ( rule__Table__LinesAssignment_4 ) ) )
            // InternalNLX.g:4480:1: ( ( rule__Table__LinesAssignment_4 ) )
            {
            // InternalNLX.g:4480:1: ( ( rule__Table__LinesAssignment_4 ) )
            // InternalNLX.g:4481:2: ( rule__Table__LinesAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getLinesAssignment_4()); 
            }
            // InternalNLX.g:4482:2: ( rule__Table__LinesAssignment_4 )
            // InternalNLX.g:4482:3: rule__Table__LinesAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__LinesAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getLinesAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group__4__Impl"


    // $ANTLR start "rule__Table__Group_2__0"
    // InternalNLX.g:4491:1: rule__Table__Group_2__0 : rule__Table__Group_2__0__Impl rule__Table__Group_2__1 ;
    public final void rule__Table__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4495:1: ( rule__Table__Group_2__0__Impl rule__Table__Group_2__1 )
            // InternalNLX.g:4496:2: rule__Table__Group_2__0__Impl rule__Table__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__Table__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_2__0"


    // $ANTLR start "rule__Table__Group_2__0__Impl"
    // InternalNLX.g:4503:1: rule__Table__Group_2__0__Impl : ( ( rule__Table__LinesAssignment_2_0 ) ) ;
    public final void rule__Table__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4507:1: ( ( ( rule__Table__LinesAssignment_2_0 ) ) )
            // InternalNLX.g:4508:1: ( ( rule__Table__LinesAssignment_2_0 ) )
            {
            // InternalNLX.g:4508:1: ( ( rule__Table__LinesAssignment_2_0 ) )
            // InternalNLX.g:4509:2: ( rule__Table__LinesAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getLinesAssignment_2_0()); 
            }
            // InternalNLX.g:4510:2: ( rule__Table__LinesAssignment_2_0 )
            // InternalNLX.g:4510:3: rule__Table__LinesAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__LinesAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getLinesAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_2__0__Impl"


    // $ANTLR start "rule__Table__Group_2__1"
    // InternalNLX.g:4518:1: rule__Table__Group_2__1 : rule__Table__Group_2__1__Impl ;
    public final void rule__Table__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4522:1: ( rule__Table__Group_2__1__Impl )
            // InternalNLX.g:4523:2: rule__Table__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_2__1"


    // $ANTLR start "rule__Table__Group_2__1__Impl"
    // InternalNLX.g:4529:1: rule__Table__Group_2__1__Impl : ( RULE_NEWLINE ) ;
    public final void rule__Table__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4533:1: ( ( RULE_NEWLINE ) )
            // InternalNLX.g:4534:1: ( RULE_NEWLINE )
            {
            // InternalNLX.g:4534:1: ( RULE_NEWLINE )
            // InternalNLX.g:4535:2: RULE_NEWLINE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_2_1()); 
            }
            match(input,RULE_NEWLINE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_2__1__Impl"


    // $ANTLR start "rule__Table__Group_3__0"
    // InternalNLX.g:4545:1: rule__Table__Group_3__0 : rule__Table__Group_3__0__Impl rule__Table__Group_3__1 ;
    public final void rule__Table__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4549:1: ( rule__Table__Group_3__0__Impl rule__Table__Group_3__1 )
            // InternalNLX.g:4550:2: rule__Table__Group_3__0__Impl rule__Table__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__Table__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_3__0"


    // $ANTLR start "rule__Table__Group_3__0__Impl"
    // InternalNLX.g:4557:1: rule__Table__Group_3__0__Impl : ( ( rule__Table__LinesAssignment_3_0 ) ) ;
    public final void rule__Table__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4561:1: ( ( ( rule__Table__LinesAssignment_3_0 ) ) )
            // InternalNLX.g:4562:1: ( ( rule__Table__LinesAssignment_3_0 ) )
            {
            // InternalNLX.g:4562:1: ( ( rule__Table__LinesAssignment_3_0 ) )
            // InternalNLX.g:4563:2: ( rule__Table__LinesAssignment_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getLinesAssignment_3_0()); 
            }
            // InternalNLX.g:4564:2: ( rule__Table__LinesAssignment_3_0 )
            // InternalNLX.g:4564:3: rule__Table__LinesAssignment_3_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__LinesAssignment_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getLinesAssignment_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_3__0__Impl"


    // $ANTLR start "rule__Table__Group_3__1"
    // InternalNLX.g:4572:1: rule__Table__Group_3__1 : rule__Table__Group_3__1__Impl rule__Table__Group_3__2 ;
    public final void rule__Table__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4576:1: ( rule__Table__Group_3__1__Impl rule__Table__Group_3__2 )
            // InternalNLX.g:4577:2: rule__Table__Group_3__1__Impl rule__Table__Group_3__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Table__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_3__1"


    // $ANTLR start "rule__Table__Group_3__1__Impl"
    // InternalNLX.g:4584:1: rule__Table__Group_3__1__Impl : ( RULE_NEWLINE ) ;
    public final void rule__Table__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4588:1: ( ( RULE_NEWLINE ) )
            // InternalNLX.g:4589:1: ( RULE_NEWLINE )
            {
            // InternalNLX.g:4589:1: ( RULE_NEWLINE )
            // InternalNLX.g:4590:2: RULE_NEWLINE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_3_1()); 
            }
            match(input,RULE_NEWLINE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_3__1__Impl"


    // $ANTLR start "rule__Table__Group_3__2"
    // InternalNLX.g:4599:1: rule__Table__Group_3__2 : rule__Table__Group_3__2__Impl ;
    public final void rule__Table__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4603:1: ( rule__Table__Group_3__2__Impl )
            // InternalNLX.g:4604:2: rule__Table__Group_3__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_3__2"


    // $ANTLR start "rule__Table__Group_3__2__Impl"
    // InternalNLX.g:4610:1: rule__Table__Group_3__2__Impl : ( ( ( rule__Table__Group_3_2__0 ) ) ( ( rule__Table__Group_3_2__0 )* ) ) ;
    public final void rule__Table__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4614:1: ( ( ( ( rule__Table__Group_3_2__0 ) ) ( ( rule__Table__Group_3_2__0 )* ) ) )
            // InternalNLX.g:4615:1: ( ( ( rule__Table__Group_3_2__0 ) ) ( ( rule__Table__Group_3_2__0 )* ) )
            {
            // InternalNLX.g:4615:1: ( ( ( rule__Table__Group_3_2__0 ) ) ( ( rule__Table__Group_3_2__0 )* ) )
            // InternalNLX.g:4616:2: ( ( rule__Table__Group_3_2__0 ) ) ( ( rule__Table__Group_3_2__0 )* )
            {
            // InternalNLX.g:4616:2: ( ( rule__Table__Group_3_2__0 ) )
            // InternalNLX.g:4617:3: ( rule__Table__Group_3_2__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getGroup_3_2()); 
            }
            // InternalNLX.g:4618:3: ( rule__Table__Group_3_2__0 )
            // InternalNLX.g:4618:4: rule__Table__Group_3_2__0
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Table__Group_3_2__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getGroup_3_2()); 
            }

            }

            // InternalNLX.g:4621:2: ( ( rule__Table__Group_3_2__0 )* )
            // InternalNLX.g:4622:3: ( rule__Table__Group_3_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getGroup_3_2()); 
            }
            // InternalNLX.g:4623:3: ( rule__Table__Group_3_2__0 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==RULE_TABLE_LINE) ) {
                    int LA76_1 = input.LA(2);

                    if ( ((LA76_1>=RULE_HASH && LA76_1<=RULE_INT)||(LA76_1>=RULE_MULTI && LA76_1<=RULE_MINUS)||LA76_1==RULE_DOT||(LA76_1>=RULE_ID && LA76_1<=RULE_DOUBLE_DOT)||(LA76_1>=RULE_HEX_NUMBER && LA76_1<=RULE_TRIPLE_DOT)||(LA76_1>=RULE_TABLE_LINE && LA76_1<=RULE_EXBR_O)||LA76_1==RULE_EXBRC_O||(LA76_1>=RULE_CURRENCY && LA76_1<=RULE_AT)) ) {
                        alt76=1;
                    }


                }
                else if ( (LA76_0==RULE_HORIZ_SEP) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalNLX.g:4623:4: rule__Table__Group_3_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    rule__Table__Group_3_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getGroup_3_2()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_3__2__Impl"


    // $ANTLR start "rule__Table__Group_3_2__0"
    // InternalNLX.g:4633:1: rule__Table__Group_3_2__0 : rule__Table__Group_3_2__0__Impl rule__Table__Group_3_2__1 ;
    public final void rule__Table__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4637:1: ( rule__Table__Group_3_2__0__Impl rule__Table__Group_3_2__1 )
            // InternalNLX.g:4638:2: rule__Table__Group_3_2__0__Impl rule__Table__Group_3_2__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__Table__Group_3_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group_3_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_3_2__0"


    // $ANTLR start "rule__Table__Group_3_2__0__Impl"
    // InternalNLX.g:4645:1: rule__Table__Group_3_2__0__Impl : ( ( rule__Table__LinesAssignment_3_2_0 ) ) ;
    public final void rule__Table__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4649:1: ( ( ( rule__Table__LinesAssignment_3_2_0 ) ) )
            // InternalNLX.g:4650:1: ( ( rule__Table__LinesAssignment_3_2_0 ) )
            {
            // InternalNLX.g:4650:1: ( ( rule__Table__LinesAssignment_3_2_0 ) )
            // InternalNLX.g:4651:2: ( rule__Table__LinesAssignment_3_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getLinesAssignment_3_2_0()); 
            }
            // InternalNLX.g:4652:2: ( rule__Table__LinesAssignment_3_2_0 )
            // InternalNLX.g:4652:3: rule__Table__LinesAssignment_3_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__LinesAssignment_3_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getLinesAssignment_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_3_2__0__Impl"


    // $ANTLR start "rule__Table__Group_3_2__1"
    // InternalNLX.g:4660:1: rule__Table__Group_3_2__1 : rule__Table__Group_3_2__1__Impl ;
    public final void rule__Table__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4664:1: ( rule__Table__Group_3_2__1__Impl )
            // InternalNLX.g:4665:2: rule__Table__Group_3_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Table__Group_3_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_3_2__1"


    // $ANTLR start "rule__Table__Group_3_2__1__Impl"
    // InternalNLX.g:4671:1: rule__Table__Group_3_2__1__Impl : ( RULE_NEWLINE ) ;
    public final void rule__Table__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4675:1: ( ( RULE_NEWLINE ) )
            // InternalNLX.g:4676:1: ( RULE_NEWLINE )
            {
            // InternalNLX.g:4676:1: ( RULE_NEWLINE )
            // InternalNLX.g:4677:2: RULE_NEWLINE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_3_2_1()); 
            }
            match(input,RULE_NEWLINE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_3_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__Group_3_2__1__Impl"


    // $ANTLR start "rule__LineSentenceChain__Group__0"
    // InternalNLX.g:4687:1: rule__LineSentenceChain__Group__0 : rule__LineSentenceChain__Group__0__Impl rule__LineSentenceChain__Group__1 ;
    public final void rule__LineSentenceChain__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4691:1: ( rule__LineSentenceChain__Group__0__Impl rule__LineSentenceChain__Group__1 )
            // InternalNLX.g:4692:2: rule__LineSentenceChain__Group__0__Impl rule__LineSentenceChain__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__LineSentenceChain__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentenceChain__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group__0"


    // $ANTLR start "rule__LineSentenceChain__Group__0__Impl"
    // InternalNLX.g:4699:1: rule__LineSentenceChain__Group__0__Impl : ( () ) ;
    public final void rule__LineSentenceChain__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4703:1: ( ( () ) )
            // InternalNLX.g:4704:1: ( () )
            {
            // InternalNLX.g:4704:1: ( () )
            // InternalNLX.g:4705:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainAccess().getSentenceChainAction_0()); 
            }
            // InternalNLX.g:4706:2: ()
            // InternalNLX.g:4706:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainAccess().getSentenceChainAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group__0__Impl"


    // $ANTLR start "rule__LineSentenceChain__Group__1"
    // InternalNLX.g:4714:1: rule__LineSentenceChain__Group__1 : rule__LineSentenceChain__Group__1__Impl rule__LineSentenceChain__Group__2 ;
    public final void rule__LineSentenceChain__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4718:1: ( rule__LineSentenceChain__Group__1__Impl rule__LineSentenceChain__Group__2 )
            // InternalNLX.g:4719:2: rule__LineSentenceChain__Group__1__Impl rule__LineSentenceChain__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__LineSentenceChain__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentenceChain__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group__1"


    // $ANTLR start "rule__LineSentenceChain__Group__1__Impl"
    // InternalNLX.g:4726:1: rule__LineSentenceChain__Group__1__Impl : ( ( rule__LineSentenceChain__SentencesAssignment_1 ) ) ;
    public final void rule__LineSentenceChain__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4730:1: ( ( ( rule__LineSentenceChain__SentencesAssignment_1 ) ) )
            // InternalNLX.g:4731:1: ( ( rule__LineSentenceChain__SentencesAssignment_1 ) )
            {
            // InternalNLX.g:4731:1: ( ( rule__LineSentenceChain__SentencesAssignment_1 ) )
            // InternalNLX.g:4732:2: ( rule__LineSentenceChain__SentencesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainAccess().getSentencesAssignment_1()); 
            }
            // InternalNLX.g:4733:2: ( rule__LineSentenceChain__SentencesAssignment_1 )
            // InternalNLX.g:4733:3: rule__LineSentenceChain__SentencesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentenceChain__SentencesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainAccess().getSentencesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group__1__Impl"


    // $ANTLR start "rule__LineSentenceChain__Group__2"
    // InternalNLX.g:4741:1: rule__LineSentenceChain__Group__2 : rule__LineSentenceChain__Group__2__Impl rule__LineSentenceChain__Group__3 ;
    public final void rule__LineSentenceChain__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4745:1: ( rule__LineSentenceChain__Group__2__Impl rule__LineSentenceChain__Group__3 )
            // InternalNLX.g:4746:2: rule__LineSentenceChain__Group__2__Impl rule__LineSentenceChain__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__LineSentenceChain__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentenceChain__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group__2"


    // $ANTLR start "rule__LineSentenceChain__Group__2__Impl"
    // InternalNLX.g:4753:1: rule__LineSentenceChain__Group__2__Impl : ( ( rule__LineSentenceChain__Group_2__0 )* ) ;
    public final void rule__LineSentenceChain__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4757:1: ( ( ( rule__LineSentenceChain__Group_2__0 )* ) )
            // InternalNLX.g:4758:1: ( ( rule__LineSentenceChain__Group_2__0 )* )
            {
            // InternalNLX.g:4758:1: ( ( rule__LineSentenceChain__Group_2__0 )* )
            // InternalNLX.g:4759:2: ( rule__LineSentenceChain__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainAccess().getGroup_2()); 
            }
            // InternalNLX.g:4760:2: ( rule__LineSentenceChain__Group_2__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==RULE_FULL_STOP_IM) ) {
                    int LA77_1 = input.LA(2);

                    if ( ((LA77_1>=RULE_HASH && LA77_1<=RULE_INT)||(LA77_1>=RULE_MULTI && LA77_1<=RULE_MINUS)||LA77_1==RULE_DOT||(LA77_1>=RULE_ID && LA77_1<=RULE_DOUBLE_DOT)||(LA77_1>=RULE_HEX_NUMBER && LA77_1<=RULE_TRIPLE_DOT)||(LA77_1>=RULE_BR_O && LA77_1<=RULE_EXBR_O)||LA77_1==RULE_EXBRC_O||(LA77_1>=RULE_CURRENCY && LA77_1<=RULE_AT)) ) {
                        alt77=1;
                    }


                }


                switch (alt77) {
            	case 1 :
            	    // InternalNLX.g:4760:3: rule__LineSentenceChain__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_18);
            	    rule__LineSentenceChain__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group__2__Impl"


    // $ANTLR start "rule__LineSentenceChain__Group__3"
    // InternalNLX.g:4768:1: rule__LineSentenceChain__Group__3 : rule__LineSentenceChain__Group__3__Impl ;
    public final void rule__LineSentenceChain__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4772:1: ( rule__LineSentenceChain__Group__3__Impl )
            // InternalNLX.g:4773:2: rule__LineSentenceChain__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentenceChain__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group__3"


    // $ANTLR start "rule__LineSentenceChain__Group__3__Impl"
    // InternalNLX.g:4779:1: rule__LineSentenceChain__Group__3__Impl : ( ( rule__LineSentenceChain__EndpointAssignment_3 )? ) ;
    public final void rule__LineSentenceChain__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4783:1: ( ( ( rule__LineSentenceChain__EndpointAssignment_3 )? ) )
            // InternalNLX.g:4784:1: ( ( rule__LineSentenceChain__EndpointAssignment_3 )? )
            {
            // InternalNLX.g:4784:1: ( ( rule__LineSentenceChain__EndpointAssignment_3 )? )
            // InternalNLX.g:4785:2: ( rule__LineSentenceChain__EndpointAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainAccess().getEndpointAssignment_3()); 
            }
            // InternalNLX.g:4786:2: ( rule__LineSentenceChain__EndpointAssignment_3 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_FULL_STOP_IM) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalNLX.g:4786:3: rule__LineSentenceChain__EndpointAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LineSentenceChain__EndpointAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainAccess().getEndpointAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group__3__Impl"


    // $ANTLR start "rule__LineSentenceChain__Group_2__0"
    // InternalNLX.g:4795:1: rule__LineSentenceChain__Group_2__0 : rule__LineSentenceChain__Group_2__0__Impl rule__LineSentenceChain__Group_2__1 ;
    public final void rule__LineSentenceChain__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4799:1: ( rule__LineSentenceChain__Group_2__0__Impl rule__LineSentenceChain__Group_2__1 )
            // InternalNLX.g:4800:2: rule__LineSentenceChain__Group_2__0__Impl rule__LineSentenceChain__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__LineSentenceChain__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentenceChain__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group_2__0"


    // $ANTLR start "rule__LineSentenceChain__Group_2__0__Impl"
    // InternalNLX.g:4807:1: rule__LineSentenceChain__Group_2__0__Impl : ( ( rule__LineSentenceChain__SeparatorsAssignment_2_0 ) ) ;
    public final void rule__LineSentenceChain__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4811:1: ( ( ( rule__LineSentenceChain__SeparatorsAssignment_2_0 ) ) )
            // InternalNLX.g:4812:1: ( ( rule__LineSentenceChain__SeparatorsAssignment_2_0 ) )
            {
            // InternalNLX.g:4812:1: ( ( rule__LineSentenceChain__SeparatorsAssignment_2_0 ) )
            // InternalNLX.g:4813:2: ( rule__LineSentenceChain__SeparatorsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainAccess().getSeparatorsAssignment_2_0()); 
            }
            // InternalNLX.g:4814:2: ( rule__LineSentenceChain__SeparatorsAssignment_2_0 )
            // InternalNLX.g:4814:3: rule__LineSentenceChain__SeparatorsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentenceChain__SeparatorsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainAccess().getSeparatorsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group_2__0__Impl"


    // $ANTLR start "rule__LineSentenceChain__Group_2__1"
    // InternalNLX.g:4822:1: rule__LineSentenceChain__Group_2__1 : rule__LineSentenceChain__Group_2__1__Impl ;
    public final void rule__LineSentenceChain__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4826:1: ( rule__LineSentenceChain__Group_2__1__Impl )
            // InternalNLX.g:4827:2: rule__LineSentenceChain__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentenceChain__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group_2__1"


    // $ANTLR start "rule__LineSentenceChain__Group_2__1__Impl"
    // InternalNLX.g:4833:1: rule__LineSentenceChain__Group_2__1__Impl : ( ( rule__LineSentenceChain__SentencesAssignment_2_1 ) ) ;
    public final void rule__LineSentenceChain__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4837:1: ( ( ( rule__LineSentenceChain__SentencesAssignment_2_1 ) ) )
            // InternalNLX.g:4838:1: ( ( rule__LineSentenceChain__SentencesAssignment_2_1 ) )
            {
            // InternalNLX.g:4838:1: ( ( rule__LineSentenceChain__SentencesAssignment_2_1 ) )
            // InternalNLX.g:4839:2: ( rule__LineSentenceChain__SentencesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainAccess().getSentencesAssignment_2_1()); 
            }
            // InternalNLX.g:4840:2: ( rule__LineSentenceChain__SentencesAssignment_2_1 )
            // InternalNLX.g:4840:3: rule__LineSentenceChain__SentencesAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentenceChain__SentencesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainAccess().getSentencesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__Group_2__1__Impl"


    // $ANTLR start "rule__SentenceChain__Group__0"
    // InternalNLX.g:4849:1: rule__SentenceChain__Group__0 : rule__SentenceChain__Group__0__Impl rule__SentenceChain__Group__1 ;
    public final void rule__SentenceChain__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4853:1: ( rule__SentenceChain__Group__0__Impl rule__SentenceChain__Group__1 )
            // InternalNLX.g:4854:2: rule__SentenceChain__Group__0__Impl rule__SentenceChain__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__SentenceChain__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChain__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group__0"


    // $ANTLR start "rule__SentenceChain__Group__0__Impl"
    // InternalNLX.g:4861:1: rule__SentenceChain__Group__0__Impl : ( () ) ;
    public final void rule__SentenceChain__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4865:1: ( ( () ) )
            // InternalNLX.g:4866:1: ( () )
            {
            // InternalNLX.g:4866:1: ( () )
            // InternalNLX.g:4867:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getSentenceChainAction_0()); 
            }
            // InternalNLX.g:4868:2: ()
            // InternalNLX.g:4868:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getSentenceChainAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group__0__Impl"


    // $ANTLR start "rule__SentenceChain__Group__1"
    // InternalNLX.g:4876:1: rule__SentenceChain__Group__1 : rule__SentenceChain__Group__1__Impl rule__SentenceChain__Group__2 ;
    public final void rule__SentenceChain__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4880:1: ( rule__SentenceChain__Group__1__Impl rule__SentenceChain__Group__2 )
            // InternalNLX.g:4881:2: rule__SentenceChain__Group__1__Impl rule__SentenceChain__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__SentenceChain__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChain__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group__1"


    // $ANTLR start "rule__SentenceChain__Group__1__Impl"
    // InternalNLX.g:4888:1: rule__SentenceChain__Group__1__Impl : ( ( rule__SentenceChain__SentencesAssignment_1 ) ) ;
    public final void rule__SentenceChain__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4892:1: ( ( ( rule__SentenceChain__SentencesAssignment_1 ) ) )
            // InternalNLX.g:4893:1: ( ( rule__SentenceChain__SentencesAssignment_1 ) )
            {
            // InternalNLX.g:4893:1: ( ( rule__SentenceChain__SentencesAssignment_1 ) )
            // InternalNLX.g:4894:2: ( rule__SentenceChain__SentencesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getSentencesAssignment_1()); 
            }
            // InternalNLX.g:4895:2: ( rule__SentenceChain__SentencesAssignment_1 )
            // InternalNLX.g:4895:3: rule__SentenceChain__SentencesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChain__SentencesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getSentencesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group__1__Impl"


    // $ANTLR start "rule__SentenceChain__Group__2"
    // InternalNLX.g:4903:1: rule__SentenceChain__Group__2 : rule__SentenceChain__Group__2__Impl rule__SentenceChain__Group__3 ;
    public final void rule__SentenceChain__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4907:1: ( rule__SentenceChain__Group__2__Impl rule__SentenceChain__Group__3 )
            // InternalNLX.g:4908:2: rule__SentenceChain__Group__2__Impl rule__SentenceChain__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__SentenceChain__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChain__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group__2"


    // $ANTLR start "rule__SentenceChain__Group__2__Impl"
    // InternalNLX.g:4915:1: rule__SentenceChain__Group__2__Impl : ( ( rule__SentenceChain__Group_2__0 )* ) ;
    public final void rule__SentenceChain__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4919:1: ( ( ( rule__SentenceChain__Group_2__0 )* ) )
            // InternalNLX.g:4920:1: ( ( rule__SentenceChain__Group_2__0 )* )
            {
            // InternalNLX.g:4920:1: ( ( rule__SentenceChain__Group_2__0 )* )
            // InternalNLX.g:4921:2: ( rule__SentenceChain__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getGroup_2()); 
            }
            // InternalNLX.g:4922:2: ( rule__SentenceChain__Group_2__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==RULE_FULL_STOP_IM) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalNLX.g:4922:3: rule__SentenceChain__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_18);
            	    rule__SentenceChain__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group__2__Impl"


    // $ANTLR start "rule__SentenceChain__Group__3"
    // InternalNLX.g:4930:1: rule__SentenceChain__Group__3 : rule__SentenceChain__Group__3__Impl ;
    public final void rule__SentenceChain__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4934:1: ( rule__SentenceChain__Group__3__Impl )
            // InternalNLX.g:4935:2: rule__SentenceChain__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChain__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group__3"


    // $ANTLR start "rule__SentenceChain__Group__3__Impl"
    // InternalNLX.g:4941:1: rule__SentenceChain__Group__3__Impl : ( ( rule__SentenceChain__Alternatives_3 ) ) ;
    public final void rule__SentenceChain__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4945:1: ( ( ( rule__SentenceChain__Alternatives_3 ) ) )
            // InternalNLX.g:4946:1: ( ( rule__SentenceChain__Alternatives_3 ) )
            {
            // InternalNLX.g:4946:1: ( ( rule__SentenceChain__Alternatives_3 ) )
            // InternalNLX.g:4947:2: ( rule__SentenceChain__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getAlternatives_3()); 
            }
            // InternalNLX.g:4948:2: ( rule__SentenceChain__Alternatives_3 )
            // InternalNLX.g:4948:3: rule__SentenceChain__Alternatives_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChain__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group__3__Impl"


    // $ANTLR start "rule__SentenceChain__Group_2__0"
    // InternalNLX.g:4957:1: rule__SentenceChain__Group_2__0 : rule__SentenceChain__Group_2__0__Impl rule__SentenceChain__Group_2__1 ;
    public final void rule__SentenceChain__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4961:1: ( rule__SentenceChain__Group_2__0__Impl rule__SentenceChain__Group_2__1 )
            // InternalNLX.g:4962:2: rule__SentenceChain__Group_2__0__Impl rule__SentenceChain__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__SentenceChain__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChain__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group_2__0"


    // $ANTLR start "rule__SentenceChain__Group_2__0__Impl"
    // InternalNLX.g:4969:1: rule__SentenceChain__Group_2__0__Impl : ( ( rule__SentenceChain__SeparatorsAssignment_2_0 ) ) ;
    public final void rule__SentenceChain__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4973:1: ( ( ( rule__SentenceChain__SeparatorsAssignment_2_0 ) ) )
            // InternalNLX.g:4974:1: ( ( rule__SentenceChain__SeparatorsAssignment_2_0 ) )
            {
            // InternalNLX.g:4974:1: ( ( rule__SentenceChain__SeparatorsAssignment_2_0 ) )
            // InternalNLX.g:4975:2: ( rule__SentenceChain__SeparatorsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getSeparatorsAssignment_2_0()); 
            }
            // InternalNLX.g:4976:2: ( rule__SentenceChain__SeparatorsAssignment_2_0 )
            // InternalNLX.g:4976:3: rule__SentenceChain__SeparatorsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChain__SeparatorsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getSeparatorsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group_2__0__Impl"


    // $ANTLR start "rule__SentenceChain__Group_2__1"
    // InternalNLX.g:4984:1: rule__SentenceChain__Group_2__1 : rule__SentenceChain__Group_2__1__Impl ;
    public final void rule__SentenceChain__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4988:1: ( rule__SentenceChain__Group_2__1__Impl )
            // InternalNLX.g:4989:2: rule__SentenceChain__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChain__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group_2__1"


    // $ANTLR start "rule__SentenceChain__Group_2__1__Impl"
    // InternalNLX.g:4995:1: rule__SentenceChain__Group_2__1__Impl : ( ( rule__SentenceChain__SentencesAssignment_2_1 ) ) ;
    public final void rule__SentenceChain__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:4999:1: ( ( ( rule__SentenceChain__SentencesAssignment_2_1 ) ) )
            // InternalNLX.g:5000:1: ( ( rule__SentenceChain__SentencesAssignment_2_1 ) )
            {
            // InternalNLX.g:5000:1: ( ( rule__SentenceChain__SentencesAssignment_2_1 ) )
            // InternalNLX.g:5001:2: ( rule__SentenceChain__SentencesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getSentencesAssignment_2_1()); 
            }
            // InternalNLX.g:5002:2: ( rule__SentenceChain__SentencesAssignment_2_1 )
            // InternalNLX.g:5002:3: rule__SentenceChain__SentencesAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChain__SentencesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getSentencesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__Group_2__1__Impl"


    // $ANTLR start "rule__SentenceChainX__Group__0"
    // InternalNLX.g:5011:1: rule__SentenceChainX__Group__0 : rule__SentenceChainX__Group__0__Impl rule__SentenceChainX__Group__1 ;
    public final void rule__SentenceChainX__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5015:1: ( rule__SentenceChainX__Group__0__Impl rule__SentenceChainX__Group__1 )
            // InternalNLX.g:5016:2: rule__SentenceChainX__Group__0__Impl rule__SentenceChainX__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__SentenceChainX__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group__0"


    // $ANTLR start "rule__SentenceChainX__Group__0__Impl"
    // InternalNLX.g:5023:1: rule__SentenceChainX__Group__0__Impl : ( () ) ;
    public final void rule__SentenceChainX__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5027:1: ( ( () ) )
            // InternalNLX.g:5028:1: ( () )
            {
            // InternalNLX.g:5028:1: ( () )
            // InternalNLX.g:5029:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getSentenceChainAction_0()); 
            }
            // InternalNLX.g:5030:2: ()
            // InternalNLX.g:5030:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getSentenceChainAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group__0__Impl"


    // $ANTLR start "rule__SentenceChainX__Group__1"
    // InternalNLX.g:5038:1: rule__SentenceChainX__Group__1 : rule__SentenceChainX__Group__1__Impl rule__SentenceChainX__Group__2 ;
    public final void rule__SentenceChainX__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5042:1: ( rule__SentenceChainX__Group__1__Impl rule__SentenceChainX__Group__2 )
            // InternalNLX.g:5043:2: rule__SentenceChainX__Group__1__Impl rule__SentenceChainX__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__SentenceChainX__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group__1"


    // $ANTLR start "rule__SentenceChainX__Group__1__Impl"
    // InternalNLX.g:5050:1: rule__SentenceChainX__Group__1__Impl : ( ( rule__SentenceChainX__SentencesAssignment_1 ) ) ;
    public final void rule__SentenceChainX__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5054:1: ( ( ( rule__SentenceChainX__SentencesAssignment_1 ) ) )
            // InternalNLX.g:5055:1: ( ( rule__SentenceChainX__SentencesAssignment_1 ) )
            {
            // InternalNLX.g:5055:1: ( ( rule__SentenceChainX__SentencesAssignment_1 ) )
            // InternalNLX.g:5056:2: ( rule__SentenceChainX__SentencesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getSentencesAssignment_1()); 
            }
            // InternalNLX.g:5057:2: ( rule__SentenceChainX__SentencesAssignment_1 )
            // InternalNLX.g:5057:3: rule__SentenceChainX__SentencesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__SentencesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getSentencesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group__1__Impl"

}

@SuppressWarnings("all")
abstract class InternalNLXParser5 extends InternalNLXParser4 {

        InternalNLXParser5(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalNLXParser5(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__SentenceChainX__Group__2"
    // InternalNLX.g:5065:1: rule__SentenceChainX__Group__2 : rule__SentenceChainX__Group__2__Impl rule__SentenceChainX__Group__3 ;
    public final void rule__SentenceChainX__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5069:1: ( rule__SentenceChainX__Group__2__Impl rule__SentenceChainX__Group__3 )
            // InternalNLX.g:5070:2: rule__SentenceChainX__Group__2__Impl rule__SentenceChainX__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__SentenceChainX__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group__2"


    // $ANTLR start "rule__SentenceChainX__Group__2__Impl"
    // InternalNLX.g:5077:1: rule__SentenceChainX__Group__2__Impl : ( ( rule__SentenceChainX__Group_2__0 )* ) ;
    public final void rule__SentenceChainX__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5081:1: ( ( ( rule__SentenceChainX__Group_2__0 )* ) )
            // InternalNLX.g:5082:1: ( ( rule__SentenceChainX__Group_2__0 )* )
            {
            // InternalNLX.g:5082:1: ( ( rule__SentenceChainX__Group_2__0 )* )
            // InternalNLX.g:5083:2: ( rule__SentenceChainX__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getGroup_2()); 
            }
            // InternalNLX.g:5084:2: ( rule__SentenceChainX__Group_2__0 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==RULE_FULL_STOP_IM) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalNLX.g:5084:3: rule__SentenceChainX__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_18);
            	    rule__SentenceChainX__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group__2__Impl"


    // $ANTLR start "rule__SentenceChainX__Group__3"
    // InternalNLX.g:5092:1: rule__SentenceChainX__Group__3 : rule__SentenceChainX__Group__3__Impl ;
    public final void rule__SentenceChainX__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5096:1: ( rule__SentenceChainX__Group__3__Impl )
            // InternalNLX.g:5097:2: rule__SentenceChainX__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group__3"


    // $ANTLR start "rule__SentenceChainX__Group__3__Impl"
    // InternalNLX.g:5103:1: rule__SentenceChainX__Group__3__Impl : ( ( rule__SentenceChainX__Group_3__0 ) ) ;
    public final void rule__SentenceChainX__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5107:1: ( ( ( rule__SentenceChainX__Group_3__0 ) ) )
            // InternalNLX.g:5108:1: ( ( rule__SentenceChainX__Group_3__0 ) )
            {
            // InternalNLX.g:5108:1: ( ( rule__SentenceChainX__Group_3__0 ) )
            // InternalNLX.g:5109:2: ( rule__SentenceChainX__Group_3__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getGroup_3()); 
            }
            // InternalNLX.g:5110:2: ( rule__SentenceChainX__Group_3__0 )
            // InternalNLX.g:5110:3: rule__SentenceChainX__Group_3__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__Group_3__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group__3__Impl"


    // $ANTLR start "rule__SentenceChainX__Group_2__0"
    // InternalNLX.g:5119:1: rule__SentenceChainX__Group_2__0 : rule__SentenceChainX__Group_2__0__Impl rule__SentenceChainX__Group_2__1 ;
    public final void rule__SentenceChainX__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5123:1: ( rule__SentenceChainX__Group_2__0__Impl rule__SentenceChainX__Group_2__1 )
            // InternalNLX.g:5124:2: rule__SentenceChainX__Group_2__0__Impl rule__SentenceChainX__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__SentenceChainX__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group_2__0"


    // $ANTLR start "rule__SentenceChainX__Group_2__0__Impl"
    // InternalNLX.g:5131:1: rule__SentenceChainX__Group_2__0__Impl : ( ( rule__SentenceChainX__SeparatorsAssignment_2_0 ) ) ;
    public final void rule__SentenceChainX__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5135:1: ( ( ( rule__SentenceChainX__SeparatorsAssignment_2_0 ) ) )
            // InternalNLX.g:5136:1: ( ( rule__SentenceChainX__SeparatorsAssignment_2_0 ) )
            {
            // InternalNLX.g:5136:1: ( ( rule__SentenceChainX__SeparatorsAssignment_2_0 ) )
            // InternalNLX.g:5137:2: ( rule__SentenceChainX__SeparatorsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getSeparatorsAssignment_2_0()); 
            }
            // InternalNLX.g:5138:2: ( rule__SentenceChainX__SeparatorsAssignment_2_0 )
            // InternalNLX.g:5138:3: rule__SentenceChainX__SeparatorsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__SeparatorsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getSeparatorsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group_2__0__Impl"


    // $ANTLR start "rule__SentenceChainX__Group_2__1"
    // InternalNLX.g:5146:1: rule__SentenceChainX__Group_2__1 : rule__SentenceChainX__Group_2__1__Impl ;
    public final void rule__SentenceChainX__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5150:1: ( rule__SentenceChainX__Group_2__1__Impl )
            // InternalNLX.g:5151:2: rule__SentenceChainX__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group_2__1"


    // $ANTLR start "rule__SentenceChainX__Group_2__1__Impl"
    // InternalNLX.g:5157:1: rule__SentenceChainX__Group_2__1__Impl : ( ( rule__SentenceChainX__SentencesAssignment_2_1 ) ) ;
    public final void rule__SentenceChainX__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5161:1: ( ( ( rule__SentenceChainX__SentencesAssignment_2_1 ) ) )
            // InternalNLX.g:5162:1: ( ( rule__SentenceChainX__SentencesAssignment_2_1 ) )
            {
            // InternalNLX.g:5162:1: ( ( rule__SentenceChainX__SentencesAssignment_2_1 ) )
            // InternalNLX.g:5163:2: ( rule__SentenceChainX__SentencesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getSentencesAssignment_2_1()); 
            }
            // InternalNLX.g:5164:2: ( rule__SentenceChainX__SentencesAssignment_2_1 )
            // InternalNLX.g:5164:3: rule__SentenceChainX__SentencesAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__SentencesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getSentencesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group_2__1__Impl"


    // $ANTLR start "rule__SentenceChainX__Group_3__0"
    // InternalNLX.g:5173:1: rule__SentenceChainX__Group_3__0 : rule__SentenceChainX__Group_3__0__Impl ;
    public final void rule__SentenceChainX__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5177:1: ( rule__SentenceChainX__Group_3__0__Impl )
            // InternalNLX.g:5178:2: rule__SentenceChainX__Group_3__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group_3__0"


    // $ANTLR start "rule__SentenceChainX__Group_3__0__Impl"
    // InternalNLX.g:5184:1: rule__SentenceChainX__Group_3__0__Impl : ( ( rule__SentenceChainX__Alternatives_3_0 ) ) ;
    public final void rule__SentenceChainX__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5188:1: ( ( ( rule__SentenceChainX__Alternatives_3_0 ) ) )
            // InternalNLX.g:5189:1: ( ( rule__SentenceChainX__Alternatives_3_0 ) )
            {
            // InternalNLX.g:5189:1: ( ( rule__SentenceChainX__Alternatives_3_0 ) )
            // InternalNLX.g:5190:2: ( rule__SentenceChainX__Alternatives_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getAlternatives_3_0()); 
            }
            // InternalNLX.g:5191:2: ( rule__SentenceChainX__Alternatives_3_0 )
            // InternalNLX.g:5191:3: rule__SentenceChainX__Alternatives_3_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceChainX__Alternatives_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getAlternatives_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__Group_3__0__Impl"


    // $ANTLR start "rule__Sentence__Group__0"
    // InternalNLX.g:5200:1: rule__Sentence__Group__0 : rule__Sentence__Group__0__Impl rule__Sentence__Group__1 ;
    public final void rule__Sentence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5204:1: ( rule__Sentence__Group__0__Impl rule__Sentence__Group__1 )
            // InternalNLX.g:5205:2: rule__Sentence__Group__0__Impl rule__Sentence__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__Sentence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Sentence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__Group__0"


    // $ANTLR start "rule__Sentence__Group__0__Impl"
    // InternalNLX.g:5212:1: rule__Sentence__Group__0__Impl : ( () ) ;
    public final void rule__Sentence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5216:1: ( ( () ) )
            // InternalNLX.g:5217:1: ( () )
            {
            // InternalNLX.g:5217:1: ( () )
            // InternalNLX.g:5218:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceAccess().getSentenceAction_0()); 
            }
            // InternalNLX.g:5219:2: ()
            // InternalNLX.g:5219:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceAccess().getSentenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__Group__0__Impl"


    // $ANTLR start "rule__Sentence__Group__1"
    // InternalNLX.g:5227:1: rule__Sentence__Group__1 : rule__Sentence__Group__1__Impl rule__Sentence__Group__2 ;
    public final void rule__Sentence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5231:1: ( rule__Sentence__Group__1__Impl rule__Sentence__Group__2 )
            // InternalNLX.g:5232:2: rule__Sentence__Group__1__Impl rule__Sentence__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__Sentence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Sentence__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__Group__1"


    // $ANTLR start "rule__Sentence__Group__1__Impl"
    // InternalNLX.g:5239:1: rule__Sentence__Group__1__Impl : ( ( rule__Sentence__SubsentenceAssignment_1 ) ) ;
    public final void rule__Sentence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5243:1: ( ( ( rule__Sentence__SubsentenceAssignment_1 ) ) )
            // InternalNLX.g:5244:1: ( ( rule__Sentence__SubsentenceAssignment_1 ) )
            {
            // InternalNLX.g:5244:1: ( ( rule__Sentence__SubsentenceAssignment_1 ) )
            // InternalNLX.g:5245:2: ( rule__Sentence__SubsentenceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceAccess().getSubsentenceAssignment_1()); 
            }
            // InternalNLX.g:5246:2: ( rule__Sentence__SubsentenceAssignment_1 )
            // InternalNLX.g:5246:3: rule__Sentence__SubsentenceAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Sentence__SubsentenceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceAccess().getSubsentenceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__Group__1__Impl"


    // $ANTLR start "rule__Sentence__Group__2"
    // InternalNLX.g:5254:1: rule__Sentence__Group__2 : rule__Sentence__Group__2__Impl ;
    public final void rule__Sentence__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5258:1: ( rule__Sentence__Group__2__Impl )
            // InternalNLX.g:5259:2: rule__Sentence__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Sentence__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__Group__2"


    // $ANTLR start "rule__Sentence__Group__2__Impl"
    // InternalNLX.g:5265:1: rule__Sentence__Group__2__Impl : ( ( rule__Sentence__Group_2__0 )* ) ;
    public final void rule__Sentence__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5269:1: ( ( ( rule__Sentence__Group_2__0 )* ) )
            // InternalNLX.g:5270:1: ( ( rule__Sentence__Group_2__0 )* )
            {
            // InternalNLX.g:5270:1: ( ( rule__Sentence__Group_2__0 )* )
            // InternalNLX.g:5271:2: ( rule__Sentence__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceAccess().getGroup_2()); 
            }
            // InternalNLX.g:5272:2: ( rule__Sentence__Group_2__0 )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==RULE_KOMMA) ) {
                    int LA81_5 = input.LA(2);

                    if ( (synpred138_InternalNLX()) ) {
                        alt81=1;
                    }


                }


                switch (alt81) {
            	case 1 :
            	    // InternalNLX.g:5272:3: rule__Sentence__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    rule__Sentence__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__Group__2__Impl"


    // $ANTLR start "rule__Sentence__Group_2__0"
    // InternalNLX.g:5281:1: rule__Sentence__Group_2__0 : rule__Sentence__Group_2__0__Impl rule__Sentence__Group_2__1 ;
    public final void rule__Sentence__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5285:1: ( rule__Sentence__Group_2__0__Impl rule__Sentence__Group_2__1 )
            // InternalNLX.g:5286:2: rule__Sentence__Group_2__0__Impl rule__Sentence__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Sentence__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Sentence__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__Group_2__0"


    // $ANTLR start "rule__Sentence__Group_2__0__Impl"
    // InternalNLX.g:5293:1: rule__Sentence__Group_2__0__Impl : ( RULE_KOMMA ) ;
    public final void rule__Sentence__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5297:1: ( ( RULE_KOMMA ) )
            // InternalNLX.g:5298:1: ( RULE_KOMMA )
            {
            // InternalNLX.g:5298:1: ( RULE_KOMMA )
            // InternalNLX.g:5299:2: RULE_KOMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceAccess().getKOMMATerminalRuleCall_2_0()); 
            }
            match(input,RULE_KOMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceAccess().getKOMMATerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__Group_2__0__Impl"


    // $ANTLR start "rule__Sentence__Group_2__1"
    // InternalNLX.g:5308:1: rule__Sentence__Group_2__1 : rule__Sentence__Group_2__1__Impl ;
    public final void rule__Sentence__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5312:1: ( rule__Sentence__Group_2__1__Impl )
            // InternalNLX.g:5313:2: rule__Sentence__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Sentence__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__Group_2__1"


    // $ANTLR start "rule__Sentence__Group_2__1__Impl"
    // InternalNLX.g:5319:1: rule__Sentence__Group_2__1__Impl : ( ( rule__Sentence__SubsentenceAssignment_2_1 ) ) ;
    public final void rule__Sentence__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5323:1: ( ( ( rule__Sentence__SubsentenceAssignment_2_1 ) ) )
            // InternalNLX.g:5324:1: ( ( rule__Sentence__SubsentenceAssignment_2_1 ) )
            {
            // InternalNLX.g:5324:1: ( ( rule__Sentence__SubsentenceAssignment_2_1 ) )
            // InternalNLX.g:5325:2: ( rule__Sentence__SubsentenceAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceAccess().getSubsentenceAssignment_2_1()); 
            }
            // InternalNLX.g:5326:2: ( rule__Sentence__SubsentenceAssignment_2_1 )
            // InternalNLX.g:5326:3: rule__Sentence__SubsentenceAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Sentence__SubsentenceAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceAccess().getSubsentenceAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__Group_2__1__Impl"


    // $ANTLR start "rule__LineSentence__Group__0"
    // InternalNLX.g:5335:1: rule__LineSentence__Group__0 : rule__LineSentence__Group__0__Impl rule__LineSentence__Group__1 ;
    public final void rule__LineSentence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5339:1: ( rule__LineSentence__Group__0__Impl rule__LineSentence__Group__1 )
            // InternalNLX.g:5340:2: rule__LineSentence__Group__0__Impl rule__LineSentence__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__LineSentence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__Group__0"


    // $ANTLR start "rule__LineSentence__Group__0__Impl"
    // InternalNLX.g:5347:1: rule__LineSentence__Group__0__Impl : ( () ) ;
    public final void rule__LineSentence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5351:1: ( ( () ) )
            // InternalNLX.g:5352:1: ( () )
            {
            // InternalNLX.g:5352:1: ( () )
            // InternalNLX.g:5353:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceAccess().getSentenceAction_0()); 
            }
            // InternalNLX.g:5354:2: ()
            // InternalNLX.g:5354:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceAccess().getSentenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__Group__0__Impl"


    // $ANTLR start "rule__LineSentence__Group__1"
    // InternalNLX.g:5362:1: rule__LineSentence__Group__1 : rule__LineSentence__Group__1__Impl rule__LineSentence__Group__2 ;
    public final void rule__LineSentence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5366:1: ( rule__LineSentence__Group__1__Impl rule__LineSentence__Group__2 )
            // InternalNLX.g:5367:2: rule__LineSentence__Group__1__Impl rule__LineSentence__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__LineSentence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentence__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__Group__1"


    // $ANTLR start "rule__LineSentence__Group__1__Impl"
    // InternalNLX.g:5374:1: rule__LineSentence__Group__1__Impl : ( ( rule__LineSentence__SubsentenceAssignment_1 ) ) ;
    public final void rule__LineSentence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5378:1: ( ( ( rule__LineSentence__SubsentenceAssignment_1 ) ) )
            // InternalNLX.g:5379:1: ( ( rule__LineSentence__SubsentenceAssignment_1 ) )
            {
            // InternalNLX.g:5379:1: ( ( rule__LineSentence__SubsentenceAssignment_1 ) )
            // InternalNLX.g:5380:2: ( rule__LineSentence__SubsentenceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceAccess().getSubsentenceAssignment_1()); 
            }
            // InternalNLX.g:5381:2: ( rule__LineSentence__SubsentenceAssignment_1 )
            // InternalNLX.g:5381:3: rule__LineSentence__SubsentenceAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentence__SubsentenceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceAccess().getSubsentenceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__Group__1__Impl"


    // $ANTLR start "rule__LineSentence__Group__2"
    // InternalNLX.g:5389:1: rule__LineSentence__Group__2 : rule__LineSentence__Group__2__Impl ;
    public final void rule__LineSentence__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5393:1: ( rule__LineSentence__Group__2__Impl )
            // InternalNLX.g:5394:2: rule__LineSentence__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentence__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__Group__2"


    // $ANTLR start "rule__LineSentence__Group__2__Impl"
    // InternalNLX.g:5400:1: rule__LineSentence__Group__2__Impl : ( ( rule__LineSentence__Group_2__0 )* ) ;
    public final void rule__LineSentence__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5404:1: ( ( ( rule__LineSentence__Group_2__0 )* ) )
            // InternalNLX.g:5405:1: ( ( rule__LineSentence__Group_2__0 )* )
            {
            // InternalNLX.g:5405:1: ( ( rule__LineSentence__Group_2__0 )* )
            // InternalNLX.g:5406:2: ( rule__LineSentence__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceAccess().getGroup_2()); 
            }
            // InternalNLX.g:5407:2: ( rule__LineSentence__Group_2__0 )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==RULE_KOMMA) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalNLX.g:5407:3: rule__LineSentence__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    rule__LineSentence__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__Group__2__Impl"


    // $ANTLR start "rule__LineSentence__Group_2__0"
    // InternalNLX.g:5416:1: rule__LineSentence__Group_2__0 : rule__LineSentence__Group_2__0__Impl rule__LineSentence__Group_2__1 ;
    public final void rule__LineSentence__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5420:1: ( rule__LineSentence__Group_2__0__Impl rule__LineSentence__Group_2__1 )
            // InternalNLX.g:5421:2: rule__LineSentence__Group_2__0__Impl rule__LineSentence__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__LineSentence__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentence__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__Group_2__0"


    // $ANTLR start "rule__LineSentence__Group_2__0__Impl"
    // InternalNLX.g:5428:1: rule__LineSentence__Group_2__0__Impl : ( RULE_KOMMA ) ;
    public final void rule__LineSentence__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5432:1: ( ( RULE_KOMMA ) )
            // InternalNLX.g:5433:1: ( RULE_KOMMA )
            {
            // InternalNLX.g:5433:1: ( RULE_KOMMA )
            // InternalNLX.g:5434:2: RULE_KOMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceAccess().getKOMMATerminalRuleCall_2_0()); 
            }
            match(input,RULE_KOMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceAccess().getKOMMATerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__Group_2__0__Impl"


    // $ANTLR start "rule__LineSentence__Group_2__1"
    // InternalNLX.g:5443:1: rule__LineSentence__Group_2__1 : rule__LineSentence__Group_2__1__Impl ;
    public final void rule__LineSentence__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5447:1: ( rule__LineSentence__Group_2__1__Impl )
            // InternalNLX.g:5448:2: rule__LineSentence__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentence__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__Group_2__1"


    // $ANTLR start "rule__LineSentence__Group_2__1__Impl"
    // InternalNLX.g:5454:1: rule__LineSentence__Group_2__1__Impl : ( ( rule__LineSentence__SubsentenceAssignment_2_1 ) ) ;
    public final void rule__LineSentence__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5458:1: ( ( ( rule__LineSentence__SubsentenceAssignment_2_1 ) ) )
            // InternalNLX.g:5459:1: ( ( rule__LineSentence__SubsentenceAssignment_2_1 ) )
            {
            // InternalNLX.g:5459:1: ( ( rule__LineSentence__SubsentenceAssignment_2_1 ) )
            // InternalNLX.g:5460:2: ( rule__LineSentence__SubsentenceAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceAccess().getSubsentenceAssignment_2_1()); 
            }
            // InternalNLX.g:5461:2: ( rule__LineSentence__SubsentenceAssignment_2_1 )
            // InternalNLX.g:5461:3: rule__LineSentence__SubsentenceAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSentence__SubsentenceAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceAccess().getSubsentenceAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__Group_2__1__Impl"


    // $ANTLR start "rule__FreeSentence__Group__0"
    // InternalNLX.g:5470:1: rule__FreeSentence__Group__0 : rule__FreeSentence__Group__0__Impl rule__FreeSentence__Group__1 ;
    public final void rule__FreeSentence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5474:1: ( rule__FreeSentence__Group__0__Impl rule__FreeSentence__Group__1 )
            // InternalNLX.g:5475:2: rule__FreeSentence__Group__0__Impl rule__FreeSentence__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__FreeSentence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSentence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__Group__0"


    // $ANTLR start "rule__FreeSentence__Group__0__Impl"
    // InternalNLX.g:5482:1: rule__FreeSentence__Group__0__Impl : ( () ) ;
    public final void rule__FreeSentence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5486:1: ( ( () ) )
            // InternalNLX.g:5487:1: ( () )
            {
            // InternalNLX.g:5487:1: ( () )
            // InternalNLX.g:5488:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSentenceAccess().getSentenceAction_0()); 
            }
            // InternalNLX.g:5489:2: ()
            // InternalNLX.g:5489:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSentenceAccess().getSentenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__Group__0__Impl"


    // $ANTLR start "rule__FreeSentence__Group__1"
    // InternalNLX.g:5497:1: rule__FreeSentence__Group__1 : rule__FreeSentence__Group__1__Impl rule__FreeSentence__Group__2 ;
    public final void rule__FreeSentence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5501:1: ( rule__FreeSentence__Group__1__Impl rule__FreeSentence__Group__2 )
            // InternalNLX.g:5502:2: rule__FreeSentence__Group__1__Impl rule__FreeSentence__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__FreeSentence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSentence__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__Group__1"


    // $ANTLR start "rule__FreeSentence__Group__1__Impl"
    // InternalNLX.g:5509:1: rule__FreeSentence__Group__1__Impl : ( ( rule__FreeSentence__SubsentenceAssignment_1 ) ) ;
    public final void rule__FreeSentence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5513:1: ( ( ( rule__FreeSentence__SubsentenceAssignment_1 ) ) )
            // InternalNLX.g:5514:1: ( ( rule__FreeSentence__SubsentenceAssignment_1 ) )
            {
            // InternalNLX.g:5514:1: ( ( rule__FreeSentence__SubsentenceAssignment_1 ) )
            // InternalNLX.g:5515:2: ( rule__FreeSentence__SubsentenceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSentenceAccess().getSubsentenceAssignment_1()); 
            }
            // InternalNLX.g:5516:2: ( rule__FreeSentence__SubsentenceAssignment_1 )
            // InternalNLX.g:5516:3: rule__FreeSentence__SubsentenceAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSentence__SubsentenceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSentenceAccess().getSubsentenceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__Group__1__Impl"


    // $ANTLR start "rule__FreeSentence__Group__2"
    // InternalNLX.g:5524:1: rule__FreeSentence__Group__2 : rule__FreeSentence__Group__2__Impl ;
    public final void rule__FreeSentence__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5528:1: ( rule__FreeSentence__Group__2__Impl )
            // InternalNLX.g:5529:2: rule__FreeSentence__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSentence__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__Group__2"


    // $ANTLR start "rule__FreeSentence__Group__2__Impl"
    // InternalNLX.g:5535:1: rule__FreeSentence__Group__2__Impl : ( ( rule__FreeSentence__Group_2__0 )* ) ;
    public final void rule__FreeSentence__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5539:1: ( ( ( rule__FreeSentence__Group_2__0 )* ) )
            // InternalNLX.g:5540:1: ( ( rule__FreeSentence__Group_2__0 )* )
            {
            // InternalNLX.g:5540:1: ( ( rule__FreeSentence__Group_2__0 )* )
            // InternalNLX.g:5541:2: ( rule__FreeSentence__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSentenceAccess().getGroup_2()); 
            }
            // InternalNLX.g:5542:2: ( rule__FreeSentence__Group_2__0 )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==RULE_KOMMA) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalNLX.g:5542:3: rule__FreeSentence__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    rule__FreeSentence__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSentenceAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__Group__2__Impl"


    // $ANTLR start "rule__FreeSentence__Group_2__0"
    // InternalNLX.g:5551:1: rule__FreeSentence__Group_2__0 : rule__FreeSentence__Group_2__0__Impl rule__FreeSentence__Group_2__1 ;
    public final void rule__FreeSentence__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5555:1: ( rule__FreeSentence__Group_2__0__Impl rule__FreeSentence__Group_2__1 )
            // InternalNLX.g:5556:2: rule__FreeSentence__Group_2__0__Impl rule__FreeSentence__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__FreeSentence__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSentence__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__Group_2__0"


    // $ANTLR start "rule__FreeSentence__Group_2__0__Impl"
    // InternalNLX.g:5563:1: rule__FreeSentence__Group_2__0__Impl : ( RULE_KOMMA ) ;
    public final void rule__FreeSentence__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5567:1: ( ( RULE_KOMMA ) )
            // InternalNLX.g:5568:1: ( RULE_KOMMA )
            {
            // InternalNLX.g:5568:1: ( RULE_KOMMA )
            // InternalNLX.g:5569:2: RULE_KOMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSentenceAccess().getKOMMATerminalRuleCall_2_0()); 
            }
            match(input,RULE_KOMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSentenceAccess().getKOMMATerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__Group_2__0__Impl"


    // $ANTLR start "rule__FreeSentence__Group_2__1"
    // InternalNLX.g:5578:1: rule__FreeSentence__Group_2__1 : rule__FreeSentence__Group_2__1__Impl ;
    public final void rule__FreeSentence__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5582:1: ( rule__FreeSentence__Group_2__1__Impl )
            // InternalNLX.g:5583:2: rule__FreeSentence__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSentence__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__Group_2__1"


    // $ANTLR start "rule__FreeSentence__Group_2__1__Impl"
    // InternalNLX.g:5589:1: rule__FreeSentence__Group_2__1__Impl : ( ( rule__FreeSentence__SubsentenceAssignment_2_1 ) ) ;
    public final void rule__FreeSentence__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5593:1: ( ( ( rule__FreeSentence__SubsentenceAssignment_2_1 ) ) )
            // InternalNLX.g:5594:1: ( ( rule__FreeSentence__SubsentenceAssignment_2_1 ) )
            {
            // InternalNLX.g:5594:1: ( ( rule__FreeSentence__SubsentenceAssignment_2_1 ) )
            // InternalNLX.g:5595:2: ( rule__FreeSentence__SubsentenceAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSentenceAccess().getSubsentenceAssignment_2_1()); 
            }
            // InternalNLX.g:5596:2: ( rule__FreeSentence__SubsentenceAssignment_2_1 )
            // InternalNLX.g:5596:3: rule__FreeSentence__SubsentenceAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSentence__SubsentenceAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSentenceAccess().getSubsentenceAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__Group_2__1__Impl"


    // $ANTLR start "rule__SentenceX__Group__0"
    // InternalNLX.g:5605:1: rule__SentenceX__Group__0 : rule__SentenceX__Group__0__Impl rule__SentenceX__Group__1 ;
    public final void rule__SentenceX__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5609:1: ( rule__SentenceX__Group__0__Impl rule__SentenceX__Group__1 )
            // InternalNLX.g:5610:2: rule__SentenceX__Group__0__Impl rule__SentenceX__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__SentenceX__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceX__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__Group__0"


    // $ANTLR start "rule__SentenceX__Group__0__Impl"
    // InternalNLX.g:5617:1: rule__SentenceX__Group__0__Impl : ( () ) ;
    public final void rule__SentenceX__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5621:1: ( ( () ) )
            // InternalNLX.g:5622:1: ( () )
            {
            // InternalNLX.g:5622:1: ( () )
            // InternalNLX.g:5623:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceXAccess().getSentenceAction_0()); 
            }
            // InternalNLX.g:5624:2: ()
            // InternalNLX.g:5624:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceXAccess().getSentenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__Group__0__Impl"


    // $ANTLR start "rule__SentenceX__Group__1"
    // InternalNLX.g:5632:1: rule__SentenceX__Group__1 : rule__SentenceX__Group__1__Impl rule__SentenceX__Group__2 ;
    public final void rule__SentenceX__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5636:1: ( rule__SentenceX__Group__1__Impl rule__SentenceX__Group__2 )
            // InternalNLX.g:5637:2: rule__SentenceX__Group__1__Impl rule__SentenceX__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__SentenceX__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceX__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__Group__1"


    // $ANTLR start "rule__SentenceX__Group__1__Impl"
    // InternalNLX.g:5644:1: rule__SentenceX__Group__1__Impl : ( ( rule__SentenceX__SubsentenceAssignment_1 ) ) ;
    public final void rule__SentenceX__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5648:1: ( ( ( rule__SentenceX__SubsentenceAssignment_1 ) ) )
            // InternalNLX.g:5649:1: ( ( rule__SentenceX__SubsentenceAssignment_1 ) )
            {
            // InternalNLX.g:5649:1: ( ( rule__SentenceX__SubsentenceAssignment_1 ) )
            // InternalNLX.g:5650:2: ( rule__SentenceX__SubsentenceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceXAccess().getSubsentenceAssignment_1()); 
            }
            // InternalNLX.g:5651:2: ( rule__SentenceX__SubsentenceAssignment_1 )
            // InternalNLX.g:5651:3: rule__SentenceX__SubsentenceAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceX__SubsentenceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceXAccess().getSubsentenceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__Group__1__Impl"


    // $ANTLR start "rule__SentenceX__Group__2"
    // InternalNLX.g:5659:1: rule__SentenceX__Group__2 : rule__SentenceX__Group__2__Impl ;
    public final void rule__SentenceX__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5663:1: ( rule__SentenceX__Group__2__Impl )
            // InternalNLX.g:5664:2: rule__SentenceX__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceX__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__Group__2"


    // $ANTLR start "rule__SentenceX__Group__2__Impl"
    // InternalNLX.g:5670:1: rule__SentenceX__Group__2__Impl : ( ( rule__SentenceX__Group_2__0 )* ) ;
    public final void rule__SentenceX__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5674:1: ( ( ( rule__SentenceX__Group_2__0 )* ) )
            // InternalNLX.g:5675:1: ( ( rule__SentenceX__Group_2__0 )* )
            {
            // InternalNLX.g:5675:1: ( ( rule__SentenceX__Group_2__0 )* )
            // InternalNLX.g:5676:2: ( rule__SentenceX__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceXAccess().getGroup_2()); 
            }
            // InternalNLX.g:5677:2: ( rule__SentenceX__Group_2__0 )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==RULE_KOMMA) ) {
                    int LA84_5 = input.LA(2);

                    if ( (synpred141_InternalNLX()) ) {
                        alt84=1;
                    }


                }


                switch (alt84) {
            	case 1 :
            	    // InternalNLX.g:5677:3: rule__SentenceX__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    rule__SentenceX__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceXAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__Group__2__Impl"


    // $ANTLR start "rule__SentenceX__Group_2__0"
    // InternalNLX.g:5686:1: rule__SentenceX__Group_2__0 : rule__SentenceX__Group_2__0__Impl rule__SentenceX__Group_2__1 ;
    public final void rule__SentenceX__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5690:1: ( rule__SentenceX__Group_2__0__Impl rule__SentenceX__Group_2__1 )
            // InternalNLX.g:5691:2: rule__SentenceX__Group_2__0__Impl rule__SentenceX__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__SentenceX__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceX__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__Group_2__0"


    // $ANTLR start "rule__SentenceX__Group_2__0__Impl"
    // InternalNLX.g:5698:1: rule__SentenceX__Group_2__0__Impl : ( RULE_KOMMA ) ;
    public final void rule__SentenceX__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5702:1: ( ( RULE_KOMMA ) )
            // InternalNLX.g:5703:1: ( RULE_KOMMA )
            {
            // InternalNLX.g:5703:1: ( RULE_KOMMA )
            // InternalNLX.g:5704:2: RULE_KOMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceXAccess().getKOMMATerminalRuleCall_2_0()); 
            }
            match(input,RULE_KOMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceXAccess().getKOMMATerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__Group_2__0__Impl"


    // $ANTLR start "rule__SentenceX__Group_2__1"
    // InternalNLX.g:5713:1: rule__SentenceX__Group_2__1 : rule__SentenceX__Group_2__1__Impl ;
    public final void rule__SentenceX__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5717:1: ( rule__SentenceX__Group_2__1__Impl )
            // InternalNLX.g:5718:2: rule__SentenceX__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceX__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__Group_2__1"


    // $ANTLR start "rule__SentenceX__Group_2__1__Impl"
    // InternalNLX.g:5724:1: rule__SentenceX__Group_2__1__Impl : ( ( rule__SentenceX__SubsentenceAssignment_2_1 ) ) ;
    public final void rule__SentenceX__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5728:1: ( ( ( rule__SentenceX__SubsentenceAssignment_2_1 ) ) )
            // InternalNLX.g:5729:1: ( ( rule__SentenceX__SubsentenceAssignment_2_1 ) )
            {
            // InternalNLX.g:5729:1: ( ( rule__SentenceX__SubsentenceAssignment_2_1 ) )
            // InternalNLX.g:5730:2: ( rule__SentenceX__SubsentenceAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceXAccess().getSubsentenceAssignment_2_1()); 
            }
            // InternalNLX.g:5731:2: ( rule__SentenceX__SubsentenceAssignment_2_1 )
            // InternalNLX.g:5731:3: rule__SentenceX__SubsentenceAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SentenceX__SubsentenceAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceXAccess().getSubsentenceAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__Group_2__1__Impl"


    // $ANTLR start "rule__ListSentence__Group__0"
    // InternalNLX.g:5740:1: rule__ListSentence__Group__0 : rule__ListSentence__Group__0__Impl rule__ListSentence__Group__1 ;
    public final void rule__ListSentence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5744:1: ( rule__ListSentence__Group__0__Impl rule__ListSentence__Group__1 )
            // InternalNLX.g:5745:2: rule__ListSentence__Group__0__Impl rule__ListSentence__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__ListSentence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListSentence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListSentence__Group__0"


    // $ANTLR start "rule__ListSentence__Group__0__Impl"
    // InternalNLX.g:5752:1: rule__ListSentence__Group__0__Impl : ( ( rule__ListSentence__ListpointAssignment_0 ) ) ;
    public final void rule__ListSentence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5756:1: ( ( ( rule__ListSentence__ListpointAssignment_0 ) ) )
            // InternalNLX.g:5757:1: ( ( rule__ListSentence__ListpointAssignment_0 ) )
            {
            // InternalNLX.g:5757:1: ( ( rule__ListSentence__ListpointAssignment_0 ) )
            // InternalNLX.g:5758:2: ( rule__ListSentence__ListpointAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListSentenceAccess().getListpointAssignment_0()); 
            }
            // InternalNLX.g:5759:2: ( rule__ListSentence__ListpointAssignment_0 )
            // InternalNLX.g:5759:3: rule__ListSentence__ListpointAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListSentence__ListpointAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListSentenceAccess().getListpointAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListSentence__Group__0__Impl"


    // $ANTLR start "rule__ListSentence__Group__1"
    // InternalNLX.g:5767:1: rule__ListSentence__Group__1 : rule__ListSentence__Group__1__Impl ;
    public final void rule__ListSentence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5771:1: ( rule__ListSentence__Group__1__Impl )
            // InternalNLX.g:5772:2: rule__ListSentence__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListSentence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListSentence__Group__1"


    // $ANTLR start "rule__ListSentence__Group__1__Impl"
    // InternalNLX.g:5778:1: rule__ListSentence__Group__1__Impl : ( ( rule__ListSentence__Alternatives_1 ) ) ;
    public final void rule__ListSentence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5782:1: ( ( ( rule__ListSentence__Alternatives_1 ) ) )
            // InternalNLX.g:5783:1: ( ( rule__ListSentence__Alternatives_1 ) )
            {
            // InternalNLX.g:5783:1: ( ( rule__ListSentence__Alternatives_1 ) )
            // InternalNLX.g:5784:2: ( rule__ListSentence__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListSentenceAccess().getAlternatives_1()); 
            }
            // InternalNLX.g:5785:2: ( rule__ListSentence__Alternatives_1 )
            // InternalNLX.g:5785:3: rule__ListSentence__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListSentence__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListSentenceAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListSentence__Group__1__Impl"


    // $ANTLR start "rule__ChapterSentence__Group__0"
    // InternalNLX.g:5794:1: rule__ChapterSentence__Group__0 : rule__ChapterSentence__Group__0__Impl rule__ChapterSentence__Group__1 ;
    public final void rule__ChapterSentence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5798:1: ( rule__ChapterSentence__Group__0__Impl rule__ChapterSentence__Group__1 )
            // InternalNLX.g:5799:2: rule__ChapterSentence__Group__0__Impl rule__ChapterSentence__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__ChapterSentence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterSentence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterSentence__Group__0"


    // $ANTLR start "rule__ChapterSentence__Group__0__Impl"
    // InternalNLX.g:5806:1: rule__ChapterSentence__Group__0__Impl : ( ( rule__ChapterSentence__Alternatives_0 ) ) ;
    public final void rule__ChapterSentence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5810:1: ( ( ( rule__ChapterSentence__Alternatives_0 ) ) )
            // InternalNLX.g:5811:1: ( ( rule__ChapterSentence__Alternatives_0 ) )
            {
            // InternalNLX.g:5811:1: ( ( rule__ChapterSentence__Alternatives_0 ) )
            // InternalNLX.g:5812:2: ( rule__ChapterSentence__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterSentenceAccess().getAlternatives_0()); 
            }
            // InternalNLX.g:5813:2: ( rule__ChapterSentence__Alternatives_0 )
            // InternalNLX.g:5813:3: rule__ChapterSentence__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterSentence__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterSentenceAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterSentence__Group__0__Impl"


    // $ANTLR start "rule__ChapterSentence__Group__1"
    // InternalNLX.g:5821:1: rule__ChapterSentence__Group__1 : rule__ChapterSentence__Group__1__Impl ;
    public final void rule__ChapterSentence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5825:1: ( rule__ChapterSentence__Group__1__Impl )
            // InternalNLX.g:5826:2: rule__ChapterSentence__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterSentence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterSentence__Group__1"


    // $ANTLR start "rule__ChapterSentence__Group__1__Impl"
    // InternalNLX.g:5832:1: rule__ChapterSentence__Group__1__Impl : ( ( rule__ChapterSentence__HeadlineAssignment_1 ) ) ;
    public final void rule__ChapterSentence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5836:1: ( ( ( rule__ChapterSentence__HeadlineAssignment_1 ) ) )
            // InternalNLX.g:5837:1: ( ( rule__ChapterSentence__HeadlineAssignment_1 ) )
            {
            // InternalNLX.g:5837:1: ( ( rule__ChapterSentence__HeadlineAssignment_1 ) )
            // InternalNLX.g:5838:2: ( rule__ChapterSentence__HeadlineAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterSentenceAccess().getHeadlineAssignment_1()); 
            }
            // InternalNLX.g:5839:2: ( rule__ChapterSentence__HeadlineAssignment_1 )
            // InternalNLX.g:5839:3: rule__ChapterSentence__HeadlineAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterSentence__HeadlineAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterSentenceAccess().getHeadlineAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterSentence__Group__1__Impl"


    // $ANTLR start "rule__SubSentence__Group__0"
    // InternalNLX.g:5848:1: rule__SubSentence__Group__0 : rule__SubSentence__Group__0__Impl rule__SubSentence__Group__1 ;
    public final void rule__SubSentence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5852:1: ( rule__SubSentence__Group__0__Impl rule__SubSentence__Group__1 )
            // InternalNLX.g:5853:2: rule__SubSentence__Group__0__Impl rule__SubSentence__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__SubSentence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group__0"


    // $ANTLR start "rule__SubSentence__Group__0__Impl"
    // InternalNLX.g:5860:1: rule__SubSentence__Group__0__Impl : ( () ) ;
    public final void rule__SubSentence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5864:1: ( ( () ) )
            // InternalNLX.g:5865:1: ( () )
            {
            // InternalNLX.g:5865:1: ( () )
            // InternalNLX.g:5866:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getSubSentenceAction_0()); 
            }
            // InternalNLX.g:5867:2: ()
            // InternalNLX.g:5867:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getSubSentenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group__0__Impl"


    // $ANTLR start "rule__SubSentence__Group__1"
    // InternalNLX.g:5875:1: rule__SubSentence__Group__1 : rule__SubSentence__Group__1__Impl rule__SubSentence__Group__2 ;
    public final void rule__SubSentence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5879:1: ( rule__SubSentence__Group__1__Impl rule__SubSentence__Group__2 )
            // InternalNLX.g:5880:2: rule__SubSentence__Group__1__Impl rule__SubSentence__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SubSentence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group__1"


    // $ANTLR start "rule__SubSentence__Group__1__Impl"
    // InternalNLX.g:5887:1: rule__SubSentence__Group__1__Impl : ( ( rule__SubSentence__Alternatives_1 ) ) ;
    public final void rule__SubSentence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5891:1: ( ( ( rule__SubSentence__Alternatives_1 ) ) )
            // InternalNLX.g:5892:1: ( ( rule__SubSentence__Alternatives_1 ) )
            {
            // InternalNLX.g:5892:1: ( ( rule__SubSentence__Alternatives_1 ) )
            // InternalNLX.g:5893:2: ( rule__SubSentence__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getAlternatives_1()); 
            }
            // InternalNLX.g:5894:2: ( rule__SubSentence__Alternatives_1 )
            // InternalNLX.g:5894:3: rule__SubSentence__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group__1__Impl"


    // $ANTLR start "rule__SubSentence__Group__2"
    // InternalNLX.g:5902:1: rule__SubSentence__Group__2 : rule__SubSentence__Group__2__Impl rule__SubSentence__Group__3 ;
    public final void rule__SubSentence__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5906:1: ( rule__SubSentence__Group__2__Impl rule__SubSentence__Group__3 )
            // InternalNLX.g:5907:2: rule__SubSentence__Group__2__Impl rule__SubSentence__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SubSentence__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group__2"


    // $ANTLR start "rule__SubSentence__Group__2__Impl"
    // InternalNLX.g:5914:1: rule__SubSentence__Group__2__Impl : ( ( rule__SubSentence__Group_2__0 )* ) ;
    public final void rule__SubSentence__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5918:1: ( ( ( rule__SubSentence__Group_2__0 )* ) )
            // InternalNLX.g:5919:1: ( ( rule__SubSentence__Group_2__0 )* )
            {
            // InternalNLX.g:5919:1: ( ( rule__SubSentence__Group_2__0 )* )
            // InternalNLX.g:5920:2: ( rule__SubSentence__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getGroup_2()); 
            }
            // InternalNLX.g:5921:2: ( rule__SubSentence__Group_2__0 )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==RULE_SPACE) ) {
                    int LA85_1 = input.LA(2);

                    if ( (synpred142_InternalNLX()) ) {
                        alt85=1;
                    }


                }
                else if ( (LA85_0==RULE_NEWLINE) ) {
                    int LA85_6 = input.LA(2);

                    if ( (synpred142_InternalNLX()) ) {
                        alt85=1;
                    }


                }


                switch (alt85) {
            	case 1 :
            	    // InternalNLX.g:5921:3: rule__SubSentence__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    rule__SubSentence__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group__2__Impl"


    // $ANTLR start "rule__SubSentence__Group__3"
    // InternalNLX.g:5929:1: rule__SubSentence__Group__3 : rule__SubSentence__Group__3__Impl ;
    public final void rule__SubSentence__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5933:1: ( rule__SubSentence__Group__3__Impl )
            // InternalNLX.g:5934:2: rule__SubSentence__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group__3"


    // $ANTLR start "rule__SubSentence__Group__3__Impl"
    // InternalNLX.g:5940:1: rule__SubSentence__Group__3__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__SubSentence__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5944:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:5945:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:5945:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:5946:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_3()); 
            }
            // InternalNLX.g:5947:2: ( RULE_SPACE )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==RULE_SPACE) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalNLX.g:5947:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group__3__Impl"


    // $ANTLR start "rule__SubSentence__Group_1_0__0"
    // InternalNLX.g:5956:1: rule__SubSentence__Group_1_0__0 : rule__SubSentence__Group_1_0__0__Impl rule__SubSentence__Group_1_0__1 ;
    public final void rule__SubSentence__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5960:1: ( rule__SubSentence__Group_1_0__0__Impl rule__SubSentence__Group_1_0__1 )
            // InternalNLX.g:5961:2: rule__SubSentence__Group_1_0__0__Impl rule__SubSentence__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__SubSentence__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_0__0"


    // $ANTLR start "rule__SubSentence__Group_1_0__0__Impl"
    // InternalNLX.g:5968:1: rule__SubSentence__Group_1_0__0__Impl : ( ( rule__SubSentence__ElementsAssignment_1_0_0 ) ) ;
    public final void rule__SubSentence__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5972:1: ( ( ( rule__SubSentence__ElementsAssignment_1_0_0 ) ) )
            // InternalNLX.g:5973:1: ( ( rule__SubSentence__ElementsAssignment_1_0_0 ) )
            {
            // InternalNLX.g:5973:1: ( ( rule__SubSentence__ElementsAssignment_1_0_0 ) )
            // InternalNLX.g:5974:2: ( rule__SubSentence__ElementsAssignment_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsAssignment_1_0_0()); 
            }
            // InternalNLX.g:5975:2: ( rule__SubSentence__ElementsAssignment_1_0_0 )
            // InternalNLX.g:5975:3: rule__SubSentence__ElementsAssignment_1_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__ElementsAssignment_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsAssignment_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_0__0__Impl"


    // $ANTLR start "rule__SubSentence__Group_1_0__1"
    // InternalNLX.g:5983:1: rule__SubSentence__Group_1_0__1 : rule__SubSentence__Group_1_0__1__Impl ;
    public final void rule__SubSentence__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5987:1: ( rule__SubSentence__Group_1_0__1__Impl )
            // InternalNLX.g:5988:2: rule__SubSentence__Group_1_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_0__1"


    // $ANTLR start "rule__SubSentence__Group_1_0__1__Impl"
    // InternalNLX.g:5994:1: rule__SubSentence__Group_1_0__1__Impl : ( ( rule__SubSentence__Group_1_0_1__0 )* ) ;
    public final void rule__SubSentence__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:5998:1: ( ( ( rule__SubSentence__Group_1_0_1__0 )* ) )
            // InternalNLX.g:5999:1: ( ( rule__SubSentence__Group_1_0_1__0 )* )
            {
            // InternalNLX.g:5999:1: ( ( rule__SubSentence__Group_1_0_1__0 )* )
            // InternalNLX.g:6000:2: ( rule__SubSentence__Group_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getGroup_1_0_1()); 
            }
            // InternalNLX.g:6001:2: ( rule__SubSentence__Group_1_0_1__0 )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==RULE_SPACE) ) {
                    int LA87_1 = input.LA(2);

                    if ( ((LA87_1>=RULE_HASH && LA87_1<=RULE_INT)||(LA87_1>=RULE_MULTI && LA87_1<=RULE_MINUS)||LA87_1==RULE_DOT||(LA87_1>=RULE_ID && LA87_1<=RULE_DOUBLE_DOT)||(LA87_1>=RULE_HEX_NUMBER && LA87_1<=RULE_TRIPLE_DOT)||(LA87_1>=RULE_BR_O && LA87_1<=RULE_EXBR_O)||LA87_1==RULE_EXBRC_O||(LA87_1>=RULE_CURRENCY && LA87_1<=RULE_AT)) ) {
                        alt87=1;
                    }


                }


                switch (alt87) {
            	case 1 :
            	    // InternalNLX.g:6001:3: rule__SubSentence__Group_1_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    rule__SubSentence__Group_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getGroup_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_0__1__Impl"


    // $ANTLR start "rule__SubSentence__Group_1_0_1__0"
    // InternalNLX.g:6010:1: rule__SubSentence__Group_1_0_1__0 : rule__SubSentence__Group_1_0_1__0__Impl rule__SubSentence__Group_1_0_1__1 ;
    public final void rule__SubSentence__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6014:1: ( rule__SubSentence__Group_1_0_1__0__Impl rule__SubSentence__Group_1_0_1__1 )
            // InternalNLX.g:6015:2: rule__SubSentence__Group_1_0_1__0__Impl rule__SubSentence__Group_1_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__SubSentence__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_0_1__0"


    // $ANTLR start "rule__SubSentence__Group_1_0_1__0__Impl"
    // InternalNLX.g:6022:1: rule__SubSentence__Group_1_0_1__0__Impl : ( RULE_SPACE ) ;
    public final void rule__SubSentence__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6026:1: ( ( RULE_SPACE ) )
            // InternalNLX.g:6027:1: ( RULE_SPACE )
            {
            // InternalNLX.g:6027:1: ( RULE_SPACE )
            // InternalNLX.g:6028:2: RULE_SPACE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_1_0_1_0()); 
            }
            match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__SubSentence__Group_1_0_1__1"
    // InternalNLX.g:6037:1: rule__SubSentence__Group_1_0_1__1 : rule__SubSentence__Group_1_0_1__1__Impl ;
    public final void rule__SubSentence__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6041:1: ( rule__SubSentence__Group_1_0_1__1__Impl )
            // InternalNLX.g:6042:2: rule__SubSentence__Group_1_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_0_1__1"


    // $ANTLR start "rule__SubSentence__Group_1_0_1__1__Impl"
    // InternalNLX.g:6048:1: rule__SubSentence__Group_1_0_1__1__Impl : ( ( rule__SubSentence__ElementsAssignment_1_0_1_1 ) ) ;
    public final void rule__SubSentence__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6052:1: ( ( ( rule__SubSentence__ElementsAssignment_1_0_1_1 ) ) )
            // InternalNLX.g:6053:1: ( ( rule__SubSentence__ElementsAssignment_1_0_1_1 ) )
            {
            // InternalNLX.g:6053:1: ( ( rule__SubSentence__ElementsAssignment_1_0_1_1 ) )
            // InternalNLX.g:6054:2: ( rule__SubSentence__ElementsAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsAssignment_1_0_1_1()); 
            }
            // InternalNLX.g:6055:2: ( rule__SubSentence__ElementsAssignment_1_0_1_1 )
            // InternalNLX.g:6055:3: rule__SubSentence__ElementsAssignment_1_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__ElementsAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__SubSentence__Group_1_1__0"
    // InternalNLX.g:6064:1: rule__SubSentence__Group_1_1__0 : rule__SubSentence__Group_1_1__0__Impl rule__SubSentence__Group_1_1__1 ;
    public final void rule__SubSentence__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6068:1: ( rule__SubSentence__Group_1_1__0__Impl rule__SubSentence__Group_1_1__1 )
            // InternalNLX.g:6069:2: rule__SubSentence__Group_1_1__0__Impl rule__SubSentence__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__SubSentence__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_1__0"


    // $ANTLR start "rule__SubSentence__Group_1_1__0__Impl"
    // InternalNLX.g:6076:1: rule__SubSentence__Group_1_1__0__Impl : ( ( rule__SubSentence__ElementsAssignment_1_1_0 ) ) ;
    public final void rule__SubSentence__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6080:1: ( ( ( rule__SubSentence__ElementsAssignment_1_1_0 ) ) )
            // InternalNLX.g:6081:1: ( ( rule__SubSentence__ElementsAssignment_1_1_0 ) )
            {
            // InternalNLX.g:6081:1: ( ( rule__SubSentence__ElementsAssignment_1_1_0 ) )
            // InternalNLX.g:6082:2: ( rule__SubSentence__ElementsAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsAssignment_1_1_0()); 
            }
            // InternalNLX.g:6083:2: ( rule__SubSentence__ElementsAssignment_1_1_0 )
            // InternalNLX.g:6083:3: rule__SubSentence__ElementsAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__ElementsAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_1__0__Impl"


    // $ANTLR start "rule__SubSentence__Group_1_1__1"
    // InternalNLX.g:6091:1: rule__SubSentence__Group_1_1__1 : rule__SubSentence__Group_1_1__1__Impl ;
    public final void rule__SubSentence__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6095:1: ( rule__SubSentence__Group_1_1__1__Impl )
            // InternalNLX.g:6096:2: rule__SubSentence__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_1__1"


    // $ANTLR start "rule__SubSentence__Group_1_1__1__Impl"
    // InternalNLX.g:6102:1: rule__SubSentence__Group_1_1__1__Impl : ( ( ( rule__SubSentence__Group_1_1_1__0 ) ) ( ( rule__SubSentence__Group_1_1_1__0 )* ) ) ;
    public final void rule__SubSentence__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6106:1: ( ( ( ( rule__SubSentence__Group_1_1_1__0 ) ) ( ( rule__SubSentence__Group_1_1_1__0 )* ) ) )
            // InternalNLX.g:6107:1: ( ( ( rule__SubSentence__Group_1_1_1__0 ) ) ( ( rule__SubSentence__Group_1_1_1__0 )* ) )
            {
            // InternalNLX.g:6107:1: ( ( ( rule__SubSentence__Group_1_1_1__0 ) ) ( ( rule__SubSentence__Group_1_1_1__0 )* ) )
            // InternalNLX.g:6108:2: ( ( rule__SubSentence__Group_1_1_1__0 ) ) ( ( rule__SubSentence__Group_1_1_1__0 )* )
            {
            // InternalNLX.g:6108:2: ( ( rule__SubSentence__Group_1_1_1__0 ) )
            // InternalNLX.g:6109:3: ( rule__SubSentence__Group_1_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getGroup_1_1_1()); 
            }
            // InternalNLX.g:6110:3: ( rule__SubSentence__Group_1_1_1__0 )
            // InternalNLX.g:6110:4: rule__SubSentence__Group_1_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__SubSentence__Group_1_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getGroup_1_1_1()); 
            }

            }

            // InternalNLX.g:6113:2: ( ( rule__SubSentence__Group_1_1_1__0 )* )
            // InternalNLX.g:6114:3: ( rule__SubSentence__Group_1_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getGroup_1_1_1()); 
            }
            // InternalNLX.g:6115:3: ( rule__SubSentence__Group_1_1_1__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==RULE_SPACE) ) {
                    int LA88_1 = input.LA(2);

                    if ( ((LA88_1>=RULE_HASH && LA88_1<=RULE_INT)||(LA88_1>=RULE_MULTI && LA88_1<=RULE_MINUS)||LA88_1==RULE_DOT||(LA88_1>=RULE_ID && LA88_1<=RULE_DOUBLE_DOT)||(LA88_1>=RULE_HEX_NUMBER && LA88_1<=RULE_TRIPLE_DOT)||(LA88_1>=RULE_BR_O && LA88_1<=RULE_EXBR_O)||LA88_1==RULE_EXBRC_O||(LA88_1>=RULE_CURRENCY && LA88_1<=RULE_AT)) ) {
                        alt88=1;
                    }


                }


                switch (alt88) {
            	case 1 :
            	    // InternalNLX.g:6115:4: rule__SubSentence__Group_1_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    rule__SubSentence__Group_1_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getGroup_1_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_1__1__Impl"


    // $ANTLR start "rule__SubSentence__Group_1_1_1__0"
    // InternalNLX.g:6125:1: rule__SubSentence__Group_1_1_1__0 : rule__SubSentence__Group_1_1_1__0__Impl rule__SubSentence__Group_1_1_1__1 ;
    public final void rule__SubSentence__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6129:1: ( rule__SubSentence__Group_1_1_1__0__Impl rule__SubSentence__Group_1_1_1__1 )
            // InternalNLX.g:6130:2: rule__SubSentence__Group_1_1_1__0__Impl rule__SubSentence__Group_1_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__SubSentence__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_1_1__0"


    // $ANTLR start "rule__SubSentence__Group_1_1_1__0__Impl"
    // InternalNLX.g:6137:1: rule__SubSentence__Group_1_1_1__0__Impl : ( RULE_SPACE ) ;
    public final void rule__SubSentence__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6141:1: ( ( RULE_SPACE ) )
            // InternalNLX.g:6142:1: ( RULE_SPACE )
            {
            // InternalNLX.g:6142:1: ( RULE_SPACE )
            // InternalNLX.g:6143:2: RULE_SPACE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__SubSentence__Group_1_1_1__1"
    // InternalNLX.g:6152:1: rule__SubSentence__Group_1_1_1__1 : rule__SubSentence__Group_1_1_1__1__Impl ;
    public final void rule__SubSentence__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6156:1: ( rule__SubSentence__Group_1_1_1__1__Impl )
            // InternalNLX.g:6157:2: rule__SubSentence__Group_1_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_1_1__1"


    // $ANTLR start "rule__SubSentence__Group_1_1_1__1__Impl"
    // InternalNLX.g:6163:1: rule__SubSentence__Group_1_1_1__1__Impl : ( ( rule__SubSentence__ElementsAssignment_1_1_1_1 ) ) ;
    public final void rule__SubSentence__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6167:1: ( ( ( rule__SubSentence__ElementsAssignment_1_1_1_1 ) ) )
            // InternalNLX.g:6168:1: ( ( rule__SubSentence__ElementsAssignment_1_1_1_1 ) )
            {
            // InternalNLX.g:6168:1: ( ( rule__SubSentence__ElementsAssignment_1_1_1_1 ) )
            // InternalNLX.g:6169:2: ( rule__SubSentence__ElementsAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsAssignment_1_1_1_1()); 
            }
            // InternalNLX.g:6170:2: ( rule__SubSentence__ElementsAssignment_1_1_1_1 )
            // InternalNLX.g:6170:3: rule__SubSentence__ElementsAssignment_1_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__ElementsAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__SubSentence__Group_2__0"
    // InternalNLX.g:6179:1: rule__SubSentence__Group_2__0 : rule__SubSentence__Group_2__0__Impl rule__SubSentence__Group_2__1 ;
    public final void rule__SubSentence__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6183:1: ( rule__SubSentence__Group_2__0__Impl rule__SubSentence__Group_2__1 )
            // InternalNLX.g:6184:2: rule__SubSentence__Group_2__0__Impl rule__SubSentence__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SubSentence__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2__0"


    // $ANTLR start "rule__SubSentence__Group_2__0__Impl"
    // InternalNLX.g:6191:1: rule__SubSentence__Group_2__0__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__SubSentence__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6195:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:6196:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:6196:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:6197:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_2_0()); 
            }
            // InternalNLX.g:6198:2: ( RULE_SPACE )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==RULE_SPACE) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalNLX.g:6198:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2__0__Impl"


    // $ANTLR start "rule__SubSentence__Group_2__1"
    // InternalNLX.g:6206:1: rule__SubSentence__Group_2__1 : rule__SubSentence__Group_2__1__Impl rule__SubSentence__Group_2__2 ;
    public final void rule__SubSentence__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6210:1: ( rule__SubSentence__Group_2__1__Impl rule__SubSentence__Group_2__2 )
            // InternalNLX.g:6211:2: rule__SubSentence__Group_2__1__Impl rule__SubSentence__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__SubSentence__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2__1"


    // $ANTLR start "rule__SubSentence__Group_2__1__Impl"
    // InternalNLX.g:6218:1: rule__SubSentence__Group_2__1__Impl : ( ( rule__SubSentence__ElementsAssignment_2_1 ) ) ;
    public final void rule__SubSentence__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6222:1: ( ( ( rule__SubSentence__ElementsAssignment_2_1 ) ) )
            // InternalNLX.g:6223:1: ( ( rule__SubSentence__ElementsAssignment_2_1 ) )
            {
            // InternalNLX.g:6223:1: ( ( rule__SubSentence__ElementsAssignment_2_1 ) )
            // InternalNLX.g:6224:2: ( rule__SubSentence__ElementsAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsAssignment_2_1()); 
            }
            // InternalNLX.g:6225:2: ( rule__SubSentence__ElementsAssignment_2_1 )
            // InternalNLX.g:6225:3: rule__SubSentence__ElementsAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__ElementsAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2__1__Impl"


    // $ANTLR start "rule__SubSentence__Group_2__2"
    // InternalNLX.g:6233:1: rule__SubSentence__Group_2__2 : rule__SubSentence__Group_2__2__Impl rule__SubSentence__Group_2__3 ;
    public final void rule__SubSentence__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6237:1: ( rule__SubSentence__Group_2__2__Impl rule__SubSentence__Group_2__3 )
            // InternalNLX.g:6238:2: rule__SubSentence__Group_2__2__Impl rule__SubSentence__Group_2__3
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__SubSentence__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2__2"


    // $ANTLR start "rule__SubSentence__Group_2__2__Impl"
    // InternalNLX.g:6245:1: rule__SubSentence__Group_2__2__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__SubSentence__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6249:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:6250:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:6250:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:6251:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_2_2()); 
            }
            // InternalNLX.g:6252:2: ( RULE_SPACE )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==RULE_SPACE) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalNLX.g:6252:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2__2__Impl"


    // $ANTLR start "rule__SubSentence__Group_2__3"
    // InternalNLX.g:6260:1: rule__SubSentence__Group_2__3 : rule__SubSentence__Group_2__3__Impl rule__SubSentence__Group_2__4 ;
    public final void rule__SubSentence__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6264:1: ( rule__SubSentence__Group_2__3__Impl rule__SubSentence__Group_2__4 )
            // InternalNLX.g:6265:2: rule__SubSentence__Group_2__3__Impl rule__SubSentence__Group_2__4
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__SubSentence__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_2__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2__3"


    // $ANTLR start "rule__SubSentence__Group_2__3__Impl"
    // InternalNLX.g:6272:1: rule__SubSentence__Group_2__3__Impl : ( ( rule__SubSentence__ElementsAssignment_2_3 ) ) ;
    public final void rule__SubSentence__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6276:1: ( ( ( rule__SubSentence__ElementsAssignment_2_3 ) ) )
            // InternalNLX.g:6277:1: ( ( rule__SubSentence__ElementsAssignment_2_3 ) )
            {
            // InternalNLX.g:6277:1: ( ( rule__SubSentence__ElementsAssignment_2_3 ) )
            // InternalNLX.g:6278:2: ( rule__SubSentence__ElementsAssignment_2_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsAssignment_2_3()); 
            }
            // InternalNLX.g:6279:2: ( rule__SubSentence__ElementsAssignment_2_3 )
            // InternalNLX.g:6279:3: rule__SubSentence__ElementsAssignment_2_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__ElementsAssignment_2_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsAssignment_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2__3__Impl"


    // $ANTLR start "rule__SubSentence__Group_2__4"
    // InternalNLX.g:6287:1: rule__SubSentence__Group_2__4 : rule__SubSentence__Group_2__4__Impl ;
    public final void rule__SubSentence__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6291:1: ( rule__SubSentence__Group_2__4__Impl )
            // InternalNLX.g:6292:2: rule__SubSentence__Group_2__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_2__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2__4"


    // $ANTLR start "rule__SubSentence__Group_2__4__Impl"
    // InternalNLX.g:6298:1: rule__SubSentence__Group_2__4__Impl : ( ( rule__SubSentence__Group_2_4__0 )* ) ;
    public final void rule__SubSentence__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6302:1: ( ( ( rule__SubSentence__Group_2_4__0 )* ) )
            // InternalNLX.g:6303:1: ( ( rule__SubSentence__Group_2_4__0 )* )
            {
            // InternalNLX.g:6303:1: ( ( rule__SubSentence__Group_2_4__0 )* )
            // InternalNLX.g:6304:2: ( rule__SubSentence__Group_2_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getGroup_2_4()); 
            }
            // InternalNLX.g:6305:2: ( rule__SubSentence__Group_2_4__0 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==RULE_SPACE) ) {
                    int LA91_1 = input.LA(2);

                    if ( ((LA91_1>=RULE_HASH && LA91_1<=RULE_INT)||(LA91_1>=RULE_MULTI && LA91_1<=RULE_MINUS)||LA91_1==RULE_DOT||(LA91_1>=RULE_ID && LA91_1<=RULE_DOUBLE_DOT)||(LA91_1>=RULE_HEX_NUMBER && LA91_1<=RULE_TRIPLE_DOT)||(LA91_1>=RULE_BR_O && LA91_1<=RULE_EXBR_O)||LA91_1==RULE_EXBRC_O||(LA91_1>=RULE_CURRENCY && LA91_1<=RULE_AT)) ) {
                        alt91=1;
                    }


                }


                switch (alt91) {
            	case 1 :
            	    // InternalNLX.g:6305:3: rule__SubSentence__Group_2_4__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    rule__SubSentence__Group_2_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getGroup_2_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2__4__Impl"


    // $ANTLR start "rule__SubSentence__Group_2_4__0"
    // InternalNLX.g:6314:1: rule__SubSentence__Group_2_4__0 : rule__SubSentence__Group_2_4__0__Impl rule__SubSentence__Group_2_4__1 ;
    public final void rule__SubSentence__Group_2_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6318:1: ( rule__SubSentence__Group_2_4__0__Impl rule__SubSentence__Group_2_4__1 )
            // InternalNLX.g:6319:2: rule__SubSentence__Group_2_4__0__Impl rule__SubSentence__Group_2_4__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__SubSentence__Group_2_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_2_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2_4__0"


    // $ANTLR start "rule__SubSentence__Group_2_4__0__Impl"
    // InternalNLX.g:6326:1: rule__SubSentence__Group_2_4__0__Impl : ( RULE_SPACE ) ;
    public final void rule__SubSentence__Group_2_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6330:1: ( ( RULE_SPACE ) )
            // InternalNLX.g:6331:1: ( RULE_SPACE )
            {
            // InternalNLX.g:6331:1: ( RULE_SPACE )
            // InternalNLX.g:6332:2: RULE_SPACE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_2_4_0()); 
            }
            match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_2_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2_4__0__Impl"


    // $ANTLR start "rule__SubSentence__Group_2_4__1"
    // InternalNLX.g:6341:1: rule__SubSentence__Group_2_4__1 : rule__SubSentence__Group_2_4__1__Impl ;
    public final void rule__SubSentence__Group_2_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6345:1: ( rule__SubSentence__Group_2_4__1__Impl )
            // InternalNLX.g:6346:2: rule__SubSentence__Group_2_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__Group_2_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2_4__1"


    // $ANTLR start "rule__SubSentence__Group_2_4__1__Impl"
    // InternalNLX.g:6352:1: rule__SubSentence__Group_2_4__1__Impl : ( ( rule__SubSentence__ElementsAssignment_2_4_1 ) ) ;
    public final void rule__SubSentence__Group_2_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6356:1: ( ( ( rule__SubSentence__ElementsAssignment_2_4_1 ) ) )
            // InternalNLX.g:6357:1: ( ( rule__SubSentence__ElementsAssignment_2_4_1 ) )
            {
            // InternalNLX.g:6357:1: ( ( rule__SubSentence__ElementsAssignment_2_4_1 ) )
            // InternalNLX.g:6358:2: ( rule__SubSentence__ElementsAssignment_2_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsAssignment_2_4_1()); 
            }
            // InternalNLX.g:6359:2: ( rule__SubSentence__ElementsAssignment_2_4_1 )
            // InternalNLX.g:6359:3: rule__SubSentence__ElementsAssignment_2_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubSentence__ElementsAssignment_2_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsAssignment_2_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__Group_2_4__1__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group__0"
    // InternalNLX.g:6368:1: rule__TrailSubSentence__Group__0 : rule__TrailSubSentence__Group__0__Impl rule__TrailSubSentence__Group__1 ;
    public final void rule__TrailSubSentence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6372:1: ( rule__TrailSubSentence__Group__0__Impl rule__TrailSubSentence__Group__1 )
            // InternalNLX.g:6373:2: rule__TrailSubSentence__Group__0__Impl rule__TrailSubSentence__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__TrailSubSentence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group__0"


    // $ANTLR start "rule__TrailSubSentence__Group__0__Impl"
    // InternalNLX.g:6380:1: rule__TrailSubSentence__Group__0__Impl : ( () ) ;
    public final void rule__TrailSubSentence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6384:1: ( ( () ) )
            // InternalNLX.g:6385:1: ( () )
            {
            // InternalNLX.g:6385:1: ( () )
            // InternalNLX.g:6386:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getSubSentenceAction_0()); 
            }
            // InternalNLX.g:6387:2: ()
            // InternalNLX.g:6387:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getSubSentenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group__0__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group__1"
    // InternalNLX.g:6395:1: rule__TrailSubSentence__Group__1 : rule__TrailSubSentence__Group__1__Impl rule__TrailSubSentence__Group__2 ;
    public final void rule__TrailSubSentence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6399:1: ( rule__TrailSubSentence__Group__1__Impl rule__TrailSubSentence__Group__2 )
            // InternalNLX.g:6400:2: rule__TrailSubSentence__Group__1__Impl rule__TrailSubSentence__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__TrailSubSentence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group__1"


    // $ANTLR start "rule__TrailSubSentence__Group__1__Impl"
    // InternalNLX.g:6407:1: rule__TrailSubSentence__Group__1__Impl : ( ( rule__TrailSubSentence__Group_1__0 ) ) ;
    public final void rule__TrailSubSentence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6411:1: ( ( ( rule__TrailSubSentence__Group_1__0 ) ) )
            // InternalNLX.g:6412:1: ( ( rule__TrailSubSentence__Group_1__0 ) )
            {
            // InternalNLX.g:6412:1: ( ( rule__TrailSubSentence__Group_1__0 ) )
            // InternalNLX.g:6413:2: ( rule__TrailSubSentence__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getGroup_1()); 
            }
            // InternalNLX.g:6414:2: ( rule__TrailSubSentence__Group_1__0 )
            // InternalNLX.g:6414:3: rule__TrailSubSentence__Group_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group__1__Impl"

}

@SuppressWarnings("all")
abstract class InternalNLXParser6 extends InternalNLXParser5 {

        InternalNLXParser6(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalNLXParser6(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__TrailSubSentence__Group__2"
    // InternalNLX.g:6422:1: rule__TrailSubSentence__Group__2 : rule__TrailSubSentence__Group__2__Impl ;
    public final void rule__TrailSubSentence__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6426:1: ( rule__TrailSubSentence__Group__2__Impl )
            // InternalNLX.g:6427:2: rule__TrailSubSentence__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group__2"


    // $ANTLR start "rule__TrailSubSentence__Group__2__Impl"
    // InternalNLX.g:6433:1: rule__TrailSubSentence__Group__2__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__TrailSubSentence__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6437:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:6438:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:6438:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:6439:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_2()); 
            }
            // InternalNLX.g:6440:2: ( RULE_SPACE )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==RULE_SPACE) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalNLX.g:6440:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group__2__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1__0"
    // InternalNLX.g:6449:1: rule__TrailSubSentence__Group_1__0 : rule__TrailSubSentence__Group_1__0__Impl rule__TrailSubSentence__Group_1__1 ;
    public final void rule__TrailSubSentence__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6453:1: ( rule__TrailSubSentence__Group_1__0__Impl rule__TrailSubSentence__Group_1__1 )
            // InternalNLX.g:6454:2: rule__TrailSubSentence__Group_1__0__Impl rule__TrailSubSentence__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__TrailSubSentence__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1__0"


    // $ANTLR start "rule__TrailSubSentence__Group_1__0__Impl"
    // InternalNLX.g:6461:1: rule__TrailSubSentence__Group_1__0__Impl : ( ( rule__TrailSubSentence__ElementsAssignment_1_0 ) ) ;
    public final void rule__TrailSubSentence__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6465:1: ( ( ( rule__TrailSubSentence__ElementsAssignment_1_0 ) ) )
            // InternalNLX.g:6466:1: ( ( rule__TrailSubSentence__ElementsAssignment_1_0 ) )
            {
            // InternalNLX.g:6466:1: ( ( rule__TrailSubSentence__ElementsAssignment_1_0 ) )
            // InternalNLX.g:6467:2: ( rule__TrailSubSentence__ElementsAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getElementsAssignment_1_0()); 
            }
            // InternalNLX.g:6468:2: ( rule__TrailSubSentence__ElementsAssignment_1_0 )
            // InternalNLX.g:6468:3: rule__TrailSubSentence__ElementsAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__ElementsAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getElementsAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1__0__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1__1"
    // InternalNLX.g:6476:1: rule__TrailSubSentence__Group_1__1 : rule__TrailSubSentence__Group_1__1__Impl rule__TrailSubSentence__Group_1__2 ;
    public final void rule__TrailSubSentence__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6480:1: ( rule__TrailSubSentence__Group_1__1__Impl rule__TrailSubSentence__Group_1__2 )
            // InternalNLX.g:6481:2: rule__TrailSubSentence__Group_1__1__Impl rule__TrailSubSentence__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__TrailSubSentence__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1__1"


    // $ANTLR start "rule__TrailSubSentence__Group_1__1__Impl"
    // InternalNLX.g:6488:1: rule__TrailSubSentence__Group_1__1__Impl : ( ( rule__TrailSubSentence__Group_1_1__0 )* ) ;
    public final void rule__TrailSubSentence__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6492:1: ( ( ( rule__TrailSubSentence__Group_1_1__0 )* ) )
            // InternalNLX.g:6493:1: ( ( rule__TrailSubSentence__Group_1_1__0 )* )
            {
            // InternalNLX.g:6493:1: ( ( rule__TrailSubSentence__Group_1_1__0 )* )
            // InternalNLX.g:6494:2: ( rule__TrailSubSentence__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getGroup_1_1()); 
            }
            // InternalNLX.g:6495:2: ( rule__TrailSubSentence__Group_1_1__0 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==RULE_SPACE) ) {
                    int LA93_1 = input.LA(2);

                    if ( ((LA93_1>=RULE_HASH && LA93_1<=RULE_INT)||(LA93_1>=RULE_MULTI && LA93_1<=RULE_MINUS)||LA93_1==RULE_DOT||(LA93_1>=RULE_ID && LA93_1<=RULE_DOUBLE_DOT)||(LA93_1>=RULE_HEX_NUMBER && LA93_1<=RULE_TRIPLE_DOT)||(LA93_1>=RULE_BR_O && LA93_1<=RULE_EXBR_O)||LA93_1==RULE_EXBRC_O||(LA93_1>=RULE_CURRENCY && LA93_1<=RULE_AT)) ) {
                        alt93=1;
                    }


                }


                switch (alt93) {
            	case 1 :
            	    // InternalNLX.g:6495:3: rule__TrailSubSentence__Group_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    rule__TrailSubSentence__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1__1__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1__2"
    // InternalNLX.g:6503:1: rule__TrailSubSentence__Group_1__2 : rule__TrailSubSentence__Group_1__2__Impl ;
    public final void rule__TrailSubSentence__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6507:1: ( rule__TrailSubSentence__Group_1__2__Impl )
            // InternalNLX.g:6508:2: rule__TrailSubSentence__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1__2"


    // $ANTLR start "rule__TrailSubSentence__Group_1__2__Impl"
    // InternalNLX.g:6514:1: rule__TrailSubSentence__Group_1__2__Impl : ( ( rule__TrailSubSentence__Group_1_2__0 )* ) ;
    public final void rule__TrailSubSentence__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6518:1: ( ( ( rule__TrailSubSentence__Group_1_2__0 )* ) )
            // InternalNLX.g:6519:1: ( ( rule__TrailSubSentence__Group_1_2__0 )* )
            {
            // InternalNLX.g:6519:1: ( ( rule__TrailSubSentence__Group_1_2__0 )* )
            // InternalNLX.g:6520:2: ( rule__TrailSubSentence__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getGroup_1_2()); 
            }
            // InternalNLX.g:6521:2: ( rule__TrailSubSentence__Group_1_2__0 )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==RULE_SPACE) ) {
                    int LA94_1 = input.LA(2);

                    if ( (synpred151_InternalNLX()) ) {
                        alt94=1;
                    }


                }
                else if ( (LA94_0==RULE_NEWLINE) ) {
                    int LA94_5 = input.LA(2);

                    if ( (synpred151_InternalNLX()) ) {
                        alt94=1;
                    }


                }


                switch (alt94) {
            	case 1 :
            	    // InternalNLX.g:6521:3: rule__TrailSubSentence__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    rule__TrailSubSentence__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1__2__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1_1__0"
    // InternalNLX.g:6530:1: rule__TrailSubSentence__Group_1_1__0 : rule__TrailSubSentence__Group_1_1__0__Impl rule__TrailSubSentence__Group_1_1__1 ;
    public final void rule__TrailSubSentence__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6534:1: ( rule__TrailSubSentence__Group_1_1__0__Impl rule__TrailSubSentence__Group_1_1__1 )
            // InternalNLX.g:6535:2: rule__TrailSubSentence__Group_1_1__0__Impl rule__TrailSubSentence__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__TrailSubSentence__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_1__0"


    // $ANTLR start "rule__TrailSubSentence__Group_1_1__0__Impl"
    // InternalNLX.g:6542:1: rule__TrailSubSentence__Group_1_1__0__Impl : ( RULE_SPACE ) ;
    public final void rule__TrailSubSentence__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6546:1: ( ( RULE_SPACE ) )
            // InternalNLX.g:6547:1: ( RULE_SPACE )
            {
            // InternalNLX.g:6547:1: ( RULE_SPACE )
            // InternalNLX.g:6548:2: RULE_SPACE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_1__0__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1_1__1"
    // InternalNLX.g:6557:1: rule__TrailSubSentence__Group_1_1__1 : rule__TrailSubSentence__Group_1_1__1__Impl ;
    public final void rule__TrailSubSentence__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6561:1: ( rule__TrailSubSentence__Group_1_1__1__Impl )
            // InternalNLX.g:6562:2: rule__TrailSubSentence__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_1__1"


    // $ANTLR start "rule__TrailSubSentence__Group_1_1__1__Impl"
    // InternalNLX.g:6568:1: rule__TrailSubSentence__Group_1_1__1__Impl : ( ( rule__TrailSubSentence__ElementsAssignment_1_1_1 ) ) ;
    public final void rule__TrailSubSentence__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6572:1: ( ( ( rule__TrailSubSentence__ElementsAssignment_1_1_1 ) ) )
            // InternalNLX.g:6573:1: ( ( rule__TrailSubSentence__ElementsAssignment_1_1_1 ) )
            {
            // InternalNLX.g:6573:1: ( ( rule__TrailSubSentence__ElementsAssignment_1_1_1 ) )
            // InternalNLX.g:6574:2: ( rule__TrailSubSentence__ElementsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getElementsAssignment_1_1_1()); 
            }
            // InternalNLX.g:6575:2: ( rule__TrailSubSentence__ElementsAssignment_1_1_1 )
            // InternalNLX.g:6575:3: rule__TrailSubSentence__ElementsAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__ElementsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getElementsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_1__1__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2__0"
    // InternalNLX.g:6584:1: rule__TrailSubSentence__Group_1_2__0 : rule__TrailSubSentence__Group_1_2__0__Impl rule__TrailSubSentence__Group_1_2__1 ;
    public final void rule__TrailSubSentence__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6588:1: ( rule__TrailSubSentence__Group_1_2__0__Impl rule__TrailSubSentence__Group_1_2__1 )
            // InternalNLX.g:6589:2: rule__TrailSubSentence__Group_1_2__0__Impl rule__TrailSubSentence__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__TrailSubSentence__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2__0"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2__0__Impl"
    // InternalNLX.g:6596:1: rule__TrailSubSentence__Group_1_2__0__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__TrailSubSentence__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6600:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:6601:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:6601:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:6602:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_2_0()); 
            }
            // InternalNLX.g:6603:2: ( RULE_SPACE )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_SPACE) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalNLX.g:6603:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2__0__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2__1"
    // InternalNLX.g:6611:1: rule__TrailSubSentence__Group_1_2__1 : rule__TrailSubSentence__Group_1_2__1__Impl rule__TrailSubSentence__Group_1_2__2 ;
    public final void rule__TrailSubSentence__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6615:1: ( rule__TrailSubSentence__Group_1_2__1__Impl rule__TrailSubSentence__Group_1_2__2 )
            // InternalNLX.g:6616:2: rule__TrailSubSentence__Group_1_2__1__Impl rule__TrailSubSentence__Group_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__TrailSubSentence__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2__1"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2__1__Impl"
    // InternalNLX.g:6623:1: rule__TrailSubSentence__Group_1_2__1__Impl : ( ( rule__TrailSubSentence__ElementsAssignment_1_2_1 ) ) ;
    public final void rule__TrailSubSentence__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6627:1: ( ( ( rule__TrailSubSentence__ElementsAssignment_1_2_1 ) ) )
            // InternalNLX.g:6628:1: ( ( rule__TrailSubSentence__ElementsAssignment_1_2_1 ) )
            {
            // InternalNLX.g:6628:1: ( ( rule__TrailSubSentence__ElementsAssignment_1_2_1 ) )
            // InternalNLX.g:6629:2: ( rule__TrailSubSentence__ElementsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getElementsAssignment_1_2_1()); 
            }
            // InternalNLX.g:6630:2: ( rule__TrailSubSentence__ElementsAssignment_1_2_1 )
            // InternalNLX.g:6630:3: rule__TrailSubSentence__ElementsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__ElementsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getElementsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2__1__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2__2"
    // InternalNLX.g:6638:1: rule__TrailSubSentence__Group_1_2__2 : rule__TrailSubSentence__Group_1_2__2__Impl rule__TrailSubSentence__Group_1_2__3 ;
    public final void rule__TrailSubSentence__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6642:1: ( rule__TrailSubSentence__Group_1_2__2__Impl rule__TrailSubSentence__Group_1_2__3 )
            // InternalNLX.g:6643:2: rule__TrailSubSentence__Group_1_2__2__Impl rule__TrailSubSentence__Group_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__TrailSubSentence__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2__2"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2__2__Impl"
    // InternalNLX.g:6650:1: rule__TrailSubSentence__Group_1_2__2__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__TrailSubSentence__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6654:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:6655:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:6655:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:6656:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_2_2()); 
            }
            // InternalNLX.g:6657:2: ( RULE_SPACE )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==RULE_SPACE) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalNLX.g:6657:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2__2__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2__3"
    // InternalNLX.g:6665:1: rule__TrailSubSentence__Group_1_2__3 : rule__TrailSubSentence__Group_1_2__3__Impl rule__TrailSubSentence__Group_1_2__4 ;
    public final void rule__TrailSubSentence__Group_1_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6669:1: ( rule__TrailSubSentence__Group_1_2__3__Impl rule__TrailSubSentence__Group_1_2__4 )
            // InternalNLX.g:6670:2: rule__TrailSubSentence__Group_1_2__3__Impl rule__TrailSubSentence__Group_1_2__4
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__TrailSubSentence__Group_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1_2__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2__3"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2__3__Impl"
    // InternalNLX.g:6677:1: rule__TrailSubSentence__Group_1_2__3__Impl : ( ( rule__TrailSubSentence__ElementsAssignment_1_2_3 ) ) ;
    public final void rule__TrailSubSentence__Group_1_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6681:1: ( ( ( rule__TrailSubSentence__ElementsAssignment_1_2_3 ) ) )
            // InternalNLX.g:6682:1: ( ( rule__TrailSubSentence__ElementsAssignment_1_2_3 ) )
            {
            // InternalNLX.g:6682:1: ( ( rule__TrailSubSentence__ElementsAssignment_1_2_3 ) )
            // InternalNLX.g:6683:2: ( rule__TrailSubSentence__ElementsAssignment_1_2_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getElementsAssignment_1_2_3()); 
            }
            // InternalNLX.g:6684:2: ( rule__TrailSubSentence__ElementsAssignment_1_2_3 )
            // InternalNLX.g:6684:3: rule__TrailSubSentence__ElementsAssignment_1_2_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__ElementsAssignment_1_2_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getElementsAssignment_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2__3__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2__4"
    // InternalNLX.g:6692:1: rule__TrailSubSentence__Group_1_2__4 : rule__TrailSubSentence__Group_1_2__4__Impl ;
    public final void rule__TrailSubSentence__Group_1_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6696:1: ( rule__TrailSubSentence__Group_1_2__4__Impl )
            // InternalNLX.g:6697:2: rule__TrailSubSentence__Group_1_2__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1_2__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2__4"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2__4__Impl"
    // InternalNLX.g:6703:1: rule__TrailSubSentence__Group_1_2__4__Impl : ( ( rule__TrailSubSentence__Group_1_2_4__0 )* ) ;
    public final void rule__TrailSubSentence__Group_1_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6707:1: ( ( ( rule__TrailSubSentence__Group_1_2_4__0 )* ) )
            // InternalNLX.g:6708:1: ( ( rule__TrailSubSentence__Group_1_2_4__0 )* )
            {
            // InternalNLX.g:6708:1: ( ( rule__TrailSubSentence__Group_1_2_4__0 )* )
            // InternalNLX.g:6709:2: ( rule__TrailSubSentence__Group_1_2_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getGroup_1_2_4()); 
            }
            // InternalNLX.g:6710:2: ( rule__TrailSubSentence__Group_1_2_4__0 )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==RULE_SPACE) ) {
                    int LA97_1 = input.LA(2);

                    if ( ((LA97_1>=RULE_HASH && LA97_1<=RULE_INT)||(LA97_1>=RULE_MULTI && LA97_1<=RULE_MINUS)||LA97_1==RULE_DOT||(LA97_1>=RULE_ID && LA97_1<=RULE_DOUBLE_DOT)||(LA97_1>=RULE_HEX_NUMBER && LA97_1<=RULE_TRIPLE_DOT)||(LA97_1>=RULE_BR_O && LA97_1<=RULE_EXBR_O)||LA97_1==RULE_EXBRC_O||(LA97_1>=RULE_CURRENCY && LA97_1<=RULE_AT)) ) {
                        alt97=1;
                    }


                }


                switch (alt97) {
            	case 1 :
            	    // InternalNLX.g:6710:3: rule__TrailSubSentence__Group_1_2_4__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    rule__TrailSubSentence__Group_1_2_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getGroup_1_2_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2__4__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2_4__0"
    // InternalNLX.g:6719:1: rule__TrailSubSentence__Group_1_2_4__0 : rule__TrailSubSentence__Group_1_2_4__0__Impl rule__TrailSubSentence__Group_1_2_4__1 ;
    public final void rule__TrailSubSentence__Group_1_2_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6723:1: ( rule__TrailSubSentence__Group_1_2_4__0__Impl rule__TrailSubSentence__Group_1_2_4__1 )
            // InternalNLX.g:6724:2: rule__TrailSubSentence__Group_1_2_4__0__Impl rule__TrailSubSentence__Group_1_2_4__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__TrailSubSentence__Group_1_2_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1_2_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2_4__0"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2_4__0__Impl"
    // InternalNLX.g:6731:1: rule__TrailSubSentence__Group_1_2_4__0__Impl : ( RULE_SPACE ) ;
    public final void rule__TrailSubSentence__Group_1_2_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6735:1: ( ( RULE_SPACE ) )
            // InternalNLX.g:6736:1: ( RULE_SPACE )
            {
            // InternalNLX.g:6736:1: ( RULE_SPACE )
            // InternalNLX.g:6737:2: RULE_SPACE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_2_4_0()); 
            }
            match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_2_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2_4__0__Impl"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2_4__1"
    // InternalNLX.g:6746:1: rule__TrailSubSentence__Group_1_2_4__1 : rule__TrailSubSentence__Group_1_2_4__1__Impl ;
    public final void rule__TrailSubSentence__Group_1_2_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6750:1: ( rule__TrailSubSentence__Group_1_2_4__1__Impl )
            // InternalNLX.g:6751:2: rule__TrailSubSentence__Group_1_2_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__Group_1_2_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2_4__1"


    // $ANTLR start "rule__TrailSubSentence__Group_1_2_4__1__Impl"
    // InternalNLX.g:6757:1: rule__TrailSubSentence__Group_1_2_4__1__Impl : ( ( rule__TrailSubSentence__ElementsAssignment_1_2_4_1 ) ) ;
    public final void rule__TrailSubSentence__Group_1_2_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6761:1: ( ( ( rule__TrailSubSentence__ElementsAssignment_1_2_4_1 ) ) )
            // InternalNLX.g:6762:1: ( ( rule__TrailSubSentence__ElementsAssignment_1_2_4_1 ) )
            {
            // InternalNLX.g:6762:1: ( ( rule__TrailSubSentence__ElementsAssignment_1_2_4_1 ) )
            // InternalNLX.g:6763:2: ( rule__TrailSubSentence__ElementsAssignment_1_2_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getElementsAssignment_1_2_4_1()); 
            }
            // InternalNLX.g:6764:2: ( rule__TrailSubSentence__ElementsAssignment_1_2_4_1 )
            // InternalNLX.g:6764:3: rule__TrailSubSentence__ElementsAssignment_1_2_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TrailSubSentence__ElementsAssignment_1_2_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getElementsAssignment_1_2_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__Group_1_2_4__1__Impl"


    // $ANTLR start "rule__FreeSubSentence__Group__0"
    // InternalNLX.g:6773:1: rule__FreeSubSentence__Group__0 : rule__FreeSubSentence__Group__0__Impl rule__FreeSubSentence__Group__1 ;
    public final void rule__FreeSubSentence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6777:1: ( rule__FreeSubSentence__Group__0__Impl rule__FreeSubSentence__Group__1 )
            // InternalNLX.g:6778:2: rule__FreeSubSentence__Group__0__Impl rule__FreeSubSentence__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__FreeSubSentence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSubSentence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group__0"


    // $ANTLR start "rule__FreeSubSentence__Group__0__Impl"
    // InternalNLX.g:6785:1: rule__FreeSubSentence__Group__0__Impl : ( () ) ;
    public final void rule__FreeSubSentence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6789:1: ( ( () ) )
            // InternalNLX.g:6790:1: ( () )
            {
            // InternalNLX.g:6790:1: ( () )
            // InternalNLX.g:6791:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getSubSentenceAction_0()); 
            }
            // InternalNLX.g:6792:2: ()
            // InternalNLX.g:6792:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getSubSentenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group__0__Impl"


    // $ANTLR start "rule__FreeSubSentence__Group__1"
    // InternalNLX.g:6800:1: rule__FreeSubSentence__Group__1 : rule__FreeSubSentence__Group__1__Impl rule__FreeSubSentence__Group__2 ;
    public final void rule__FreeSubSentence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6804:1: ( rule__FreeSubSentence__Group__1__Impl rule__FreeSubSentence__Group__2 )
            // InternalNLX.g:6805:2: rule__FreeSubSentence__Group__1__Impl rule__FreeSubSentence__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__FreeSubSentence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSubSentence__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group__1"


    // $ANTLR start "rule__FreeSubSentence__Group__1__Impl"
    // InternalNLX.g:6812:1: rule__FreeSubSentence__Group__1__Impl : ( ( rule__FreeSubSentence__Alternatives_1 )* ) ;
    public final void rule__FreeSubSentence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6816:1: ( ( ( rule__FreeSubSentence__Alternatives_1 )* ) )
            // InternalNLX.g:6817:1: ( ( rule__FreeSubSentence__Alternatives_1 )* )
            {
            // InternalNLX.g:6817:1: ( ( rule__FreeSubSentence__Alternatives_1 )* )
            // InternalNLX.g:6818:2: ( rule__FreeSubSentence__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getAlternatives_1()); 
            }
            // InternalNLX.g:6819:2: ( rule__FreeSubSentence__Alternatives_1 )*
            loop98:
            do {
                int alt98=2;
                alt98 = dfa98.predict(input);
                switch (alt98) {
            	case 1 :
            	    // InternalNLX.g:6819:3: rule__FreeSubSentence__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    rule__FreeSubSentence__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group__1__Impl"


    // $ANTLR start "rule__FreeSubSentence__Group__2"
    // InternalNLX.g:6827:1: rule__FreeSubSentence__Group__2 : rule__FreeSubSentence__Group__2__Impl rule__FreeSubSentence__Group__3 ;
    public final void rule__FreeSubSentence__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6831:1: ( rule__FreeSubSentence__Group__2__Impl rule__FreeSubSentence__Group__3 )
            // InternalNLX.g:6832:2: rule__FreeSubSentence__Group__2__Impl rule__FreeSubSentence__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__FreeSubSentence__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSubSentence__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group__2"


    // $ANTLR start "rule__FreeSubSentence__Group__2__Impl"
    // InternalNLX.g:6839:1: rule__FreeSubSentence__Group__2__Impl : ( ( rule__FreeSubSentence__ElementsAssignment_2 ) ) ;
    public final void rule__FreeSubSentence__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6843:1: ( ( ( rule__FreeSubSentence__ElementsAssignment_2 ) ) )
            // InternalNLX.g:6844:1: ( ( rule__FreeSubSentence__ElementsAssignment_2 ) )
            {
            // InternalNLX.g:6844:1: ( ( rule__FreeSubSentence__ElementsAssignment_2 ) )
            // InternalNLX.g:6845:2: ( rule__FreeSubSentence__ElementsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getElementsAssignment_2()); 
            }
            // InternalNLX.g:6846:2: ( rule__FreeSubSentence__ElementsAssignment_2 )
            // InternalNLX.g:6846:3: rule__FreeSubSentence__ElementsAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSubSentence__ElementsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getElementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group__2__Impl"


    // $ANTLR start "rule__FreeSubSentence__Group__3"
    // InternalNLX.g:6854:1: rule__FreeSubSentence__Group__3 : rule__FreeSubSentence__Group__3__Impl rule__FreeSubSentence__Group__4 ;
    public final void rule__FreeSubSentence__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6858:1: ( rule__FreeSubSentence__Group__3__Impl rule__FreeSubSentence__Group__4 )
            // InternalNLX.g:6859:2: rule__FreeSubSentence__Group__3__Impl rule__FreeSubSentence__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__FreeSubSentence__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSubSentence__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group__3"


    // $ANTLR start "rule__FreeSubSentence__Group__3__Impl"
    // InternalNLX.g:6866:1: rule__FreeSubSentence__Group__3__Impl : ( ( rule__FreeSubSentence__Group_3__0 )* ) ;
    public final void rule__FreeSubSentence__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6870:1: ( ( ( rule__FreeSubSentence__Group_3__0 )* ) )
            // InternalNLX.g:6871:1: ( ( rule__FreeSubSentence__Group_3__0 )* )
            {
            // InternalNLX.g:6871:1: ( ( rule__FreeSubSentence__Group_3__0 )* )
            // InternalNLX.g:6872:2: ( rule__FreeSubSentence__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getGroup_3()); 
            }
            // InternalNLX.g:6873:2: ( rule__FreeSubSentence__Group_3__0 )*
            loop99:
            do {
                int alt99=2;
                alt99 = dfa99.predict(input);
                switch (alt99) {
            	case 1 :
            	    // InternalNLX.g:6873:3: rule__FreeSubSentence__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    rule__FreeSubSentence__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group__3__Impl"


    // $ANTLR start "rule__FreeSubSentence__Group__4"
    // InternalNLX.g:6881:1: rule__FreeSubSentence__Group__4 : rule__FreeSubSentence__Group__4__Impl ;
    public final void rule__FreeSubSentence__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6885:1: ( rule__FreeSubSentence__Group__4__Impl )
            // InternalNLX.g:6886:2: rule__FreeSubSentence__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSubSentence__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group__4"


    // $ANTLR start "rule__FreeSubSentence__Group__4__Impl"
    // InternalNLX.g:6892:1: rule__FreeSubSentence__Group__4__Impl : ( ( rule__FreeSubSentence__Alternatives_4 )* ) ;
    public final void rule__FreeSubSentence__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6896:1: ( ( ( rule__FreeSubSentence__Alternatives_4 )* ) )
            // InternalNLX.g:6897:1: ( ( rule__FreeSubSentence__Alternatives_4 )* )
            {
            // InternalNLX.g:6897:1: ( ( rule__FreeSubSentence__Alternatives_4 )* )
            // InternalNLX.g:6898:2: ( rule__FreeSubSentence__Alternatives_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getAlternatives_4()); 
            }
            // InternalNLX.g:6899:2: ( rule__FreeSubSentence__Alternatives_4 )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==RULE_SPACE) ) {
                    int LA100_2 = input.LA(2);

                    if ( (synpred157_InternalNLX()) ) {
                        alt100=1;
                    }


                }
                else if ( (LA100_0==RULE_NEWLINE) ) {
                    int LA100_3 = input.LA(2);

                    if ( (synpred157_InternalNLX()) ) {
                        alt100=1;
                    }


                }


                switch (alt100) {
            	case 1 :
            	    // InternalNLX.g:6899:3: rule__FreeSubSentence__Alternatives_4
            	    {
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    rule__FreeSubSentence__Alternatives_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getAlternatives_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group__4__Impl"


    // $ANTLR start "rule__FreeSubSentence__Group_3__0"
    // InternalNLX.g:6908:1: rule__FreeSubSentence__Group_3__0 : rule__FreeSubSentence__Group_3__0__Impl rule__FreeSubSentence__Group_3__1 ;
    public final void rule__FreeSubSentence__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6912:1: ( rule__FreeSubSentence__Group_3__0__Impl rule__FreeSubSentence__Group_3__1 )
            // InternalNLX.g:6913:2: rule__FreeSubSentence__Group_3__0__Impl rule__FreeSubSentence__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__FreeSubSentence__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSubSentence__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group_3__0"


    // $ANTLR start "rule__FreeSubSentence__Group_3__0__Impl"
    // InternalNLX.g:6920:1: rule__FreeSubSentence__Group_3__0__Impl : ( ( ( rule__FreeSubSentence__Alternatives_3_0 ) ) ( ( rule__FreeSubSentence__Alternatives_3_0 )* ) ) ;
    public final void rule__FreeSubSentence__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6924:1: ( ( ( ( rule__FreeSubSentence__Alternatives_3_0 ) ) ( ( rule__FreeSubSentence__Alternatives_3_0 )* ) ) )
            // InternalNLX.g:6925:1: ( ( ( rule__FreeSubSentence__Alternatives_3_0 ) ) ( ( rule__FreeSubSentence__Alternatives_3_0 )* ) )
            {
            // InternalNLX.g:6925:1: ( ( ( rule__FreeSubSentence__Alternatives_3_0 ) ) ( ( rule__FreeSubSentence__Alternatives_3_0 )* ) )
            // InternalNLX.g:6926:2: ( ( rule__FreeSubSentence__Alternatives_3_0 ) ) ( ( rule__FreeSubSentence__Alternatives_3_0 )* )
            {
            // InternalNLX.g:6926:2: ( ( rule__FreeSubSentence__Alternatives_3_0 ) )
            // InternalNLX.g:6927:3: ( rule__FreeSubSentence__Alternatives_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getAlternatives_3_0()); 
            }
            // InternalNLX.g:6928:3: ( rule__FreeSubSentence__Alternatives_3_0 )
            // InternalNLX.g:6928:4: rule__FreeSubSentence__Alternatives_3_0
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__FreeSubSentence__Alternatives_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getAlternatives_3_0()); 
            }

            }

            // InternalNLX.g:6931:2: ( ( rule__FreeSubSentence__Alternatives_3_0 )* )
            // InternalNLX.g:6932:3: ( rule__FreeSubSentence__Alternatives_3_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getAlternatives_3_0()); 
            }
            // InternalNLX.g:6933:3: ( rule__FreeSubSentence__Alternatives_3_0 )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==RULE_NEWLINE) ) {
                    switch ( input.LA(2) ) {
                    case RULE_SPACE:
                        {
                        int LA101_4 = input.LA(3);

                        if ( (synpred158_InternalNLX()) ) {
                            alt101=1;
                        }


                        }
                        break;
                    case RULE_NEWLINE:
                        {
                        int LA101_5 = input.LA(3);

                        if ( (synpred158_InternalNLX()) ) {
                            alt101=1;
                        }


                        }
                        break;
                    case RULE_DOT:
                        {
                        int LA101_6 = input.LA(3);

                        if ( (LA101_6==RULE_INT||LA101_6==RULE_MULTI||LA101_6==RULE_DOT||(LA101_6>=RULE_ID && LA101_6<=RULE_CURL)||(LA101_6>=RULE_SEPARATORS_IT && LA101_6<=RULE_COLON)) ) {
                            alt101=1;
                        }


                        }
                        break;
                    case RULE_HASH:
                    case RULE_INT:
                    case RULE_MULTI:
                    case RULE_DASH:
                    case RULE_MINUS:
                    case RULE_ID:
                    case RULE_ID_C:
                    case RULE_ALL_ALPHA:
                    case RULE_ALPHA:
                    case RULE_IT_ID:
                    case RULE_DOUBLE_DOT:
                    case RULE_HEX_NUMBER:
                    case RULE_CURL:
                    case RULE_SLASH:
                    case RULE_SEPARATORS:
                    case RULE_SEPARATORS_IT:
                    case RULE_COLON:
                    case RULE_PARAGR:
                    case RULE_PERCENT:
                    case RULE_OPERATORS:
                    case RULE_ARROW:
                    case RULE_SMILEY:
                    case RULE_TRIPLE_DOT:
                    case RULE_BR_O:
                    case RULE_EXBR_O:
                    case RULE_EXBRC_O:
                    case RULE_CURRENCY:
                    case RULE_STRING:
                    case RULE_SHORTCUTS:
                    case RULE_IGNORED:
                    case RULE_URL_PROTOCOL:
                    case RULE_AT:
                        {
                        alt101=1;
                        }
                        break;

                    }

                }
                else if ( (LA101_0==RULE_SPACE) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalNLX.g:6933:4: rule__FreeSubSentence__Alternatives_3_0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    rule__FreeSubSentence__Alternatives_3_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getAlternatives_3_0()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group_3__0__Impl"


    // $ANTLR start "rule__FreeSubSentence__Group_3__1"
    // InternalNLX.g:6942:1: rule__FreeSubSentence__Group_3__1 : rule__FreeSubSentence__Group_3__1__Impl ;
    public final void rule__FreeSubSentence__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6946:1: ( rule__FreeSubSentence__Group_3__1__Impl )
            // InternalNLX.g:6947:2: rule__FreeSubSentence__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSubSentence__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group_3__1"


    // $ANTLR start "rule__FreeSubSentence__Group_3__1__Impl"
    // InternalNLX.g:6953:1: rule__FreeSubSentence__Group_3__1__Impl : ( ( rule__FreeSubSentence__ElementsAssignment_3_1 ) ) ;
    public final void rule__FreeSubSentence__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6957:1: ( ( ( rule__FreeSubSentence__ElementsAssignment_3_1 ) ) )
            // InternalNLX.g:6958:1: ( ( rule__FreeSubSentence__ElementsAssignment_3_1 ) )
            {
            // InternalNLX.g:6958:1: ( ( rule__FreeSubSentence__ElementsAssignment_3_1 ) )
            // InternalNLX.g:6959:2: ( rule__FreeSubSentence__ElementsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getElementsAssignment_3_1()); 
            }
            // InternalNLX.g:6960:2: ( rule__FreeSubSentence__ElementsAssignment_3_1 )
            // InternalNLX.g:6960:3: rule__FreeSubSentence__ElementsAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FreeSubSentence__ElementsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getElementsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__Group_3__1__Impl"


    // $ANTLR start "rule__LineSubSentence__Group__0"
    // InternalNLX.g:6969:1: rule__LineSubSentence__Group__0 : rule__LineSubSentence__Group__0__Impl rule__LineSubSentence__Group__1 ;
    public final void rule__LineSubSentence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6973:1: ( rule__LineSubSentence__Group__0__Impl rule__LineSubSentence__Group__1 )
            // InternalNLX.g:6974:2: rule__LineSubSentence__Group__0__Impl rule__LineSubSentence__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__LineSubSentence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSubSentence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group__0"


    // $ANTLR start "rule__LineSubSentence__Group__0__Impl"
    // InternalNLX.g:6981:1: rule__LineSubSentence__Group__0__Impl : ( () ) ;
    public final void rule__LineSubSentence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:6985:1: ( ( () ) )
            // InternalNLX.g:6986:1: ( () )
            {
            // InternalNLX.g:6986:1: ( () )
            // InternalNLX.g:6987:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSubSentenceAccess().getSubSentenceAction_0()); 
            }
            // InternalNLX.g:6988:2: ()
            // InternalNLX.g:6988:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSubSentenceAccess().getSubSentenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group__0__Impl"


    // $ANTLR start "rule__LineSubSentence__Group__1"
    // InternalNLX.g:6996:1: rule__LineSubSentence__Group__1 : rule__LineSubSentence__Group__1__Impl rule__LineSubSentence__Group__2 ;
    public final void rule__LineSubSentence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7000:1: ( rule__LineSubSentence__Group__1__Impl rule__LineSubSentence__Group__2 )
            // InternalNLX.g:7001:2: rule__LineSubSentence__Group__1__Impl rule__LineSubSentence__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__LineSubSentence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSubSentence__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group__1"


    // $ANTLR start "rule__LineSubSentence__Group__1__Impl"
    // InternalNLX.g:7008:1: rule__LineSubSentence__Group__1__Impl : ( ( rule__LineSubSentence__ElementsAssignment_1 ) ) ;
    public final void rule__LineSubSentence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7012:1: ( ( ( rule__LineSubSentence__ElementsAssignment_1 ) ) )
            // InternalNLX.g:7013:1: ( ( rule__LineSubSentence__ElementsAssignment_1 ) )
            {
            // InternalNLX.g:7013:1: ( ( rule__LineSubSentence__ElementsAssignment_1 ) )
            // InternalNLX.g:7014:2: ( rule__LineSubSentence__ElementsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSubSentenceAccess().getElementsAssignment_1()); 
            }
            // InternalNLX.g:7015:2: ( rule__LineSubSentence__ElementsAssignment_1 )
            // InternalNLX.g:7015:3: rule__LineSubSentence__ElementsAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSubSentence__ElementsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSubSentenceAccess().getElementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group__1__Impl"


    // $ANTLR start "rule__LineSubSentence__Group__2"
    // InternalNLX.g:7023:1: rule__LineSubSentence__Group__2 : rule__LineSubSentence__Group__2__Impl rule__LineSubSentence__Group__3 ;
    public final void rule__LineSubSentence__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7027:1: ( rule__LineSubSentence__Group__2__Impl rule__LineSubSentence__Group__3 )
            // InternalNLX.g:7028:2: rule__LineSubSentence__Group__2__Impl rule__LineSubSentence__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__LineSubSentence__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSubSentence__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group__2"


    // $ANTLR start "rule__LineSubSentence__Group__2__Impl"
    // InternalNLX.g:7035:1: rule__LineSubSentence__Group__2__Impl : ( ( rule__LineSubSentence__Group_2__0 )* ) ;
    public final void rule__LineSubSentence__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7039:1: ( ( ( rule__LineSubSentence__Group_2__0 )* ) )
            // InternalNLX.g:7040:1: ( ( rule__LineSubSentence__Group_2__0 )* )
            {
            // InternalNLX.g:7040:1: ( ( rule__LineSubSentence__Group_2__0 )* )
            // InternalNLX.g:7041:2: ( rule__LineSubSentence__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSubSentenceAccess().getGroup_2()); 
            }
            // InternalNLX.g:7042:2: ( rule__LineSubSentence__Group_2__0 )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==RULE_SPACE) ) {
                    int LA102_1 = input.LA(2);

                    if ( ((LA102_1>=RULE_HASH && LA102_1<=RULE_INT)||(LA102_1>=RULE_MULTI && LA102_1<=RULE_MINUS)||LA102_1==RULE_DOT||(LA102_1>=RULE_ID && LA102_1<=RULE_DOUBLE_DOT)||(LA102_1>=RULE_HEX_NUMBER && LA102_1<=RULE_TRIPLE_DOT)||(LA102_1>=RULE_BR_O && LA102_1<=RULE_EXBR_O)||LA102_1==RULE_EXBRC_O||(LA102_1>=RULE_CURRENCY && LA102_1<=RULE_AT)) ) {
                        alt102=1;
                    }


                }


                switch (alt102) {
            	case 1 :
            	    // InternalNLX.g:7042:3: rule__LineSubSentence__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    rule__LineSubSentence__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSubSentenceAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group__2__Impl"


    // $ANTLR start "rule__LineSubSentence__Group__3"
    // InternalNLX.g:7050:1: rule__LineSubSentence__Group__3 : rule__LineSubSentence__Group__3__Impl ;
    public final void rule__LineSubSentence__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7054:1: ( rule__LineSubSentence__Group__3__Impl )
            // InternalNLX.g:7055:2: rule__LineSubSentence__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSubSentence__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group__3"


    // $ANTLR start "rule__LineSubSentence__Group__3__Impl"
    // InternalNLX.g:7061:1: rule__LineSubSentence__Group__3__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__LineSubSentence__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7065:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:7066:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:7066:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:7067:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSubSentenceAccess().getSPACETerminalRuleCall_3()); 
            }
            // InternalNLX.g:7068:2: ( RULE_SPACE )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==RULE_SPACE) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalNLX.g:7068:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSubSentenceAccess().getSPACETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group__3__Impl"


    // $ANTLR start "rule__LineSubSentence__Group_2__0"
    // InternalNLX.g:7077:1: rule__LineSubSentence__Group_2__0 : rule__LineSubSentence__Group_2__0__Impl rule__LineSubSentence__Group_2__1 ;
    public final void rule__LineSubSentence__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7081:1: ( rule__LineSubSentence__Group_2__0__Impl rule__LineSubSentence__Group_2__1 )
            // InternalNLX.g:7082:2: rule__LineSubSentence__Group_2__0__Impl rule__LineSubSentence__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__LineSubSentence__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSubSentence__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group_2__0"


    // $ANTLR start "rule__LineSubSentence__Group_2__0__Impl"
    // InternalNLX.g:7089:1: rule__LineSubSentence__Group_2__0__Impl : ( RULE_SPACE ) ;
    public final void rule__LineSubSentence__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7093:1: ( ( RULE_SPACE ) )
            // InternalNLX.g:7094:1: ( RULE_SPACE )
            {
            // InternalNLX.g:7094:1: ( RULE_SPACE )
            // InternalNLX.g:7095:2: RULE_SPACE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSubSentenceAccess().getSPACETerminalRuleCall_2_0()); 
            }
            match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSubSentenceAccess().getSPACETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group_2__0__Impl"


    // $ANTLR start "rule__LineSubSentence__Group_2__1"
    // InternalNLX.g:7104:1: rule__LineSubSentence__Group_2__1 : rule__LineSubSentence__Group_2__1__Impl ;
    public final void rule__LineSubSentence__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7108:1: ( rule__LineSubSentence__Group_2__1__Impl )
            // InternalNLX.g:7109:2: rule__LineSubSentence__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSubSentence__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group_2__1"


    // $ANTLR start "rule__LineSubSentence__Group_2__1__Impl"
    // InternalNLX.g:7115:1: rule__LineSubSentence__Group_2__1__Impl : ( ( rule__LineSubSentence__ElementsAssignment_2_1 ) ) ;
    public final void rule__LineSubSentence__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7119:1: ( ( ( rule__LineSubSentence__ElementsAssignment_2_1 ) ) )
            // InternalNLX.g:7120:1: ( ( rule__LineSubSentence__ElementsAssignment_2_1 ) )
            {
            // InternalNLX.g:7120:1: ( ( rule__LineSubSentence__ElementsAssignment_2_1 ) )
            // InternalNLX.g:7121:2: ( rule__LineSubSentence__ElementsAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSubSentenceAccess().getElementsAssignment_2_1()); 
            }
            // InternalNLX.g:7122:2: ( rule__LineSubSentence__ElementsAssignment_2_1 )
            // InternalNLX.g:7122:3: rule__LineSubSentence__ElementsAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LineSubSentence__ElementsAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSubSentenceAccess().getElementsAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__Group_2__1__Impl"


    // $ANTLR start "rule__ListPointNum__Group_0__0"
    // InternalNLX.g:7131:1: rule__ListPointNum__Group_0__0 : rule__ListPointNum__Group_0__0__Impl rule__ListPointNum__Group_0__1 ;
    public final void rule__ListPointNum__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7135:1: ( rule__ListPointNum__Group_0__0__Impl rule__ListPointNum__Group_0__1 )
            // InternalNLX.g:7136:2: rule__ListPointNum__Group_0__0__Impl rule__ListPointNum__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__ListPointNum__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_0__0"


    // $ANTLR start "rule__ListPointNum__Group_0__0__Impl"
    // InternalNLX.g:7143:1: rule__ListPointNum__Group_0__0__Impl : ( RULE_INT ) ;
    public final void rule__ListPointNum__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7147:1: ( ( RULE_INT ) )
            // InternalNLX.g:7148:1: ( RULE_INT )
            {
            // InternalNLX.g:7148:1: ( RULE_INT )
            // InternalNLX.g:7149:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumAccess().getINTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumAccess().getINTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_0__0__Impl"


    // $ANTLR start "rule__ListPointNum__Group_0__1"
    // InternalNLX.g:7158:1: rule__ListPointNum__Group_0__1 : rule__ListPointNum__Group_0__1__Impl ;
    public final void rule__ListPointNum__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7162:1: ( rule__ListPointNum__Group_0__1__Impl )
            // InternalNLX.g:7163:2: rule__ListPointNum__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_0__1"


    // $ANTLR start "rule__ListPointNum__Group_0__1__Impl"
    // InternalNLX.g:7169:1: rule__ListPointNum__Group_0__1__Impl : ( ( rule__ListPointNum__Alternatives_0_1 ) ) ;
    public final void rule__ListPointNum__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7173:1: ( ( ( rule__ListPointNum__Alternatives_0_1 ) ) )
            // InternalNLX.g:7174:1: ( ( rule__ListPointNum__Alternatives_0_1 ) )
            {
            // InternalNLX.g:7174:1: ( ( rule__ListPointNum__Alternatives_0_1 ) )
            // InternalNLX.g:7175:2: ( rule__ListPointNum__Alternatives_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumAccess().getAlternatives_0_1()); 
            }
            // InternalNLX.g:7176:2: ( rule__ListPointNum__Alternatives_0_1 )
            // InternalNLX.g:7176:3: rule__ListPointNum__Alternatives_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Alternatives_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumAccess().getAlternatives_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_0__1__Impl"


    // $ANTLR start "rule__ListPointNum__Group_0_1_0__0"
    // InternalNLX.g:7185:1: rule__ListPointNum__Group_0_1_0__0 : rule__ListPointNum__Group_0_1_0__0__Impl rule__ListPointNum__Group_0_1_0__1 ;
    public final void rule__ListPointNum__Group_0_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7189:1: ( rule__ListPointNum__Group_0_1_0__0__Impl rule__ListPointNum__Group_0_1_0__1 )
            // InternalNLX.g:7190:2: rule__ListPointNum__Group_0_1_0__0__Impl rule__ListPointNum__Group_0_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ListPointNum__Group_0_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Group_0_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_0_1_0__0"


    // $ANTLR start "rule__ListPointNum__Group_0_1_0__0__Impl"
    // InternalNLX.g:7197:1: rule__ListPointNum__Group_0_1_0__0__Impl : ( RULE_DOT ) ;
    public final void rule__ListPointNum__Group_0_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7201:1: ( ( RULE_DOT ) )
            // InternalNLX.g:7202:1: ( RULE_DOT )
            {
            // InternalNLX.g:7202:1: ( RULE_DOT )
            // InternalNLX.g:7203:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumAccess().getDOTTerminalRuleCall_0_1_0_0()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumAccess().getDOTTerminalRuleCall_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_0_1_0__0__Impl"


    // $ANTLR start "rule__ListPointNum__Group_0_1_0__1"
    // InternalNLX.g:7212:1: rule__ListPointNum__Group_0_1_0__1 : rule__ListPointNum__Group_0_1_0__1__Impl rule__ListPointNum__Group_0_1_0__2 ;
    public final void rule__ListPointNum__Group_0_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7216:1: ( rule__ListPointNum__Group_0_1_0__1__Impl rule__ListPointNum__Group_0_1_0__2 )
            // InternalNLX.g:7217:2: rule__ListPointNum__Group_0_1_0__1__Impl rule__ListPointNum__Group_0_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__ListPointNum__Group_0_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Group_0_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_0_1_0__1"


    // $ANTLR start "rule__ListPointNum__Group_0_1_0__1__Impl"
    // InternalNLX.g:7224:1: rule__ListPointNum__Group_0_1_0__1__Impl : ( RULE_BR_CL ) ;
    public final void rule__ListPointNum__Group_0_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7228:1: ( ( RULE_BR_CL ) )
            // InternalNLX.g:7229:1: ( RULE_BR_CL )
            {
            // InternalNLX.g:7229:1: ( RULE_BR_CL )
            // InternalNLX.g:7230:2: RULE_BR_CL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumAccess().getBR_CLTerminalRuleCall_0_1_0_1()); 
            }
            match(input,RULE_BR_CL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumAccess().getBR_CLTerminalRuleCall_0_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_0_1_0__1__Impl"


    // $ANTLR start "rule__ListPointNum__Group_0_1_0__2"
    // InternalNLX.g:7239:1: rule__ListPointNum__Group_0_1_0__2 : rule__ListPointNum__Group_0_1_0__2__Impl ;
    public final void rule__ListPointNum__Group_0_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7243:1: ( rule__ListPointNum__Group_0_1_0__2__Impl )
            // InternalNLX.g:7244:2: rule__ListPointNum__Group_0_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Group_0_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_0_1_0__2"


    // $ANTLR start "rule__ListPointNum__Group_0_1_0__2__Impl"
    // InternalNLX.g:7250:1: rule__ListPointNum__Group_0_1_0__2__Impl : ( RULE_SPACE ) ;
    public final void rule__ListPointNum__Group_0_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7254:1: ( ( RULE_SPACE ) )
            // InternalNLX.g:7255:1: ( RULE_SPACE )
            {
            // InternalNLX.g:7255:1: ( RULE_SPACE )
            // InternalNLX.g:7256:2: RULE_SPACE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumAccess().getSPACETerminalRuleCall_0_1_0_2()); 
            }
            match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumAccess().getSPACETerminalRuleCall_0_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_0_1_0__2__Impl"


    // $ANTLR start "rule__ListPointNum__Group_1__0"
    // InternalNLX.g:7266:1: rule__ListPointNum__Group_1__0 : rule__ListPointNum__Group_1__0__Impl rule__ListPointNum__Group_1__1 ;
    public final void rule__ListPointNum__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7270:1: ( rule__ListPointNum__Group_1__0__Impl rule__ListPointNum__Group_1__1 )
            // InternalNLX.g:7271:2: rule__ListPointNum__Group_1__0__Impl rule__ListPointNum__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__ListPointNum__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_1__0"


    // $ANTLR start "rule__ListPointNum__Group_1__0__Impl"
    // InternalNLX.g:7278:1: rule__ListPointNum__Group_1__0__Impl : ( RULE_ALPHA ) ;
    public final void rule__ListPointNum__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7282:1: ( ( RULE_ALPHA ) )
            // InternalNLX.g:7283:1: ( RULE_ALPHA )
            {
            // InternalNLX.g:7283:1: ( RULE_ALPHA )
            // InternalNLX.g:7284:2: RULE_ALPHA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumAccess().getALPHATerminalRuleCall_1_0()); 
            }
            match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumAccess().getALPHATerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_1__0__Impl"


    // $ANTLR start "rule__ListPointNum__Group_1__1"
    // InternalNLX.g:7293:1: rule__ListPointNum__Group_1__1 : rule__ListPointNum__Group_1__1__Impl ;
    public final void rule__ListPointNum__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7297:1: ( rule__ListPointNum__Group_1__1__Impl )
            // InternalNLX.g:7298:2: rule__ListPointNum__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_1__1"


    // $ANTLR start "rule__ListPointNum__Group_1__1__Impl"
    // InternalNLX.g:7304:1: rule__ListPointNum__Group_1__1__Impl : ( ( rule__ListPointNum__Alternatives_1_1 ) ) ;
    public final void rule__ListPointNum__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7308:1: ( ( ( rule__ListPointNum__Alternatives_1_1 ) ) )
            // InternalNLX.g:7309:1: ( ( rule__ListPointNum__Alternatives_1_1 ) )
            {
            // InternalNLX.g:7309:1: ( ( rule__ListPointNum__Alternatives_1_1 ) )
            // InternalNLX.g:7310:2: ( rule__ListPointNum__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumAccess().getAlternatives_1_1()); 
            }
            // InternalNLX.g:7311:2: ( rule__ListPointNum__Alternatives_1_1 )
            // InternalNLX.g:7311:3: rule__ListPointNum__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_1__1__Impl"


    // $ANTLR start "rule__ListPointNum__Group_1_1_0__0"
    // InternalNLX.g:7320:1: rule__ListPointNum__Group_1_1_0__0 : rule__ListPointNum__Group_1_1_0__0__Impl rule__ListPointNum__Group_1_1_0__1 ;
    public final void rule__ListPointNum__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7324:1: ( rule__ListPointNum__Group_1_1_0__0__Impl rule__ListPointNum__Group_1_1_0__1 )
            // InternalNLX.g:7325:2: rule__ListPointNum__Group_1_1_0__0__Impl rule__ListPointNum__Group_1_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ListPointNum__Group_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Group_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_1_1_0__0"


    // $ANTLR start "rule__ListPointNum__Group_1_1_0__0__Impl"
    // InternalNLX.g:7332:1: rule__ListPointNum__Group_1_1_0__0__Impl : ( RULE_DOT ) ;
    public final void rule__ListPointNum__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7336:1: ( ( RULE_DOT ) )
            // InternalNLX.g:7337:1: ( RULE_DOT )
            {
            // InternalNLX.g:7337:1: ( RULE_DOT )
            // InternalNLX.g:7338:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumAccess().getDOTTerminalRuleCall_1_1_0_0()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumAccess().getDOTTerminalRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__ListPointNum__Group_1_1_0__1"
    // InternalNLX.g:7347:1: rule__ListPointNum__Group_1_1_0__1 : rule__ListPointNum__Group_1_1_0__1__Impl rule__ListPointNum__Group_1_1_0__2 ;
    public final void rule__ListPointNum__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7351:1: ( rule__ListPointNum__Group_1_1_0__1__Impl rule__ListPointNum__Group_1_1_0__2 )
            // InternalNLX.g:7352:2: rule__ListPointNum__Group_1_1_0__1__Impl rule__ListPointNum__Group_1_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__ListPointNum__Group_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Group_1_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_1_1_0__1"


    // $ANTLR start "rule__ListPointNum__Group_1_1_0__1__Impl"
    // InternalNLX.g:7359:1: rule__ListPointNum__Group_1_1_0__1__Impl : ( RULE_BR_CL ) ;
    public final void rule__ListPointNum__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7363:1: ( ( RULE_BR_CL ) )
            // InternalNLX.g:7364:1: ( RULE_BR_CL )
            {
            // InternalNLX.g:7364:1: ( RULE_BR_CL )
            // InternalNLX.g:7365:2: RULE_BR_CL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumAccess().getBR_CLTerminalRuleCall_1_1_0_1()); 
            }
            match(input,RULE_BR_CL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumAccess().getBR_CLTerminalRuleCall_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__ListPointNum__Group_1_1_0__2"
    // InternalNLX.g:7374:1: rule__ListPointNum__Group_1_1_0__2 : rule__ListPointNum__Group_1_1_0__2__Impl ;
    public final void rule__ListPointNum__Group_1_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7378:1: ( rule__ListPointNum__Group_1_1_0__2__Impl )
            // InternalNLX.g:7379:2: rule__ListPointNum__Group_1_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListPointNum__Group_1_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_1_1_0__2"


    // $ANTLR start "rule__ListPointNum__Group_1_1_0__2__Impl"
    // InternalNLX.g:7385:1: rule__ListPointNum__Group_1_1_0__2__Impl : ( RULE_SPACE ) ;
    public final void rule__ListPointNum__Group_1_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7389:1: ( ( RULE_SPACE ) )
            // InternalNLX.g:7390:1: ( RULE_SPACE )
            {
            // InternalNLX.g:7390:1: ( RULE_SPACE )
            // InternalNLX.g:7391:2: RULE_SPACE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListPointNumAccess().getSPACETerminalRuleCall_1_1_0_2()); 
            }
            match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListPointNumAccess().getSPACETerminalRuleCall_1_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListPointNum__Group_1_1_0__2__Impl"


    // $ANTLR start "rule__BracketSentence__Group__0"
    // InternalNLX.g:7401:1: rule__BracketSentence__Group__0 : rule__BracketSentence__Group__0__Impl rule__BracketSentence__Group__1 ;
    public final void rule__BracketSentence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7405:1: ( rule__BracketSentence__Group__0__Impl rule__BracketSentence__Group__1 )
            // InternalNLX.g:7406:2: rule__BracketSentence__Group__0__Impl rule__BracketSentence__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__BracketSentence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__0"


    // $ANTLR start "rule__BracketSentence__Group__0__Impl"
    // InternalNLX.g:7413:1: rule__BracketSentence__Group__0__Impl : ( () ) ;
    public final void rule__BracketSentence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7417:1: ( ( () ) )
            // InternalNLX.g:7418:1: ( () )
            {
            // InternalNLX.g:7418:1: ( () )
            // InternalNLX.g:7419:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getBracketSentenceAction_0()); 
            }
            // InternalNLX.g:7420:2: ()
            // InternalNLX.g:7420:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getBracketSentenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__0__Impl"


    // $ANTLR start "rule__BracketSentence__Group__1"
    // InternalNLX.g:7428:1: rule__BracketSentence__Group__1 : rule__BracketSentence__Group__1__Impl rule__BracketSentence__Group__2 ;
    public final void rule__BracketSentence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7432:1: ( rule__BracketSentence__Group__1__Impl rule__BracketSentence__Group__2 )
            // InternalNLX.g:7433:2: rule__BracketSentence__Group__1__Impl rule__BracketSentence__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__BracketSentence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__1"


    // $ANTLR start "rule__BracketSentence__Group__1__Impl"
    // InternalNLX.g:7440:1: rule__BracketSentence__Group__1__Impl : ( ( rule__BracketSentence__OpenAssignment_1 ) ) ;
    public final void rule__BracketSentence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7444:1: ( ( ( rule__BracketSentence__OpenAssignment_1 ) ) )
            // InternalNLX.g:7445:1: ( ( rule__BracketSentence__OpenAssignment_1 ) )
            {
            // InternalNLX.g:7445:1: ( ( rule__BracketSentence__OpenAssignment_1 ) )
            // InternalNLX.g:7446:2: ( rule__BracketSentence__OpenAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getOpenAssignment_1()); 
            }
            // InternalNLX.g:7447:2: ( rule__BracketSentence__OpenAssignment_1 )
            // InternalNLX.g:7447:3: rule__BracketSentence__OpenAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__OpenAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getOpenAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__1__Impl"


    // $ANTLR start "rule__BracketSentence__Group__2"
    // InternalNLX.g:7455:1: rule__BracketSentence__Group__2 : rule__BracketSentence__Group__2__Impl rule__BracketSentence__Group__3 ;
    public final void rule__BracketSentence__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7459:1: ( rule__BracketSentence__Group__2__Impl rule__BracketSentence__Group__3 )
            // InternalNLX.g:7460:2: rule__BracketSentence__Group__2__Impl rule__BracketSentence__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__BracketSentence__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__2"


    // $ANTLR start "rule__BracketSentence__Group__2__Impl"
    // InternalNLX.g:7467:1: rule__BracketSentence__Group__2__Impl : ( ( rule__BracketSentence__Group_2__0 )? ) ;
    public final void rule__BracketSentence__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7471:1: ( ( ( rule__BracketSentence__Group_2__0 )? ) )
            // InternalNLX.g:7472:1: ( ( rule__BracketSentence__Group_2__0 )? )
            {
            // InternalNLX.g:7472:1: ( ( rule__BracketSentence__Group_2__0 )? )
            // InternalNLX.g:7473:2: ( rule__BracketSentence__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getGroup_2()); 
            }
            // InternalNLX.g:7474:2: ( rule__BracketSentence__Group_2__0 )?
            int alt104=2;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalNLX.g:7474:3: rule__BracketSentence__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__BracketSentence__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__2__Impl"


    // $ANTLR start "rule__BracketSentence__Group__3"
    // InternalNLX.g:7482:1: rule__BracketSentence__Group__3 : rule__BracketSentence__Group__3__Impl rule__BracketSentence__Group__4 ;
    public final void rule__BracketSentence__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7486:1: ( rule__BracketSentence__Group__3__Impl rule__BracketSentence__Group__4 )
            // InternalNLX.g:7487:2: rule__BracketSentence__Group__3__Impl rule__BracketSentence__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__BracketSentence__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__3"


    // $ANTLR start "rule__BracketSentence__Group__3__Impl"
    // InternalNLX.g:7494:1: rule__BracketSentence__Group__3__Impl : ( ( rule__BracketSentence__SeparatorAssignment_3 )? ) ;
    public final void rule__BracketSentence__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7498:1: ( ( ( rule__BracketSentence__SeparatorAssignment_3 )? ) )
            // InternalNLX.g:7499:1: ( ( rule__BracketSentence__SeparatorAssignment_3 )? )
            {
            // InternalNLX.g:7499:1: ( ( rule__BracketSentence__SeparatorAssignment_3 )? )
            // InternalNLX.g:7500:2: ( rule__BracketSentence__SeparatorAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getSeparatorAssignment_3()); 
            }
            // InternalNLX.g:7501:2: ( rule__BracketSentence__SeparatorAssignment_3 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( ((LA105_0>=RULE_FULL_STOP_IM && LA105_0<=RULE_FULL_STOP_NL)) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalNLX.g:7501:3: rule__BracketSentence__SeparatorAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__BracketSentence__SeparatorAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getSeparatorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__3__Impl"


    // $ANTLR start "rule__BracketSentence__Group__4"
    // InternalNLX.g:7509:1: rule__BracketSentence__Group__4 : rule__BracketSentence__Group__4__Impl rule__BracketSentence__Group__5 ;
    public final void rule__BracketSentence__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7513:1: ( rule__BracketSentence__Group__4__Impl rule__BracketSentence__Group__5 )
            // InternalNLX.g:7514:2: rule__BracketSentence__Group__4__Impl rule__BracketSentence__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__BracketSentence__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__4"


    // $ANTLR start "rule__BracketSentence__Group__4__Impl"
    // InternalNLX.g:7521:1: rule__BracketSentence__Group__4__Impl : ( ( rule__BracketSentence__Alternatives_4 )* ) ;
    public final void rule__BracketSentence__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7525:1: ( ( ( rule__BracketSentence__Alternatives_4 )* ) )
            // InternalNLX.g:7526:1: ( ( rule__BracketSentence__Alternatives_4 )* )
            {
            // InternalNLX.g:7526:1: ( ( rule__BracketSentence__Alternatives_4 )* )
            // InternalNLX.g:7527:2: ( rule__BracketSentence__Alternatives_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getAlternatives_4()); 
            }
            // InternalNLX.g:7528:2: ( rule__BracketSentence__Alternatives_4 )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==RULE_SPACE) ) {
                    int LA106_1 = input.LA(2);

                    if ( (synpred163_InternalNLX()) ) {
                        alt106=1;
                    }


                }
                else if ( (LA106_0==RULE_NEWLINE) ) {
                    alt106=1;
                }


                switch (alt106) {
            	case 1 :
            	    // InternalNLX.g:7528:3: rule__BracketSentence__Alternatives_4
            	    {
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    rule__BracketSentence__Alternatives_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getAlternatives_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__4__Impl"


    // $ANTLR start "rule__BracketSentence__Group__5"
    // InternalNLX.g:7536:1: rule__BracketSentence__Group__5 : rule__BracketSentence__Group__5__Impl rule__BracketSentence__Group__6 ;
    public final void rule__BracketSentence__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7540:1: ( rule__BracketSentence__Group__5__Impl rule__BracketSentence__Group__6 )
            // InternalNLX.g:7541:2: rule__BracketSentence__Group__5__Impl rule__BracketSentence__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__BracketSentence__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__5"


    // $ANTLR start "rule__BracketSentence__Group__5__Impl"
    // InternalNLX.g:7548:1: rule__BracketSentence__Group__5__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__BracketSentence__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7552:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:7553:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:7553:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:7554:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getSPACETerminalRuleCall_5()); 
            }
            // InternalNLX.g:7555:2: ( RULE_SPACE )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==RULE_SPACE) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalNLX.g:7555:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getSPACETerminalRuleCall_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__5__Impl"


    // $ANTLR start "rule__BracketSentence__Group__6"
    // InternalNLX.g:7563:1: rule__BracketSentence__Group__6 : rule__BracketSentence__Group__6__Impl ;
    public final void rule__BracketSentence__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7567:1: ( rule__BracketSentence__Group__6__Impl )
            // InternalNLX.g:7568:2: rule__BracketSentence__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__6"


    // $ANTLR start "rule__BracketSentence__Group__6__Impl"
    // InternalNLX.g:7574:1: rule__BracketSentence__Group__6__Impl : ( ( rule__BracketSentence__CloseAssignment_6 ) ) ;
    public final void rule__BracketSentence__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7578:1: ( ( ( rule__BracketSentence__CloseAssignment_6 ) ) )
            // InternalNLX.g:7579:1: ( ( rule__BracketSentence__CloseAssignment_6 ) )
            {
            // InternalNLX.g:7579:1: ( ( rule__BracketSentence__CloseAssignment_6 ) )
            // InternalNLX.g:7580:2: ( rule__BracketSentence__CloseAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getCloseAssignment_6()); 
            }
            // InternalNLX.g:7581:2: ( rule__BracketSentence__CloseAssignment_6 )
            // InternalNLX.g:7581:3: rule__BracketSentence__CloseAssignment_6
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__CloseAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getCloseAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group__6__Impl"


    // $ANTLR start "rule__BracketSentence__Group_2__0"
    // InternalNLX.g:7590:1: rule__BracketSentence__Group_2__0 : rule__BracketSentence__Group_2__0__Impl rule__BracketSentence__Group_2__1 ;
    public final void rule__BracketSentence__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7594:1: ( rule__BracketSentence__Group_2__0__Impl rule__BracketSentence__Group_2__1 )
            // InternalNLX.g:7595:2: rule__BracketSentence__Group_2__0__Impl rule__BracketSentence__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__BracketSentence__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group_2__0"


    // $ANTLR start "rule__BracketSentence__Group_2__0__Impl"
    // InternalNLX.g:7602:1: rule__BracketSentence__Group_2__0__Impl : ( ( rule__BracketSentence__BrackedSentencesAssignment_2_0 ) ) ;
    public final void rule__BracketSentence__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7606:1: ( ( ( rule__BracketSentence__BrackedSentencesAssignment_2_0 ) ) )
            // InternalNLX.g:7607:1: ( ( rule__BracketSentence__BrackedSentencesAssignment_2_0 ) )
            {
            // InternalNLX.g:7607:1: ( ( rule__BracketSentence__BrackedSentencesAssignment_2_0 ) )
            // InternalNLX.g:7608:2: ( rule__BracketSentence__BrackedSentencesAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getBrackedSentencesAssignment_2_0()); 
            }
            // InternalNLX.g:7609:2: ( rule__BracketSentence__BrackedSentencesAssignment_2_0 )
            // InternalNLX.g:7609:3: rule__BracketSentence__BrackedSentencesAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__BrackedSentencesAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getBrackedSentencesAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group_2__0__Impl"


    // $ANTLR start "rule__BracketSentence__Group_2__1"
    // InternalNLX.g:7617:1: rule__BracketSentence__Group_2__1 : rule__BracketSentence__Group_2__1__Impl ;
    public final void rule__BracketSentence__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7621:1: ( rule__BracketSentence__Group_2__1__Impl )
            // InternalNLX.g:7622:2: rule__BracketSentence__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group_2__1"


    // $ANTLR start "rule__BracketSentence__Group_2__1__Impl"
    // InternalNLX.g:7628:1: rule__BracketSentence__Group_2__1__Impl : ( ( rule__BracketSentence__Group_2_1__0 )* ) ;
    public final void rule__BracketSentence__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7632:1: ( ( ( rule__BracketSentence__Group_2_1__0 )* ) )
            // InternalNLX.g:7633:1: ( ( rule__BracketSentence__Group_2_1__0 )* )
            {
            // InternalNLX.g:7633:1: ( ( rule__BracketSentence__Group_2_1__0 )* )
            // InternalNLX.g:7634:2: ( rule__BracketSentence__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getGroup_2_1()); 
            }
            // InternalNLX.g:7635:2: ( rule__BracketSentence__Group_2_1__0 )*
            loop108:
            do {
                int alt108=2;
                alt108 = dfa108.predict(input);
                switch (alt108) {
            	case 1 :
            	    // InternalNLX.g:7635:3: rule__BracketSentence__Group_2_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    rule__BracketSentence__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group_2__1__Impl"


    // $ANTLR start "rule__BracketSentence__Group_2_1__0"
    // InternalNLX.g:7644:1: rule__BracketSentence__Group_2_1__0 : rule__BracketSentence__Group_2_1__0__Impl rule__BracketSentence__Group_2_1__1 ;
    public final void rule__BracketSentence__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7648:1: ( rule__BracketSentence__Group_2_1__0__Impl rule__BracketSentence__Group_2_1__1 )
            // InternalNLX.g:7649:2: rule__BracketSentence__Group_2_1__0__Impl rule__BracketSentence__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__BracketSentence__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group_2_1__0"


    // $ANTLR start "rule__BracketSentence__Group_2_1__0__Impl"
    // InternalNLX.g:7656:1: rule__BracketSentence__Group_2_1__0__Impl : ( ( rule__BracketSentence__SeparatorAssignment_2_1_0 ) ) ;
    public final void rule__BracketSentence__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7660:1: ( ( ( rule__BracketSentence__SeparatorAssignment_2_1_0 ) ) )
            // InternalNLX.g:7661:1: ( ( rule__BracketSentence__SeparatorAssignment_2_1_0 ) )
            {
            // InternalNLX.g:7661:1: ( ( rule__BracketSentence__SeparatorAssignment_2_1_0 ) )
            // InternalNLX.g:7662:2: ( rule__BracketSentence__SeparatorAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getSeparatorAssignment_2_1_0()); 
            }
            // InternalNLX.g:7663:2: ( rule__BracketSentence__SeparatorAssignment_2_1_0 )
            // InternalNLX.g:7663:3: rule__BracketSentence__SeparatorAssignment_2_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__SeparatorAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getSeparatorAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group_2_1__0__Impl"


    // $ANTLR start "rule__BracketSentence__Group_2_1__1"
    // InternalNLX.g:7671:1: rule__BracketSentence__Group_2_1__1 : rule__BracketSentence__Group_2_1__1__Impl ;
    public final void rule__BracketSentence__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7675:1: ( rule__BracketSentence__Group_2_1__1__Impl )
            // InternalNLX.g:7676:2: rule__BracketSentence__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group_2_1__1"


    // $ANTLR start "rule__BracketSentence__Group_2_1__1__Impl"
    // InternalNLX.g:7682:1: rule__BracketSentence__Group_2_1__1__Impl : ( ( rule__BracketSentence__BrackedSentencesAssignment_2_1_1 ) ) ;
    public final void rule__BracketSentence__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7686:1: ( ( ( rule__BracketSentence__BrackedSentencesAssignment_2_1_1 ) ) )
            // InternalNLX.g:7687:1: ( ( rule__BracketSentence__BrackedSentencesAssignment_2_1_1 ) )
            {
            // InternalNLX.g:7687:1: ( ( rule__BracketSentence__BrackedSentencesAssignment_2_1_1 ) )
            // InternalNLX.g:7688:2: ( rule__BracketSentence__BrackedSentencesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getBrackedSentencesAssignment_2_1_1()); 
            }
            // InternalNLX.g:7689:2: ( rule__BracketSentence__BrackedSentencesAssignment_2_1_1 )
            // InternalNLX.g:7689:3: rule__BracketSentence__BrackedSentencesAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__BrackedSentencesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getBrackedSentencesAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__Group_2_1__1__Impl"


    // $ANTLR start "rule__ExtBracketSentence__Group__0"
    // InternalNLX.g:7698:1: rule__ExtBracketSentence__Group__0 : rule__ExtBracketSentence__Group__0__Impl rule__ExtBracketSentence__Group__1 ;
    public final void rule__ExtBracketSentence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7702:1: ( rule__ExtBracketSentence__Group__0__Impl rule__ExtBracketSentence__Group__1 )
            // InternalNLX.g:7703:2: rule__ExtBracketSentence__Group__0__Impl rule__ExtBracketSentence__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__ExtBracketSentence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__0"


    // $ANTLR start "rule__ExtBracketSentence__Group__0__Impl"
    // InternalNLX.g:7710:1: rule__ExtBracketSentence__Group__0__Impl : ( () ) ;
    public final void rule__ExtBracketSentence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7714:1: ( ( () ) )
            // InternalNLX.g:7715:1: ( () )
            {
            // InternalNLX.g:7715:1: ( () )
            // InternalNLX.g:7716:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getExtBracketSentenceAction_0()); 
            }
            // InternalNLX.g:7717:2: ()
            // InternalNLX.g:7717:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getExtBracketSentenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__0__Impl"


    // $ANTLR start "rule__ExtBracketSentence__Group__1"
    // InternalNLX.g:7725:1: rule__ExtBracketSentence__Group__1 : rule__ExtBracketSentence__Group__1__Impl rule__ExtBracketSentence__Group__2 ;
    public final void rule__ExtBracketSentence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7729:1: ( rule__ExtBracketSentence__Group__1__Impl rule__ExtBracketSentence__Group__2 )
            // InternalNLX.g:7730:2: rule__ExtBracketSentence__Group__1__Impl rule__ExtBracketSentence__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__ExtBracketSentence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__1"


    // $ANTLR start "rule__ExtBracketSentence__Group__1__Impl"
    // InternalNLX.g:7737:1: rule__ExtBracketSentence__Group__1__Impl : ( ( rule__ExtBracketSentence__OpenAssignment_1 ) ) ;
    public final void rule__ExtBracketSentence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7741:1: ( ( ( rule__ExtBracketSentence__OpenAssignment_1 ) ) )
            // InternalNLX.g:7742:1: ( ( rule__ExtBracketSentence__OpenAssignment_1 ) )
            {
            // InternalNLX.g:7742:1: ( ( rule__ExtBracketSentence__OpenAssignment_1 ) )
            // InternalNLX.g:7743:2: ( rule__ExtBracketSentence__OpenAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getOpenAssignment_1()); 
            }
            // InternalNLX.g:7744:2: ( rule__ExtBracketSentence__OpenAssignment_1 )
            // InternalNLX.g:7744:3: rule__ExtBracketSentence__OpenAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__OpenAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getOpenAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__1__Impl"


    // $ANTLR start "rule__ExtBracketSentence__Group__2"
    // InternalNLX.g:7752:1: rule__ExtBracketSentence__Group__2 : rule__ExtBracketSentence__Group__2__Impl rule__ExtBracketSentence__Group__3 ;
    public final void rule__ExtBracketSentence__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7756:1: ( rule__ExtBracketSentence__Group__2__Impl rule__ExtBracketSentence__Group__3 )
            // InternalNLX.g:7757:2: rule__ExtBracketSentence__Group__2__Impl rule__ExtBracketSentence__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__ExtBracketSentence__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__2"


    // $ANTLR start "rule__ExtBracketSentence__Group__2__Impl"
    // InternalNLX.g:7764:1: rule__ExtBracketSentence__Group__2__Impl : ( ( rule__ExtBracketSentence__Group_2__0 )? ) ;
    public final void rule__ExtBracketSentence__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7768:1: ( ( ( rule__ExtBracketSentence__Group_2__0 )? ) )
            // InternalNLX.g:7769:1: ( ( rule__ExtBracketSentence__Group_2__0 )? )
            {
            // InternalNLX.g:7769:1: ( ( rule__ExtBracketSentence__Group_2__0 )? )
            // InternalNLX.g:7770:2: ( rule__ExtBracketSentence__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getGroup_2()); 
            }
            // InternalNLX.g:7771:2: ( rule__ExtBracketSentence__Group_2__0 )?
            int alt109=2;
            switch ( input.LA(1) ) {
                case RULE_SPACE:
                    {
                    int LA109_1 = input.LA(2);

                    if ( ((LA109_1>=RULE_HASH && LA109_1<=RULE_NEWLINE)||(LA109_1>=RULE_SPACE && LA109_1<=RULE_MINUS)||LA109_1==RULE_DOT||(LA109_1>=RULE_ID && LA109_1<=RULE_DOUBLE_DOT)||(LA109_1>=RULE_HEX_NUMBER && LA109_1<=RULE_TRIPLE_DOT)||(LA109_1>=RULE_BR_O && LA109_1<=RULE_EXBR_O)||LA109_1==RULE_EXBRC_O||(LA109_1>=RULE_CURRENCY && LA109_1<=RULE_AT)) ) {
                        alt109=1;
                    }
                    }
                    break;
                case RULE_HASH:
                case RULE_INT:
                case RULE_NEWLINE:
                case RULE_MULTI:
                case RULE_DASH:
                case RULE_MINUS:
                case RULE_ID:
                case RULE_ID_C:
                case RULE_ALL_ALPHA:
                case RULE_ALPHA:
                case RULE_IT_ID:
                case RULE_DOUBLE_DOT:
                case RULE_HEX_NUMBER:
                case RULE_CURL:
                case RULE_SLASH:
                case RULE_SEPARATORS:
                case RULE_SEPARATORS_IT:
                case RULE_COLON:
                case RULE_PARAGR:
                case RULE_PERCENT:
                case RULE_OPERATORS:
                case RULE_ARROW:
                case RULE_SMILEY:
                case RULE_TRIPLE_DOT:
                case RULE_BR_O:
                case RULE_EXBR_O:
                case RULE_EXBRC_O:
                case RULE_CURRENCY:
                case RULE_STRING:
                case RULE_SHORTCUTS:
                case RULE_IGNORED:
                case RULE_URL_PROTOCOL:
                case RULE_AT:
                    {
                    alt109=1;
                    }
                    break;
                case RULE_DOT:
                    {
                    int LA109_3 = input.LA(2);

                    if ( (LA109_3==RULE_INT||LA109_3==RULE_MULTI||LA109_3==RULE_DOT||(LA109_3>=RULE_ID && LA109_3<=RULE_CURL)||(LA109_3>=RULE_SEPARATORS_IT && LA109_3<=RULE_COLON)) ) {
                        alt109=1;
                    }
                    }
                    break;
            }

            switch (alt109) {
                case 1 :
                    // InternalNLX.g:7771:3: rule__ExtBracketSentence__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExtBracketSentence__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__2__Impl"

}

@SuppressWarnings("all")
abstract class InternalNLXParser7 extends InternalNLXParser6 {

        InternalNLXParser7(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalNLXParser7(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__ExtBracketSentence__Group__3"
    // InternalNLX.g:7779:1: rule__ExtBracketSentence__Group__3 : rule__ExtBracketSentence__Group__3__Impl rule__ExtBracketSentence__Group__4 ;
    public final void rule__ExtBracketSentence__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7783:1: ( rule__ExtBracketSentence__Group__3__Impl rule__ExtBracketSentence__Group__4 )
            // InternalNLX.g:7784:2: rule__ExtBracketSentence__Group__3__Impl rule__ExtBracketSentence__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__ExtBracketSentence__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__3"


    // $ANTLR start "rule__ExtBracketSentence__Group__3__Impl"
    // InternalNLX.g:7791:1: rule__ExtBracketSentence__Group__3__Impl : ( ( rule__ExtBracketSentence__SeparatorAssignment_3 )? ) ;
    public final void rule__ExtBracketSentence__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7795:1: ( ( ( rule__ExtBracketSentence__SeparatorAssignment_3 )? ) )
            // InternalNLX.g:7796:1: ( ( rule__ExtBracketSentence__SeparatorAssignment_3 )? )
            {
            // InternalNLX.g:7796:1: ( ( rule__ExtBracketSentence__SeparatorAssignment_3 )? )
            // InternalNLX.g:7797:2: ( rule__ExtBracketSentence__SeparatorAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getSeparatorAssignment_3()); 
            }
            // InternalNLX.g:7798:2: ( rule__ExtBracketSentence__SeparatorAssignment_3 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( ((LA110_0>=RULE_FULL_STOP_IM && LA110_0<=RULE_FULL_STOP_NL)) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalNLX.g:7798:3: rule__ExtBracketSentence__SeparatorAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExtBracketSentence__SeparatorAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getSeparatorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__3__Impl"


    // $ANTLR start "rule__ExtBracketSentence__Group__4"
    // InternalNLX.g:7806:1: rule__ExtBracketSentence__Group__4 : rule__ExtBracketSentence__Group__4__Impl rule__ExtBracketSentence__Group__5 ;
    public final void rule__ExtBracketSentence__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7810:1: ( rule__ExtBracketSentence__Group__4__Impl rule__ExtBracketSentence__Group__5 )
            // InternalNLX.g:7811:2: rule__ExtBracketSentence__Group__4__Impl rule__ExtBracketSentence__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__ExtBracketSentence__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__4"


    // $ANTLR start "rule__ExtBracketSentence__Group__4__Impl"
    // InternalNLX.g:7818:1: rule__ExtBracketSentence__Group__4__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__ExtBracketSentence__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7822:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:7823:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:7823:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:7824:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getSPACETerminalRuleCall_4()); 
            }
            // InternalNLX.g:7825:2: ( RULE_SPACE )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==RULE_SPACE) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalNLX.g:7825:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getSPACETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__4__Impl"


    // $ANTLR start "rule__ExtBracketSentence__Group__5"
    // InternalNLX.g:7833:1: rule__ExtBracketSentence__Group__5 : rule__ExtBracketSentence__Group__5__Impl ;
    public final void rule__ExtBracketSentence__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7837:1: ( rule__ExtBracketSentence__Group__5__Impl )
            // InternalNLX.g:7838:2: rule__ExtBracketSentence__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__5"


    // $ANTLR start "rule__ExtBracketSentence__Group__5__Impl"
    // InternalNLX.g:7844:1: rule__ExtBracketSentence__Group__5__Impl : ( ( rule__ExtBracketSentence__CloseAssignment_5 ) ) ;
    public final void rule__ExtBracketSentence__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7848:1: ( ( ( rule__ExtBracketSentence__CloseAssignment_5 ) ) )
            // InternalNLX.g:7849:1: ( ( rule__ExtBracketSentence__CloseAssignment_5 ) )
            {
            // InternalNLX.g:7849:1: ( ( rule__ExtBracketSentence__CloseAssignment_5 ) )
            // InternalNLX.g:7850:2: ( rule__ExtBracketSentence__CloseAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getCloseAssignment_5()); 
            }
            // InternalNLX.g:7851:2: ( rule__ExtBracketSentence__CloseAssignment_5 )
            // InternalNLX.g:7851:3: rule__ExtBracketSentence__CloseAssignment_5
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__CloseAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getCloseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group__5__Impl"


    // $ANTLR start "rule__ExtBracketSentence__Group_2__0"
    // InternalNLX.g:7860:1: rule__ExtBracketSentence__Group_2__0 : rule__ExtBracketSentence__Group_2__0__Impl rule__ExtBracketSentence__Group_2__1 ;
    public final void rule__ExtBracketSentence__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7864:1: ( rule__ExtBracketSentence__Group_2__0__Impl rule__ExtBracketSentence__Group_2__1 )
            // InternalNLX.g:7865:2: rule__ExtBracketSentence__Group_2__0__Impl rule__ExtBracketSentence__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__ExtBracketSentence__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group_2__0"


    // $ANTLR start "rule__ExtBracketSentence__Group_2__0__Impl"
    // InternalNLX.g:7872:1: rule__ExtBracketSentence__Group_2__0__Impl : ( ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_0 ) ) ;
    public final void rule__ExtBracketSentence__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7876:1: ( ( ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_0 ) ) )
            // InternalNLX.g:7877:1: ( ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_0 ) )
            {
            // InternalNLX.g:7877:1: ( ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_0 ) )
            // InternalNLX.g:7878:2: ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getBrackedSentencesAssignment_2_0()); 
            }
            // InternalNLX.g:7879:2: ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_0 )
            // InternalNLX.g:7879:3: rule__ExtBracketSentence__BrackedSentencesAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__BrackedSentencesAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getBrackedSentencesAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group_2__0__Impl"


    // $ANTLR start "rule__ExtBracketSentence__Group_2__1"
    // InternalNLX.g:7887:1: rule__ExtBracketSentence__Group_2__1 : rule__ExtBracketSentence__Group_2__1__Impl ;
    public final void rule__ExtBracketSentence__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7891:1: ( rule__ExtBracketSentence__Group_2__1__Impl )
            // InternalNLX.g:7892:2: rule__ExtBracketSentence__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group_2__1"


    // $ANTLR start "rule__ExtBracketSentence__Group_2__1__Impl"
    // InternalNLX.g:7898:1: rule__ExtBracketSentence__Group_2__1__Impl : ( ( rule__ExtBracketSentence__Group_2_1__0 )* ) ;
    public final void rule__ExtBracketSentence__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7902:1: ( ( ( rule__ExtBracketSentence__Group_2_1__0 )* ) )
            // InternalNLX.g:7903:1: ( ( rule__ExtBracketSentence__Group_2_1__0 )* )
            {
            // InternalNLX.g:7903:1: ( ( rule__ExtBracketSentence__Group_2_1__0 )* )
            // InternalNLX.g:7904:2: ( rule__ExtBracketSentence__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getGroup_2_1()); 
            }
            // InternalNLX.g:7905:2: ( rule__ExtBracketSentence__Group_2_1__0 )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==RULE_FULL_STOP_NL) ) {
                    int LA112_2 = input.LA(2);

                    if ( (LA112_2==RULE_SPACE) ) {
                        int LA112_4 = input.LA(3);

                        if ( ((LA112_4>=RULE_HASH && LA112_4<=RULE_NEWLINE)||(LA112_4>=RULE_SPACE && LA112_4<=RULE_MINUS)||LA112_4==RULE_DOT||(LA112_4>=RULE_ID && LA112_4<=RULE_DOUBLE_DOT)||(LA112_4>=RULE_HEX_NUMBER && LA112_4<=RULE_TRIPLE_DOT)||(LA112_4>=RULE_BR_O && LA112_4<=RULE_EXBR_O)||LA112_4==RULE_EXBRC_O||(LA112_4>=RULE_CURRENCY && LA112_4<=RULE_AT)) ) {
                            alt112=1;
                        }


                    }
                    else if ( ((LA112_2>=RULE_HASH && LA112_2<=RULE_NEWLINE)||(LA112_2>=RULE_MULTI && LA112_2<=RULE_MINUS)||LA112_2==RULE_DOT||(LA112_2>=RULE_ID && LA112_2<=RULE_DOUBLE_DOT)||(LA112_2>=RULE_HEX_NUMBER && LA112_2<=RULE_TRIPLE_DOT)||(LA112_2>=RULE_BR_O && LA112_2<=RULE_EXBR_O)||LA112_2==RULE_EXBRC_O||(LA112_2>=RULE_CURRENCY && LA112_2<=RULE_AT)) ) {
                        alt112=1;
                    }


                }
                else if ( (LA112_0==RULE_FULL_STOP_IM) ) {
                    int LA112_3 = input.LA(2);

                    if ( (LA112_3==RULE_SPACE) ) {
                        int LA112_4 = input.LA(3);

                        if ( ((LA112_4>=RULE_HASH && LA112_4<=RULE_NEWLINE)||(LA112_4>=RULE_SPACE && LA112_4<=RULE_MINUS)||LA112_4==RULE_DOT||(LA112_4>=RULE_ID && LA112_4<=RULE_DOUBLE_DOT)||(LA112_4>=RULE_HEX_NUMBER && LA112_4<=RULE_TRIPLE_DOT)||(LA112_4>=RULE_BR_O && LA112_4<=RULE_EXBR_O)||LA112_4==RULE_EXBRC_O||(LA112_4>=RULE_CURRENCY && LA112_4<=RULE_AT)) ) {
                            alt112=1;
                        }


                    }
                    else if ( ((LA112_3>=RULE_HASH && LA112_3<=RULE_NEWLINE)||(LA112_3>=RULE_MULTI && LA112_3<=RULE_MINUS)||LA112_3==RULE_DOT||(LA112_3>=RULE_ID && LA112_3<=RULE_DOUBLE_DOT)||(LA112_3>=RULE_HEX_NUMBER && LA112_3<=RULE_TRIPLE_DOT)||(LA112_3>=RULE_BR_O && LA112_3<=RULE_EXBR_O)||LA112_3==RULE_EXBRC_O||(LA112_3>=RULE_CURRENCY && LA112_3<=RULE_AT)) ) {
                        alt112=1;
                    }


                }


                switch (alt112) {
            	case 1 :
            	    // InternalNLX.g:7905:3: rule__ExtBracketSentence__Group_2_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    rule__ExtBracketSentence__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group_2__1__Impl"


    // $ANTLR start "rule__ExtBracketSentence__Group_2_1__0"
    // InternalNLX.g:7914:1: rule__ExtBracketSentence__Group_2_1__0 : rule__ExtBracketSentence__Group_2_1__0__Impl rule__ExtBracketSentence__Group_2_1__1 ;
    public final void rule__ExtBracketSentence__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7918:1: ( rule__ExtBracketSentence__Group_2_1__0__Impl rule__ExtBracketSentence__Group_2_1__1 )
            // InternalNLX.g:7919:2: rule__ExtBracketSentence__Group_2_1__0__Impl rule__ExtBracketSentence__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__ExtBracketSentence__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group_2_1__0"


    // $ANTLR start "rule__ExtBracketSentence__Group_2_1__0__Impl"
    // InternalNLX.g:7926:1: rule__ExtBracketSentence__Group_2_1__0__Impl : ( ( rule__ExtBracketSentence__SeparatorAssignment_2_1_0 ) ) ;
    public final void rule__ExtBracketSentence__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7930:1: ( ( ( rule__ExtBracketSentence__SeparatorAssignment_2_1_0 ) ) )
            // InternalNLX.g:7931:1: ( ( rule__ExtBracketSentence__SeparatorAssignment_2_1_0 ) )
            {
            // InternalNLX.g:7931:1: ( ( rule__ExtBracketSentence__SeparatorAssignment_2_1_0 ) )
            // InternalNLX.g:7932:2: ( rule__ExtBracketSentence__SeparatorAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getSeparatorAssignment_2_1_0()); 
            }
            // InternalNLX.g:7933:2: ( rule__ExtBracketSentence__SeparatorAssignment_2_1_0 )
            // InternalNLX.g:7933:3: rule__ExtBracketSentence__SeparatorAssignment_2_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__SeparatorAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getSeparatorAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group_2_1__0__Impl"


    // $ANTLR start "rule__ExtBracketSentence__Group_2_1__1"
    // InternalNLX.g:7941:1: rule__ExtBracketSentence__Group_2_1__1 : rule__ExtBracketSentence__Group_2_1__1__Impl ;
    public final void rule__ExtBracketSentence__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7945:1: ( rule__ExtBracketSentence__Group_2_1__1__Impl )
            // InternalNLX.g:7946:2: rule__ExtBracketSentence__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group_2_1__1"


    // $ANTLR start "rule__ExtBracketSentence__Group_2_1__1__Impl"
    // InternalNLX.g:7952:1: rule__ExtBracketSentence__Group_2_1__1__Impl : ( ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1 ) ) ;
    public final void rule__ExtBracketSentence__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7956:1: ( ( ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1 ) ) )
            // InternalNLX.g:7957:1: ( ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1 ) )
            {
            // InternalNLX.g:7957:1: ( ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1 ) )
            // InternalNLX.g:7958:2: ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getBrackedSentencesAssignment_2_1_1()); 
            }
            // InternalNLX.g:7959:2: ( rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1 )
            // InternalNLX.g:7959:3: rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getBrackedSentencesAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__Group_2_1__1__Impl"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__0"
    // InternalNLX.g:7968:1: rule__ExtBracketSentenceC__Group__0 : rule__ExtBracketSentenceC__Group__0__Impl rule__ExtBracketSentenceC__Group__1 ;
    public final void rule__ExtBracketSentenceC__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7972:1: ( rule__ExtBracketSentenceC__Group__0__Impl rule__ExtBracketSentenceC__Group__1 )
            // InternalNLX.g:7973:2: rule__ExtBracketSentenceC__Group__0__Impl rule__ExtBracketSentenceC__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__ExtBracketSentenceC__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__0"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__0__Impl"
    // InternalNLX.g:7980:1: rule__ExtBracketSentenceC__Group__0__Impl : ( () ) ;
    public final void rule__ExtBracketSentenceC__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7984:1: ( ( () ) )
            // InternalNLX.g:7985:1: ( () )
            {
            // InternalNLX.g:7985:1: ( () )
            // InternalNLX.g:7986:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getExtBracketSentenceAction_0()); 
            }
            // InternalNLX.g:7987:2: ()
            // InternalNLX.g:7987:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getExtBracketSentenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__0__Impl"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__1"
    // InternalNLX.g:7995:1: rule__ExtBracketSentenceC__Group__1 : rule__ExtBracketSentenceC__Group__1__Impl rule__ExtBracketSentenceC__Group__2 ;
    public final void rule__ExtBracketSentenceC__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:7999:1: ( rule__ExtBracketSentenceC__Group__1__Impl rule__ExtBracketSentenceC__Group__2 )
            // InternalNLX.g:8000:2: rule__ExtBracketSentenceC__Group__1__Impl rule__ExtBracketSentenceC__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__ExtBracketSentenceC__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__1"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__1__Impl"
    // InternalNLX.g:8007:1: rule__ExtBracketSentenceC__Group__1__Impl : ( ( rule__ExtBracketSentenceC__OpenAssignment_1 ) ) ;
    public final void rule__ExtBracketSentenceC__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8011:1: ( ( ( rule__ExtBracketSentenceC__OpenAssignment_1 ) ) )
            // InternalNLX.g:8012:1: ( ( rule__ExtBracketSentenceC__OpenAssignment_1 ) )
            {
            // InternalNLX.g:8012:1: ( ( rule__ExtBracketSentenceC__OpenAssignment_1 ) )
            // InternalNLX.g:8013:2: ( rule__ExtBracketSentenceC__OpenAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getOpenAssignment_1()); 
            }
            // InternalNLX.g:8014:2: ( rule__ExtBracketSentenceC__OpenAssignment_1 )
            // InternalNLX.g:8014:3: rule__ExtBracketSentenceC__OpenAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__OpenAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getOpenAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__1__Impl"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__2"
    // InternalNLX.g:8022:1: rule__ExtBracketSentenceC__Group__2 : rule__ExtBracketSentenceC__Group__2__Impl rule__ExtBracketSentenceC__Group__3 ;
    public final void rule__ExtBracketSentenceC__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8026:1: ( rule__ExtBracketSentenceC__Group__2__Impl rule__ExtBracketSentenceC__Group__3 )
            // InternalNLX.g:8027:2: rule__ExtBracketSentenceC__Group__2__Impl rule__ExtBracketSentenceC__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__ExtBracketSentenceC__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__2"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__2__Impl"
    // InternalNLX.g:8034:1: rule__ExtBracketSentenceC__Group__2__Impl : ( ( rule__ExtBracketSentenceC__Group_2__0 )? ) ;
    public final void rule__ExtBracketSentenceC__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8038:1: ( ( ( rule__ExtBracketSentenceC__Group_2__0 )? ) )
            // InternalNLX.g:8039:1: ( ( rule__ExtBracketSentenceC__Group_2__0 )? )
            {
            // InternalNLX.g:8039:1: ( ( rule__ExtBracketSentenceC__Group_2__0 )? )
            // InternalNLX.g:8040:2: ( rule__ExtBracketSentenceC__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getGroup_2()); 
            }
            // InternalNLX.g:8041:2: ( rule__ExtBracketSentenceC__Group_2__0 )?
            int alt113=2;
            switch ( input.LA(1) ) {
                case RULE_SPACE:
                    {
                    int LA113_1 = input.LA(2);

                    if ( ((LA113_1>=RULE_HASH && LA113_1<=RULE_NEWLINE)||(LA113_1>=RULE_SPACE && LA113_1<=RULE_MINUS)||LA113_1==RULE_DOT||(LA113_1>=RULE_ID && LA113_1<=RULE_DOUBLE_DOT)||(LA113_1>=RULE_HEX_NUMBER && LA113_1<=RULE_TRIPLE_DOT)||(LA113_1>=RULE_BR_O && LA113_1<=RULE_EXBR_O)||LA113_1==RULE_EXBRC_O||(LA113_1>=RULE_CURRENCY && LA113_1<=RULE_AT)) ) {
                        alt113=1;
                    }
                    }
                    break;
                case RULE_HASH:
                case RULE_INT:
                case RULE_NEWLINE:
                case RULE_MULTI:
                case RULE_DASH:
                case RULE_MINUS:
                case RULE_ID:
                case RULE_ID_C:
                case RULE_ALL_ALPHA:
                case RULE_ALPHA:
                case RULE_IT_ID:
                case RULE_DOUBLE_DOT:
                case RULE_HEX_NUMBER:
                case RULE_CURL:
                case RULE_SLASH:
                case RULE_SEPARATORS:
                case RULE_SEPARATORS_IT:
                case RULE_COLON:
                case RULE_PARAGR:
                case RULE_PERCENT:
                case RULE_OPERATORS:
                case RULE_ARROW:
                case RULE_SMILEY:
                case RULE_TRIPLE_DOT:
                case RULE_BR_O:
                case RULE_EXBR_O:
                case RULE_EXBRC_O:
                case RULE_CURRENCY:
                case RULE_STRING:
                case RULE_SHORTCUTS:
                case RULE_IGNORED:
                case RULE_URL_PROTOCOL:
                case RULE_AT:
                    {
                    alt113=1;
                    }
                    break;
                case RULE_DOT:
                    {
                    int LA113_3 = input.LA(2);

                    if ( (LA113_3==RULE_INT||LA113_3==RULE_MULTI||LA113_3==RULE_DOT||(LA113_3>=RULE_ID && LA113_3<=RULE_CURL)||(LA113_3>=RULE_SEPARATORS_IT && LA113_3<=RULE_COLON)) ) {
                        alt113=1;
                    }
                    }
                    break;
            }

            switch (alt113) {
                case 1 :
                    // InternalNLX.g:8041:3: rule__ExtBracketSentenceC__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExtBracketSentenceC__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__2__Impl"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__3"
    // InternalNLX.g:8049:1: rule__ExtBracketSentenceC__Group__3 : rule__ExtBracketSentenceC__Group__3__Impl rule__ExtBracketSentenceC__Group__4 ;
    public final void rule__ExtBracketSentenceC__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8053:1: ( rule__ExtBracketSentenceC__Group__3__Impl rule__ExtBracketSentenceC__Group__4 )
            // InternalNLX.g:8054:2: rule__ExtBracketSentenceC__Group__3__Impl rule__ExtBracketSentenceC__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__ExtBracketSentenceC__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__3"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__3__Impl"
    // InternalNLX.g:8061:1: rule__ExtBracketSentenceC__Group__3__Impl : ( ( rule__ExtBracketSentenceC__SeparatorAssignment_3 )? ) ;
    public final void rule__ExtBracketSentenceC__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8065:1: ( ( ( rule__ExtBracketSentenceC__SeparatorAssignment_3 )? ) )
            // InternalNLX.g:8066:1: ( ( rule__ExtBracketSentenceC__SeparatorAssignment_3 )? )
            {
            // InternalNLX.g:8066:1: ( ( rule__ExtBracketSentenceC__SeparatorAssignment_3 )? )
            // InternalNLX.g:8067:2: ( rule__ExtBracketSentenceC__SeparatorAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getSeparatorAssignment_3()); 
            }
            // InternalNLX.g:8068:2: ( rule__ExtBracketSentenceC__SeparatorAssignment_3 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( ((LA114_0>=RULE_FULL_STOP_IM && LA114_0<=RULE_FULL_STOP_NL)) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalNLX.g:8068:3: rule__ExtBracketSentenceC__SeparatorAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExtBracketSentenceC__SeparatorAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getSeparatorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__3__Impl"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__4"
    // InternalNLX.g:8076:1: rule__ExtBracketSentenceC__Group__4 : rule__ExtBracketSentenceC__Group__4__Impl rule__ExtBracketSentenceC__Group__5 ;
    public final void rule__ExtBracketSentenceC__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8080:1: ( rule__ExtBracketSentenceC__Group__4__Impl rule__ExtBracketSentenceC__Group__5 )
            // InternalNLX.g:8081:2: rule__ExtBracketSentenceC__Group__4__Impl rule__ExtBracketSentenceC__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__ExtBracketSentenceC__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__4"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__4__Impl"
    // InternalNLX.g:8088:1: rule__ExtBracketSentenceC__Group__4__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__ExtBracketSentenceC__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8092:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:8093:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:8093:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:8094:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getSPACETerminalRuleCall_4()); 
            }
            // InternalNLX.g:8095:2: ( RULE_SPACE )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==RULE_SPACE) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalNLX.g:8095:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getSPACETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__4__Impl"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__5"
    // InternalNLX.g:8103:1: rule__ExtBracketSentenceC__Group__5 : rule__ExtBracketSentenceC__Group__5__Impl ;
    public final void rule__ExtBracketSentenceC__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8107:1: ( rule__ExtBracketSentenceC__Group__5__Impl )
            // InternalNLX.g:8108:2: rule__ExtBracketSentenceC__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__5"


    // $ANTLR start "rule__ExtBracketSentenceC__Group__5__Impl"
    // InternalNLX.g:8114:1: rule__ExtBracketSentenceC__Group__5__Impl : ( ( rule__ExtBracketSentenceC__CloseAssignment_5 ) ) ;
    public final void rule__ExtBracketSentenceC__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8118:1: ( ( ( rule__ExtBracketSentenceC__CloseAssignment_5 ) ) )
            // InternalNLX.g:8119:1: ( ( rule__ExtBracketSentenceC__CloseAssignment_5 ) )
            {
            // InternalNLX.g:8119:1: ( ( rule__ExtBracketSentenceC__CloseAssignment_5 ) )
            // InternalNLX.g:8120:2: ( rule__ExtBracketSentenceC__CloseAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getCloseAssignment_5()); 
            }
            // InternalNLX.g:8121:2: ( rule__ExtBracketSentenceC__CloseAssignment_5 )
            // InternalNLX.g:8121:3: rule__ExtBracketSentenceC__CloseAssignment_5
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__CloseAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getCloseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group__5__Impl"


    // $ANTLR start "rule__ExtBracketSentenceC__Group_2__0"
    // InternalNLX.g:8130:1: rule__ExtBracketSentenceC__Group_2__0 : rule__ExtBracketSentenceC__Group_2__0__Impl rule__ExtBracketSentenceC__Group_2__1 ;
    public final void rule__ExtBracketSentenceC__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8134:1: ( rule__ExtBracketSentenceC__Group_2__0__Impl rule__ExtBracketSentenceC__Group_2__1 )
            // InternalNLX.g:8135:2: rule__ExtBracketSentenceC__Group_2__0__Impl rule__ExtBracketSentenceC__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__ExtBracketSentenceC__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group_2__0"


    // $ANTLR start "rule__ExtBracketSentenceC__Group_2__0__Impl"
    // InternalNLX.g:8142:1: rule__ExtBracketSentenceC__Group_2__0__Impl : ( ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0 ) ) ;
    public final void rule__ExtBracketSentenceC__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8146:1: ( ( ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0 ) ) )
            // InternalNLX.g:8147:1: ( ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0 ) )
            {
            // InternalNLX.g:8147:1: ( ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0 ) )
            // InternalNLX.g:8148:2: ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getBrackedSentencesAssignment_2_0()); 
            }
            // InternalNLX.g:8149:2: ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0 )
            // InternalNLX.g:8149:3: rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getBrackedSentencesAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group_2__0__Impl"


    // $ANTLR start "rule__ExtBracketSentenceC__Group_2__1"
    // InternalNLX.g:8157:1: rule__ExtBracketSentenceC__Group_2__1 : rule__ExtBracketSentenceC__Group_2__1__Impl ;
    public final void rule__ExtBracketSentenceC__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8161:1: ( rule__ExtBracketSentenceC__Group_2__1__Impl )
            // InternalNLX.g:8162:2: rule__ExtBracketSentenceC__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group_2__1"


    // $ANTLR start "rule__ExtBracketSentenceC__Group_2__1__Impl"
    // InternalNLX.g:8168:1: rule__ExtBracketSentenceC__Group_2__1__Impl : ( ( rule__ExtBracketSentenceC__Group_2_1__0 )* ) ;
    public final void rule__ExtBracketSentenceC__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8172:1: ( ( ( rule__ExtBracketSentenceC__Group_2_1__0 )* ) )
            // InternalNLX.g:8173:1: ( ( rule__ExtBracketSentenceC__Group_2_1__0 )* )
            {
            // InternalNLX.g:8173:1: ( ( rule__ExtBracketSentenceC__Group_2_1__0 )* )
            // InternalNLX.g:8174:2: ( rule__ExtBracketSentenceC__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getGroup_2_1()); 
            }
            // InternalNLX.g:8175:2: ( rule__ExtBracketSentenceC__Group_2_1__0 )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==RULE_FULL_STOP_NL) ) {
                    int LA116_2 = input.LA(2);

                    if ( (LA116_2==RULE_SPACE) ) {
                        int LA116_4 = input.LA(3);

                        if ( ((LA116_4>=RULE_HASH && LA116_4<=RULE_NEWLINE)||(LA116_4>=RULE_SPACE && LA116_4<=RULE_MINUS)||LA116_4==RULE_DOT||(LA116_4>=RULE_ID && LA116_4<=RULE_DOUBLE_DOT)||(LA116_4>=RULE_HEX_NUMBER && LA116_4<=RULE_TRIPLE_DOT)||(LA116_4>=RULE_BR_O && LA116_4<=RULE_EXBR_O)||LA116_4==RULE_EXBRC_O||(LA116_4>=RULE_CURRENCY && LA116_4<=RULE_AT)) ) {
                            alt116=1;
                        }


                    }
                    else if ( ((LA116_2>=RULE_HASH && LA116_2<=RULE_NEWLINE)||(LA116_2>=RULE_MULTI && LA116_2<=RULE_MINUS)||LA116_2==RULE_DOT||(LA116_2>=RULE_ID && LA116_2<=RULE_DOUBLE_DOT)||(LA116_2>=RULE_HEX_NUMBER && LA116_2<=RULE_TRIPLE_DOT)||(LA116_2>=RULE_BR_O && LA116_2<=RULE_EXBR_O)||LA116_2==RULE_EXBRC_O||(LA116_2>=RULE_CURRENCY && LA116_2<=RULE_AT)) ) {
                        alt116=1;
                    }


                }
                else if ( (LA116_0==RULE_FULL_STOP_IM) ) {
                    int LA116_3 = input.LA(2);

                    if ( (LA116_3==RULE_SPACE) ) {
                        int LA116_4 = input.LA(3);

                        if ( ((LA116_4>=RULE_HASH && LA116_4<=RULE_NEWLINE)||(LA116_4>=RULE_SPACE && LA116_4<=RULE_MINUS)||LA116_4==RULE_DOT||(LA116_4>=RULE_ID && LA116_4<=RULE_DOUBLE_DOT)||(LA116_4>=RULE_HEX_NUMBER && LA116_4<=RULE_TRIPLE_DOT)||(LA116_4>=RULE_BR_O && LA116_4<=RULE_EXBR_O)||LA116_4==RULE_EXBRC_O||(LA116_4>=RULE_CURRENCY && LA116_4<=RULE_AT)) ) {
                            alt116=1;
                        }


                    }
                    else if ( ((LA116_3>=RULE_HASH && LA116_3<=RULE_NEWLINE)||(LA116_3>=RULE_MULTI && LA116_3<=RULE_MINUS)||LA116_3==RULE_DOT||(LA116_3>=RULE_ID && LA116_3<=RULE_DOUBLE_DOT)||(LA116_3>=RULE_HEX_NUMBER && LA116_3<=RULE_TRIPLE_DOT)||(LA116_3>=RULE_BR_O && LA116_3<=RULE_EXBR_O)||LA116_3==RULE_EXBRC_O||(LA116_3>=RULE_CURRENCY && LA116_3<=RULE_AT)) ) {
                        alt116=1;
                    }


                }


                switch (alt116) {
            	case 1 :
            	    // InternalNLX.g:8175:3: rule__ExtBracketSentenceC__Group_2_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    rule__ExtBracketSentenceC__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group_2__1__Impl"


    // $ANTLR start "rule__ExtBracketSentenceC__Group_2_1__0"
    // InternalNLX.g:8184:1: rule__ExtBracketSentenceC__Group_2_1__0 : rule__ExtBracketSentenceC__Group_2_1__0__Impl rule__ExtBracketSentenceC__Group_2_1__1 ;
    public final void rule__ExtBracketSentenceC__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8188:1: ( rule__ExtBracketSentenceC__Group_2_1__0__Impl rule__ExtBracketSentenceC__Group_2_1__1 )
            // InternalNLX.g:8189:2: rule__ExtBracketSentenceC__Group_2_1__0__Impl rule__ExtBracketSentenceC__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__ExtBracketSentenceC__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group_2_1__0"


    // $ANTLR start "rule__ExtBracketSentenceC__Group_2_1__0__Impl"
    // InternalNLX.g:8196:1: rule__ExtBracketSentenceC__Group_2_1__0__Impl : ( ( rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0 ) ) ;
    public final void rule__ExtBracketSentenceC__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8200:1: ( ( ( rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0 ) ) )
            // InternalNLX.g:8201:1: ( ( rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0 ) )
            {
            // InternalNLX.g:8201:1: ( ( rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0 ) )
            // InternalNLX.g:8202:2: ( rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getSeparatorAssignment_2_1_0()); 
            }
            // InternalNLX.g:8203:2: ( rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0 )
            // InternalNLX.g:8203:3: rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getSeparatorAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group_2_1__0__Impl"


    // $ANTLR start "rule__ExtBracketSentenceC__Group_2_1__1"
    // InternalNLX.g:8211:1: rule__ExtBracketSentenceC__Group_2_1__1 : rule__ExtBracketSentenceC__Group_2_1__1__Impl ;
    public final void rule__ExtBracketSentenceC__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8215:1: ( rule__ExtBracketSentenceC__Group_2_1__1__Impl )
            // InternalNLX.g:8216:2: rule__ExtBracketSentenceC__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group_2_1__1"


    // $ANTLR start "rule__ExtBracketSentenceC__Group_2_1__1__Impl"
    // InternalNLX.g:8222:1: rule__ExtBracketSentenceC__Group_2_1__1__Impl : ( ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1 ) ) ;
    public final void rule__ExtBracketSentenceC__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8226:1: ( ( ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1 ) ) )
            // InternalNLX.g:8227:1: ( ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1 ) )
            {
            // InternalNLX.g:8227:1: ( ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1 ) )
            // InternalNLX.g:8228:2: ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getBrackedSentencesAssignment_2_1_1()); 
            }
            // InternalNLX.g:8229:2: ( rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1 )
            // InternalNLX.g:8229:3: rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getBrackedSentencesAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__Group_2_1__1__Impl"


    // $ANTLR start "rule__Word__Group__0"
    // InternalNLX.g:8238:1: rule__Word__Group__0 : rule__Word__Group__0__Impl rule__Word__Group__1 ;
    public final void rule__Word__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8242:1: ( rule__Word__Group__0__Impl rule__Word__Group__1 )
            // InternalNLX.g:8243:2: rule__Word__Group__0__Impl rule__Word__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__Word__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group__0"


    // $ANTLR start "rule__Word__Group__0__Impl"
    // InternalNLX.g:8250:1: rule__Word__Group__0__Impl : ( ( rule__Word__Alternatives_0 ) ) ;
    public final void rule__Word__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8254:1: ( ( ( rule__Word__Alternatives_0 ) ) )
            // InternalNLX.g:8255:1: ( ( rule__Word__Alternatives_0 ) )
            {
            // InternalNLX.g:8255:1: ( ( rule__Word__Alternatives_0 ) )
            // InternalNLX.g:8256:2: ( rule__Word__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getAlternatives_0()); 
            }
            // InternalNLX.g:8257:2: ( rule__Word__Alternatives_0 )
            // InternalNLX.g:8257:3: rule__Word__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group__0__Impl"


    // $ANTLR start "rule__Word__Group__1"
    // InternalNLX.g:8265:1: rule__Word__Group__1 : rule__Word__Group__1__Impl ;
    public final void rule__Word__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8269:1: ( rule__Word__Group__1__Impl )
            // InternalNLX.g:8270:2: rule__Word__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group__1"


    // $ANTLR start "rule__Word__Group__1__Impl"
    // InternalNLX.g:8276:1: rule__Word__Group__1__Impl : ( ( rule__Word__WordAssignment_1 )? ) ;
    public final void rule__Word__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8280:1: ( ( ( rule__Word__WordAssignment_1 )? ) )
            // InternalNLX.g:8281:1: ( ( rule__Word__WordAssignment_1 )? )
            {
            // InternalNLX.g:8281:1: ( ( rule__Word__WordAssignment_1 )? )
            // InternalNLX.g:8282:2: ( rule__Word__WordAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getWordAssignment_1()); 
            }
            // InternalNLX.g:8283:2: ( rule__Word__WordAssignment_1 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( ((LA117_0>=RULE_DASH && LA117_0<=RULE_MINUS)||(LA117_0>=RULE_SLASH && LA117_0<=RULE_SEPARATORS)) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalNLX.g:8283:3: rule__Word__WordAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Word__WordAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getWordAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group__1__Impl"


    // $ANTLR start "rule__Word__Group_0_1__0"
    // InternalNLX.g:8292:1: rule__Word__Group_0_1__0 : rule__Word__Group_0_1__0__Impl rule__Word__Group_0_1__1 ;
    public final void rule__Word__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8296:1: ( rule__Word__Group_0_1__0__Impl rule__Word__Group_0_1__1 )
            // InternalNLX.g:8297:2: rule__Word__Group_0_1__0__Impl rule__Word__Group_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__Word__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group_0_1__0"


    // $ANTLR start "rule__Word__Group_0_1__0__Impl"
    // InternalNLX.g:8304:1: rule__Word__Group_0_1__0__Impl : ( ( rule__Word__Group_0_1_0__0 ) ) ;
    public final void rule__Word__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8308:1: ( ( ( rule__Word__Group_0_1_0__0 ) ) )
            // InternalNLX.g:8309:1: ( ( rule__Word__Group_0_1_0__0 ) )
            {
            // InternalNLX.g:8309:1: ( ( rule__Word__Group_0_1_0__0 ) )
            // InternalNLX.g:8310:2: ( rule__Word__Group_0_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getGroup_0_1_0()); 
            }
            // InternalNLX.g:8311:2: ( rule__Word__Group_0_1_0__0 )
            // InternalNLX.g:8311:3: rule__Word__Group_0_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__Group_0_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getGroup_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group_0_1__0__Impl"


    // $ANTLR start "rule__Word__Group_0_1__1"
    // InternalNLX.g:8319:1: rule__Word__Group_0_1__1 : rule__Word__Group_0_1__1__Impl ;
    public final void rule__Word__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8323:1: ( rule__Word__Group_0_1__1__Impl )
            // InternalNLX.g:8324:2: rule__Word__Group_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group_0_1__1"


    // $ANTLR start "rule__Word__Group_0_1__1__Impl"
    // InternalNLX.g:8330:1: rule__Word__Group_0_1__1__Impl : ( ( ( rule__Word__Group_0_1_1__0 ) ) ( ( rule__Word__Group_0_1_1__0 )* ) ) ;
    public final void rule__Word__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8334:1: ( ( ( ( rule__Word__Group_0_1_1__0 ) ) ( ( rule__Word__Group_0_1_1__0 )* ) ) )
            // InternalNLX.g:8335:1: ( ( ( rule__Word__Group_0_1_1__0 ) ) ( ( rule__Word__Group_0_1_1__0 )* ) )
            {
            // InternalNLX.g:8335:1: ( ( ( rule__Word__Group_0_1_1__0 ) ) ( ( rule__Word__Group_0_1_1__0 )* ) )
            // InternalNLX.g:8336:2: ( ( rule__Word__Group_0_1_1__0 ) ) ( ( rule__Word__Group_0_1_1__0 )* )
            {
            // InternalNLX.g:8336:2: ( ( rule__Word__Group_0_1_1__0 ) )
            // InternalNLX.g:8337:3: ( rule__Word__Group_0_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getGroup_0_1_1()); 
            }
            // InternalNLX.g:8338:3: ( rule__Word__Group_0_1_1__0 )
            // InternalNLX.g:8338:4: rule__Word__Group_0_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__Word__Group_0_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getGroup_0_1_1()); 
            }

            }

            // InternalNLX.g:8341:2: ( ( rule__Word__Group_0_1_1__0 )* )
            // InternalNLX.g:8342:3: ( rule__Word__Group_0_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getGroup_0_1_1()); 
            }
            // InternalNLX.g:8343:3: ( rule__Word__Group_0_1_1__0 )*
            loop118:
            do {
                int alt118=2;
                switch ( input.LA(1) ) {
                case RULE_SLASH:
                    {
                    int LA118_1 = input.LA(2);

                    if ( ((LA118_1>=RULE_ID && LA118_1<=RULE_ALPHA)) ) {
                        alt118=1;
                    }


                    }
                    break;
                case RULE_SEPARATORS:
                    {
                    int LA118_2 = input.LA(2);

                    if ( ((LA118_2>=RULE_ID && LA118_2<=RULE_ALPHA)) ) {
                        alt118=1;
                    }


                    }
                    break;
                case RULE_DASH:
                    {
                    int LA118_3 = input.LA(2);

                    if ( ((LA118_3>=RULE_ID && LA118_3<=RULE_ALPHA)) ) {
                        alt118=1;
                    }


                    }
                    break;
                case RULE_MINUS:
                    {
                    int LA118_4 = input.LA(2);

                    if ( ((LA118_4>=RULE_ID && LA118_4<=RULE_ALPHA)) ) {
                        alt118=1;
                    }


                    }
                    break;

                }

                switch (alt118) {
            	case 1 :
            	    // InternalNLX.g:8343:4: rule__Word__Group_0_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_40);
            	    rule__Word__Group_0_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getGroup_0_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group_0_1__1__Impl"


    // $ANTLR start "rule__Word__Group_0_1_0__0"
    // InternalNLX.g:8353:1: rule__Word__Group_0_1_0__0 : rule__Word__Group_0_1_0__0__Impl ;
    public final void rule__Word__Group_0_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8357:1: ( rule__Word__Group_0_1_0__0__Impl )
            // InternalNLX.g:8358:2: rule__Word__Group_0_1_0__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__Group_0_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group_0_1_0__0"


    // $ANTLR start "rule__Word__Group_0_1_0__0__Impl"
    // InternalNLX.g:8364:1: rule__Word__Group_0_1_0__0__Impl : ( ( rule__Word__WordAssignment_0_1_0_0 ) ) ;
    public final void rule__Word__Group_0_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8368:1: ( ( ( rule__Word__WordAssignment_0_1_0_0 ) ) )
            // InternalNLX.g:8369:1: ( ( rule__Word__WordAssignment_0_1_0_0 ) )
            {
            // InternalNLX.g:8369:1: ( ( rule__Word__WordAssignment_0_1_0_0 ) )
            // InternalNLX.g:8370:2: ( rule__Word__WordAssignment_0_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getWordAssignment_0_1_0_0()); 
            }
            // InternalNLX.g:8371:2: ( rule__Word__WordAssignment_0_1_0_0 )
            // InternalNLX.g:8371:3: rule__Word__WordAssignment_0_1_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__WordAssignment_0_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getWordAssignment_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group_0_1_0__0__Impl"


    // $ANTLR start "rule__Word__Group_0_1_1__0"
    // InternalNLX.g:8380:1: rule__Word__Group_0_1_1__0 : rule__Word__Group_0_1_1__0__Impl rule__Word__Group_0_1_1__1 ;
    public final void rule__Word__Group_0_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8384:1: ( rule__Word__Group_0_1_1__0__Impl rule__Word__Group_0_1_1__1 )
            // InternalNLX.g:8385:2: rule__Word__Group_0_1_1__0__Impl rule__Word__Group_0_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__Word__Group_0_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__Group_0_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group_0_1_1__0"


    // $ANTLR start "rule__Word__Group_0_1_1__0__Impl"
    // InternalNLX.g:8392:1: rule__Word__Group_0_1_1__0__Impl : ( ( rule__Word__WordAssignment_0_1_1_0 ) ) ;
    public final void rule__Word__Group_0_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8396:1: ( ( ( rule__Word__WordAssignment_0_1_1_0 ) ) )
            // InternalNLX.g:8397:1: ( ( rule__Word__WordAssignment_0_1_1_0 ) )
            {
            // InternalNLX.g:8397:1: ( ( rule__Word__WordAssignment_0_1_1_0 ) )
            // InternalNLX.g:8398:2: ( rule__Word__WordAssignment_0_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getWordAssignment_0_1_1_0()); 
            }
            // InternalNLX.g:8399:2: ( rule__Word__WordAssignment_0_1_1_0 )
            // InternalNLX.g:8399:3: rule__Word__WordAssignment_0_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__WordAssignment_0_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getWordAssignment_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group_0_1_1__0__Impl"


    // $ANTLR start "rule__Word__Group_0_1_1__1"
    // InternalNLX.g:8407:1: rule__Word__Group_0_1_1__1 : rule__Word__Group_0_1_1__1__Impl ;
    public final void rule__Word__Group_0_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8411:1: ( rule__Word__Group_0_1_1__1__Impl )
            // InternalNLX.g:8412:2: rule__Word__Group_0_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__Group_0_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group_0_1_1__1"


    // $ANTLR start "rule__Word__Group_0_1_1__1__Impl"
    // InternalNLX.g:8418:1: rule__Word__Group_0_1_1__1__Impl : ( ( rule__Word__WordAssignment_0_1_1_1 ) ) ;
    public final void rule__Word__Group_0_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8422:1: ( ( ( rule__Word__WordAssignment_0_1_1_1 ) ) )
            // InternalNLX.g:8423:1: ( ( rule__Word__WordAssignment_0_1_1_1 ) )
            {
            // InternalNLX.g:8423:1: ( ( rule__Word__WordAssignment_0_1_1_1 ) )
            // InternalNLX.g:8424:2: ( rule__Word__WordAssignment_0_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getWordAssignment_0_1_1_1()); 
            }
            // InternalNLX.g:8425:2: ( rule__Word__WordAssignment_0_1_1_1 )
            // InternalNLX.g:8425:3: rule__Word__WordAssignment_0_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Word__WordAssignment_0_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getWordAssignment_0_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Group_0_1_1__1__Impl"


    // $ANTLR start "rule__WordShort__Group__0"
    // InternalNLX.g:8434:1: rule__WordShort__Group__0 : rule__WordShort__Group__0__Impl rule__WordShort__Group__1 ;
    public final void rule__WordShort__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8438:1: ( rule__WordShort__Group__0__Impl rule__WordShort__Group__1 )
            // InternalNLX.g:8439:2: rule__WordShort__Group__0__Impl rule__WordShort__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__WordShort__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WordShort__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WordShort__Group__0"


    // $ANTLR start "rule__WordShort__Group__0__Impl"
    // InternalNLX.g:8446:1: rule__WordShort__Group__0__Impl : ( () ) ;
    public final void rule__WordShort__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8450:1: ( ( () ) )
            // InternalNLX.g:8451:1: ( () )
            {
            // InternalNLX.g:8451:1: ( () )
            // InternalNLX.g:8452:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordShortAccess().getWordAction_0()); 
            }
            // InternalNLX.g:8453:2: ()
            // InternalNLX.g:8453:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordShortAccess().getWordAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WordShort__Group__0__Impl"


    // $ANTLR start "rule__WordShort__Group__1"
    // InternalNLX.g:8461:1: rule__WordShort__Group__1 : rule__WordShort__Group__1__Impl ;
    public final void rule__WordShort__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8465:1: ( rule__WordShort__Group__1__Impl )
            // InternalNLX.g:8466:2: rule__WordShort__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WordShort__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WordShort__Group__1"


    // $ANTLR start "rule__WordShort__Group__1__Impl"
    // InternalNLX.g:8472:1: rule__WordShort__Group__1__Impl : ( ( rule__WordShort__WordAssignment_1 ) ) ;
    public final void rule__WordShort__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8476:1: ( ( ( rule__WordShort__WordAssignment_1 ) ) )
            // InternalNLX.g:8477:1: ( ( rule__WordShort__WordAssignment_1 ) )
            {
            // InternalNLX.g:8477:1: ( ( rule__WordShort__WordAssignment_1 ) )
            // InternalNLX.g:8478:2: ( rule__WordShort__WordAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordShortAccess().getWordAssignment_1()); 
            }
            // InternalNLX.g:8479:2: ( rule__WordShort__WordAssignment_1 )
            // InternalNLX.g:8479:3: rule__WordShort__WordAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WordShort__WordAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordShortAccess().getWordAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WordShort__Group__1__Impl"


    // $ANTLR start "rule__Asterisk__Group_0__0"
    // InternalNLX.g:8488:1: rule__Asterisk__Group_0__0 : rule__Asterisk__Group_0__0__Impl rule__Asterisk__Group_0__1 ;
    public final void rule__Asterisk__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8492:1: ( rule__Asterisk__Group_0__0__Impl rule__Asterisk__Group_0__1 )
            // InternalNLX.g:8493:2: rule__Asterisk__Group_0__0__Impl rule__Asterisk__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__Asterisk__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Asterisk__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_0__0"


    // $ANTLR start "rule__Asterisk__Group_0__0__Impl"
    // InternalNLX.g:8500:1: rule__Asterisk__Group_0__0__Impl : ( RULE_MULTI ) ;
    public final void rule__Asterisk__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8504:1: ( ( RULE_MULTI ) )
            // InternalNLX.g:8505:1: ( RULE_MULTI )
            {
            // InternalNLX.g:8505:1: ( RULE_MULTI )
            // InternalNLX.g:8506:2: RULE_MULTI
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_0_0()); 
            }
            match(input,RULE_MULTI,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_0__0__Impl"


    // $ANTLR start "rule__Asterisk__Group_0__1"
    // InternalNLX.g:8515:1: rule__Asterisk__Group_0__1 : rule__Asterisk__Group_0__1__Impl ;
    public final void rule__Asterisk__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8519:1: ( rule__Asterisk__Group_0__1__Impl )
            // InternalNLX.g:8520:2: rule__Asterisk__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Asterisk__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_0__1"


    // $ANTLR start "rule__Asterisk__Group_0__1__Impl"
    // InternalNLX.g:8526:1: rule__Asterisk__Group_0__1__Impl : ( ( RULE_MULTI )? ) ;
    public final void rule__Asterisk__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8530:1: ( ( ( RULE_MULTI )? ) )
            // InternalNLX.g:8531:1: ( ( RULE_MULTI )? )
            {
            // InternalNLX.g:8531:1: ( ( RULE_MULTI )? )
            // InternalNLX.g:8532:2: ( RULE_MULTI )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_0_1()); 
            }
            // InternalNLX.g:8533:2: ( RULE_MULTI )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==RULE_MULTI) ) {
                int LA119_1 = input.LA(2);

                if ( (synpred176_InternalNLX()) ) {
                    alt119=1;
                }
            }
            switch (alt119) {
                case 1 :
                    // InternalNLX.g:8533:3: RULE_MULTI
                    {
                    match(input,RULE_MULTI,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_0__1__Impl"


    // $ANTLR start "rule__Asterisk__Group_1__0"
    // InternalNLX.g:8542:1: rule__Asterisk__Group_1__0 : rule__Asterisk__Group_1__0__Impl rule__Asterisk__Group_1__1 ;
    public final void rule__Asterisk__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8546:1: ( rule__Asterisk__Group_1__0__Impl rule__Asterisk__Group_1__1 )
            // InternalNLX.g:8547:2: rule__Asterisk__Group_1__0__Impl rule__Asterisk__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__Asterisk__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Asterisk__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_1__0"


    // $ANTLR start "rule__Asterisk__Group_1__0__Impl"
    // InternalNLX.g:8554:1: rule__Asterisk__Group_1__0__Impl : ( ruleFragment ) ;
    public final void rule__Asterisk__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8558:1: ( ( ruleFragment ) )
            // InternalNLX.g:8559:1: ( ruleFragment )
            {
            // InternalNLX.g:8559:1: ( ruleFragment )
            // InternalNLX.g:8560:2: ruleFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAsteriskAccess().getFragmentParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAsteriskAccess().getFragmentParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_1__0__Impl"


    // $ANTLR start "rule__Asterisk__Group_1__1"
    // InternalNLX.g:8569:1: rule__Asterisk__Group_1__1 : rule__Asterisk__Group_1__1__Impl ;
    public final void rule__Asterisk__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8573:1: ( rule__Asterisk__Group_1__1__Impl )
            // InternalNLX.g:8574:2: rule__Asterisk__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Asterisk__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_1__1"


    // $ANTLR start "rule__Asterisk__Group_1__1__Impl"
    // InternalNLX.g:8580:1: rule__Asterisk__Group_1__1__Impl : ( RULE_MULTI ) ;
    public final void rule__Asterisk__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8584:1: ( ( RULE_MULTI ) )
            // InternalNLX.g:8585:1: ( RULE_MULTI )
            {
            // InternalNLX.g:8585:1: ( RULE_MULTI )
            // InternalNLX.g:8586:2: RULE_MULTI
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_1_1()); 
            }
            match(input,RULE_MULTI,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_1__1__Impl"


    // $ANTLR start "rule__Asterisk__Group_2__0"
    // InternalNLX.g:8596:1: rule__Asterisk__Group_2__0 : rule__Asterisk__Group_2__0__Impl rule__Asterisk__Group_2__1 ;
    public final void rule__Asterisk__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8600:1: ( rule__Asterisk__Group_2__0__Impl rule__Asterisk__Group_2__1 )
            // InternalNLX.g:8601:2: rule__Asterisk__Group_2__0__Impl rule__Asterisk__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__Asterisk__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Asterisk__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_2__0"


    // $ANTLR start "rule__Asterisk__Group_2__0__Impl"
    // InternalNLX.g:8608:1: rule__Asterisk__Group_2__0__Impl : ( ruleItWordEl ) ;
    public final void rule__Asterisk__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8612:1: ( ( ruleItWordEl ) )
            // InternalNLX.g:8613:1: ( ruleItWordEl )
            {
            // InternalNLX.g:8613:1: ( ruleItWordEl )
            // InternalNLX.g:8614:2: ruleItWordEl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAsteriskAccess().getItWordElParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWordEl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAsteriskAccess().getItWordElParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_2__0__Impl"


    // $ANTLR start "rule__Asterisk__Group_2__1"
    // InternalNLX.g:8623:1: rule__Asterisk__Group_2__1 : rule__Asterisk__Group_2__1__Impl ;
    public final void rule__Asterisk__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8627:1: ( rule__Asterisk__Group_2__1__Impl )
            // InternalNLX.g:8628:2: rule__Asterisk__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Asterisk__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_2__1"


    // $ANTLR start "rule__Asterisk__Group_2__1__Impl"
    // InternalNLX.g:8634:1: rule__Asterisk__Group_2__1__Impl : ( RULE_MULTI ) ;
    public final void rule__Asterisk__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8638:1: ( ( RULE_MULTI ) )
            // InternalNLX.g:8639:1: ( RULE_MULTI )
            {
            // InternalNLX.g:8639:1: ( RULE_MULTI )
            // InternalNLX.g:8640:2: RULE_MULTI
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_2_1()); 
            }
            match(input,RULE_MULTI,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Asterisk__Group_2__1__Impl"


    // $ANTLR start "rule__ItWord__Group__0"
    // InternalNLX.g:8650:1: rule__ItWord__Group__0 : rule__ItWord__Group__0__Impl rule__ItWord__Group__1 ;
    public final void rule__ItWord__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8654:1: ( rule__ItWord__Group__0__Impl rule__ItWord__Group__1 )
            // InternalNLX.g:8655:2: rule__ItWord__Group__0__Impl rule__ItWord__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__ItWord__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group__0"


    // $ANTLR start "rule__ItWord__Group__0__Impl"
    // InternalNLX.g:8662:1: rule__ItWord__Group__0__Impl : ( ( rule__ItWord__Alternatives_0 ) ) ;
    public final void rule__ItWord__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8666:1: ( ( ( rule__ItWord__Alternatives_0 ) ) )
            // InternalNLX.g:8667:1: ( ( rule__ItWord__Alternatives_0 ) )
            {
            // InternalNLX.g:8667:1: ( ( rule__ItWord__Alternatives_0 ) )
            // InternalNLX.g:8668:2: ( rule__ItWord__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getAlternatives_0()); 
            }
            // InternalNLX.g:8669:2: ( rule__ItWord__Alternatives_0 )
            // InternalNLX.g:8669:3: rule__ItWord__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group__0__Impl"


    // $ANTLR start "rule__ItWord__Group__1"
    // InternalNLX.g:8677:1: rule__ItWord__Group__1 : rule__ItWord__Group__1__Impl ;
    public final void rule__ItWord__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8681:1: ( rule__ItWord__Group__1__Impl )
            // InternalNLX.g:8682:2: rule__ItWord__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group__1"


    // $ANTLR start "rule__ItWord__Group__1__Impl"
    // InternalNLX.g:8688:1: rule__ItWord__Group__1__Impl : ( ( rule__ItWord__WordAssignment_1 )* ) ;
    public final void rule__ItWord__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8692:1: ( ( ( rule__ItWord__WordAssignment_1 )* ) )
            // InternalNLX.g:8693:1: ( ( rule__ItWord__WordAssignment_1 )* )
            {
            // InternalNLX.g:8693:1: ( ( rule__ItWord__WordAssignment_1 )* )
            // InternalNLX.g:8694:2: ( rule__ItWord__WordAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_1()); 
            }
            // InternalNLX.g:8695:2: ( rule__ItWord__WordAssignment_1 )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==RULE_DOT) ) {
                    int LA120_2 = input.LA(2);

                    if ( (synpred177_InternalNLX()) ) {
                        alt120=1;
                    }


                }
                else if ( ((LA120_0>=RULE_DASH && LA120_0<=RULE_MINUS)||(LA120_0>=RULE_SLASH && LA120_0<=RULE_COLON)) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalNLX.g:8695:3: rule__ItWord__WordAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__ItWord__WordAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group__1__Impl"


    // $ANTLR start "rule__ItWord__Group_0_0__0"
    // InternalNLX.g:8704:1: rule__ItWord__Group_0_0__0 : rule__ItWord__Group_0_0__0__Impl rule__ItWord__Group_0_0__1 ;
    public final void rule__ItWord__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8708:1: ( rule__ItWord__Group_0_0__0__Impl rule__ItWord__Group_0_0__1 )
            // InternalNLX.g:8709:2: rule__ItWord__Group_0_0__0__Impl rule__ItWord__Group_0_0__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__ItWord__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0__0"


    // $ANTLR start "rule__ItWord__Group_0_0__0__Impl"
    // InternalNLX.g:8716:1: rule__ItWord__Group_0_0__0__Impl : ( ( rule__ItWord__Alternatives_0_0_0 ) ) ;
    public final void rule__ItWord__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8720:1: ( ( ( rule__ItWord__Alternatives_0_0_0 ) ) )
            // InternalNLX.g:8721:1: ( ( rule__ItWord__Alternatives_0_0_0 ) )
            {
            // InternalNLX.g:8721:1: ( ( rule__ItWord__Alternatives_0_0_0 ) )
            // InternalNLX.g:8722:2: ( rule__ItWord__Alternatives_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getAlternatives_0_0_0()); 
            }
            // InternalNLX.g:8723:2: ( rule__ItWord__Alternatives_0_0_0 )
            // InternalNLX.g:8723:3: rule__ItWord__Alternatives_0_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Alternatives_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getAlternatives_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0__0__Impl"


    // $ANTLR start "rule__ItWord__Group_0_0__1"
    // InternalNLX.g:8731:1: rule__ItWord__Group_0_0__1 : rule__ItWord__Group_0_0__1__Impl ;
    public final void rule__ItWord__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8735:1: ( rule__ItWord__Group_0_0__1__Impl )
            // InternalNLX.g:8736:2: rule__ItWord__Group_0_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0__1"


    // $ANTLR start "rule__ItWord__Group_0_0__1__Impl"
    // InternalNLX.g:8742:1: rule__ItWord__Group_0_0__1__Impl : ( ( rule__ItWord__Group_0_0_1__0 )* ) ;
    public final void rule__ItWord__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8746:1: ( ( ( rule__ItWord__Group_0_0_1__0 )* ) )
            // InternalNLX.g:8747:1: ( ( rule__ItWord__Group_0_0_1__0 )* )
            {
            // InternalNLX.g:8747:1: ( ( rule__ItWord__Group_0_0_1__0 )* )
            // InternalNLX.g:8748:2: ( rule__ItWord__Group_0_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getGroup_0_0_1()); 
            }
            // InternalNLX.g:8749:2: ( rule__ItWord__Group_0_0_1__0 )*
            loop121:
            do {
                int alt121=2;
                alt121 = dfa121.predict(input);
                switch (alt121) {
            	case 1 :
            	    // InternalNLX.g:8749:3: rule__ItWord__Group_0_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__ItWord__Group_0_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getGroup_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0__1__Impl"


    // $ANTLR start "rule__ItWord__Group_0_0_0_0__0"
    // InternalNLX.g:8758:1: rule__ItWord__Group_0_0_0_0__0 : rule__ItWord__Group_0_0_0_0__0__Impl rule__ItWord__Group_0_0_0_0__1 ;
    public final void rule__ItWord__Group_0_0_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8762:1: ( rule__ItWord__Group_0_0_0_0__0__Impl rule__ItWord__Group_0_0_0_0__1 )
            // InternalNLX.g:8763:2: rule__ItWord__Group_0_0_0_0__0__Impl rule__ItWord__Group_0_0_0_0__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__ItWord__Group_0_0_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_0_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_0_0__0"


    // $ANTLR start "rule__ItWord__Group_0_0_0_0__0__Impl"
    // InternalNLX.g:8770:1: rule__ItWord__Group_0_0_0_0__0__Impl : ( ( rule__ItWord__Alternatives_0_0_0_0_0 ) ) ;
    public final void rule__ItWord__Group_0_0_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8774:1: ( ( ( rule__ItWord__Alternatives_0_0_0_0_0 ) ) )
            // InternalNLX.g:8775:1: ( ( rule__ItWord__Alternatives_0_0_0_0_0 ) )
            {
            // InternalNLX.g:8775:1: ( ( rule__ItWord__Alternatives_0_0_0_0_0 ) )
            // InternalNLX.g:8776:2: ( rule__ItWord__Alternatives_0_0_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getAlternatives_0_0_0_0_0()); 
            }
            // InternalNLX.g:8777:2: ( rule__ItWord__Alternatives_0_0_0_0_0 )
            // InternalNLX.g:8777:3: rule__ItWord__Alternatives_0_0_0_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Alternatives_0_0_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getAlternatives_0_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_0_0__0__Impl"


    // $ANTLR start "rule__ItWord__Group_0_0_0_0__1"
    // InternalNLX.g:8785:1: rule__ItWord__Group_0_0_0_0__1 : rule__ItWord__Group_0_0_0_0__1__Impl ;
    public final void rule__ItWord__Group_0_0_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8789:1: ( rule__ItWord__Group_0_0_0_0__1__Impl )
            // InternalNLX.g:8790:2: rule__ItWord__Group_0_0_0_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_0_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_0_0__1"


    // $ANTLR start "rule__ItWord__Group_0_0_0_0__1__Impl"
    // InternalNLX.g:8796:1: rule__ItWord__Group_0_0_0_0__1__Impl : ( ( rule__ItWord__Alternatives_0_0_0_0_1 ) ) ;
    public final void rule__ItWord__Group_0_0_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8800:1: ( ( ( rule__ItWord__Alternatives_0_0_0_0_1 ) ) )
            // InternalNLX.g:8801:1: ( ( rule__ItWord__Alternatives_0_0_0_0_1 ) )
            {
            // InternalNLX.g:8801:1: ( ( rule__ItWord__Alternatives_0_0_0_0_1 ) )
            // InternalNLX.g:8802:2: ( rule__ItWord__Alternatives_0_0_0_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getAlternatives_0_0_0_0_1()); 
            }
            // InternalNLX.g:8803:2: ( rule__ItWord__Alternatives_0_0_0_0_1 )
            // InternalNLX.g:8803:3: rule__ItWord__Alternatives_0_0_0_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Alternatives_0_0_0_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getAlternatives_0_0_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_0_0__1__Impl"


    // $ANTLR start "rule__ItWord__Group_0_0_0_1_2__0"
    // InternalNLX.g:8812:1: rule__ItWord__Group_0_0_0_1_2__0 : rule__ItWord__Group_0_0_0_1_2__0__Impl rule__ItWord__Group_0_0_0_1_2__1 ;
    public final void rule__ItWord__Group_0_0_0_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8816:1: ( rule__ItWord__Group_0_0_0_1_2__0__Impl rule__ItWord__Group_0_0_0_1_2__1 )
            // InternalNLX.g:8817:2: rule__ItWord__Group_0_0_0_1_2__0__Impl rule__ItWord__Group_0_0_0_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__ItWord__Group_0_0_0_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_0_0_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_0_1_2__0"


    // $ANTLR start "rule__ItWord__Group_0_0_0_1_2__0__Impl"
    // InternalNLX.g:8824:1: rule__ItWord__Group_0_0_0_1_2__0__Impl : ( ( rule__ItWord__WordAssignment_0_0_0_1_2_0 ) ) ;
    public final void rule__ItWord__Group_0_0_0_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8828:1: ( ( ( rule__ItWord__WordAssignment_0_0_0_1_2_0 ) ) )
            // InternalNLX.g:8829:1: ( ( rule__ItWord__WordAssignment_0_0_0_1_2_0 ) )
            {
            // InternalNLX.g:8829:1: ( ( rule__ItWord__WordAssignment_0_0_0_1_2_0 ) )
            // InternalNLX.g:8830:2: ( rule__ItWord__WordAssignment_0_0_0_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_1_2_0()); 
            }
            // InternalNLX.g:8831:2: ( rule__ItWord__WordAssignment_0_0_0_1_2_0 )
            // InternalNLX.g:8831:3: rule__ItWord__WordAssignment_0_0_0_1_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__WordAssignment_0_0_0_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_0_1_2__0__Impl"


    // $ANTLR start "rule__ItWord__Group_0_0_0_1_2__1"
    // InternalNLX.g:8839:1: rule__ItWord__Group_0_0_0_1_2__1 : rule__ItWord__Group_0_0_0_1_2__1__Impl ;
    public final void rule__ItWord__Group_0_0_0_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8843:1: ( rule__ItWord__Group_0_0_0_1_2__1__Impl )
            // InternalNLX.g:8844:2: rule__ItWord__Group_0_0_0_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_0_0_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_0_1_2__1"


    // $ANTLR start "rule__ItWord__Group_0_0_0_1_2__1__Impl"
    // InternalNLX.g:8850:1: rule__ItWord__Group_0_0_0_1_2__1__Impl : ( ( rule__ItWord__WordAssignment_0_0_0_1_2_1 ) ) ;
    public final void rule__ItWord__Group_0_0_0_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8854:1: ( ( ( rule__ItWord__WordAssignment_0_0_0_1_2_1 ) ) )
            // InternalNLX.g:8855:1: ( ( rule__ItWord__WordAssignment_0_0_0_1_2_1 ) )
            {
            // InternalNLX.g:8855:1: ( ( rule__ItWord__WordAssignment_0_0_0_1_2_1 ) )
            // InternalNLX.g:8856:2: ( rule__ItWord__WordAssignment_0_0_0_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_1_2_1()); 
            }
            // InternalNLX.g:8857:2: ( rule__ItWord__WordAssignment_0_0_0_1_2_1 )
            // InternalNLX.g:8857:3: rule__ItWord__WordAssignment_0_0_0_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__WordAssignment_0_0_0_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_0_1_2__1__Impl"


    // $ANTLR start "rule__ItWord__Group_0_0_1__0"
    // InternalNLX.g:8866:1: rule__ItWord__Group_0_0_1__0 : rule__ItWord__Group_0_0_1__0__Impl rule__ItWord__Group_0_0_1__1 ;
    public final void rule__ItWord__Group_0_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8870:1: ( rule__ItWord__Group_0_0_1__0__Impl rule__ItWord__Group_0_0_1__1 )
            // InternalNLX.g:8871:2: rule__ItWord__Group_0_0_1__0__Impl rule__ItWord__Group_0_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__ItWord__Group_0_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_1__0"


    // $ANTLR start "rule__ItWord__Group_0_0_1__0__Impl"
    // InternalNLX.g:8878:1: rule__ItWord__Group_0_0_1__0__Impl : ( ( ( rule__ItWord__WordAssignment_0_0_1_0 ) ) ( ( rule__ItWord__WordAssignment_0_0_1_0 )* ) ) ;
    public final void rule__ItWord__Group_0_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8882:1: ( ( ( ( rule__ItWord__WordAssignment_0_0_1_0 ) ) ( ( rule__ItWord__WordAssignment_0_0_1_0 )* ) ) )
            // InternalNLX.g:8883:1: ( ( ( rule__ItWord__WordAssignment_0_0_1_0 ) ) ( ( rule__ItWord__WordAssignment_0_0_1_0 )* ) )
            {
            // InternalNLX.g:8883:1: ( ( ( rule__ItWord__WordAssignment_0_0_1_0 ) ) ( ( rule__ItWord__WordAssignment_0_0_1_0 )* ) )
            // InternalNLX.g:8884:2: ( ( rule__ItWord__WordAssignment_0_0_1_0 ) ) ( ( rule__ItWord__WordAssignment_0_0_1_0 )* )
            {
            // InternalNLX.g:8884:2: ( ( rule__ItWord__WordAssignment_0_0_1_0 ) )
            // InternalNLX.g:8885:3: ( rule__ItWord__WordAssignment_0_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_0_1_0()); 
            }
            // InternalNLX.g:8886:3: ( rule__ItWord__WordAssignment_0_0_1_0 )
            // InternalNLX.g:8886:4: rule__ItWord__WordAssignment_0_0_1_0
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__ItWord__WordAssignment_0_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_0_1_0()); 
            }

            }

            // InternalNLX.g:8889:2: ( ( rule__ItWord__WordAssignment_0_0_1_0 )* )
            // InternalNLX.g:8890:3: ( rule__ItWord__WordAssignment_0_0_1_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_0_1_0()); 
            }
            // InternalNLX.g:8891:3: ( rule__ItWord__WordAssignment_0_0_1_0 )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( ((LA122_0>=RULE_DASH && LA122_0<=RULE_MINUS)||LA122_0==RULE_DOT||(LA122_0>=RULE_SLASH && LA122_0<=RULE_COLON)) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // InternalNLX.g:8891:4: rule__ItWord__WordAssignment_0_0_1_0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__ItWord__WordAssignment_0_0_1_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_0_1_0()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_1__0__Impl"


    // $ANTLR start "rule__ItWord__Group_0_0_1__1"
    // InternalNLX.g:8900:1: rule__ItWord__Group_0_0_1__1 : rule__ItWord__Group_0_0_1__1__Impl ;
    public final void rule__ItWord__Group_0_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8904:1: ( rule__ItWord__Group_0_0_1__1__Impl )
            // InternalNLX.g:8905:2: rule__ItWord__Group_0_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_1__1"


    // $ANTLR start "rule__ItWord__Group_0_0_1__1__Impl"
    // InternalNLX.g:8911:1: rule__ItWord__Group_0_0_1__1__Impl : ( ( rule__ItWord__WordAssignment_0_0_1_1 ) ) ;
    public final void rule__ItWord__Group_0_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8915:1: ( ( ( rule__ItWord__WordAssignment_0_0_1_1 ) ) )
            // InternalNLX.g:8916:1: ( ( rule__ItWord__WordAssignment_0_0_1_1 ) )
            {
            // InternalNLX.g:8916:1: ( ( rule__ItWord__WordAssignment_0_0_1_1 ) )
            // InternalNLX.g:8917:2: ( rule__ItWord__WordAssignment_0_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_0_1_1()); 
            }
            // InternalNLX.g:8918:2: ( rule__ItWord__WordAssignment_0_0_1_1 )
            // InternalNLX.g:8918:3: rule__ItWord__WordAssignment_0_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__WordAssignment_0_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_0_1__1__Impl"


    // $ANTLR start "rule__ItWord__Group_0_1__0"
    // InternalNLX.g:8927:1: rule__ItWord__Group_0_1__0 : rule__ItWord__Group_0_1__0__Impl rule__ItWord__Group_0_1__1 ;
    public final void rule__ItWord__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8931:1: ( rule__ItWord__Group_0_1__0__Impl rule__ItWord__Group_0_1__1 )
            // InternalNLX.g:8932:2: rule__ItWord__Group_0_1__0__Impl rule__ItWord__Group_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__ItWord__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1__0"


    // $ANTLR start "rule__ItWord__Group_0_1__0__Impl"
    // InternalNLX.g:8939:1: rule__ItWord__Group_0_1__0__Impl : ( ( rule__ItWord__Alternatives_0_1_0 ) ) ;
    public final void rule__ItWord__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8943:1: ( ( ( rule__ItWord__Alternatives_0_1_0 ) ) )
            // InternalNLX.g:8944:1: ( ( rule__ItWord__Alternatives_0_1_0 ) )
            {
            // InternalNLX.g:8944:1: ( ( rule__ItWord__Alternatives_0_1_0 ) )
            // InternalNLX.g:8945:2: ( rule__ItWord__Alternatives_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getAlternatives_0_1_0()); 
            }
            // InternalNLX.g:8946:2: ( rule__ItWord__Alternatives_0_1_0 )
            // InternalNLX.g:8946:3: rule__ItWord__Alternatives_0_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Alternatives_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getAlternatives_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1__0__Impl"


    // $ANTLR start "rule__ItWord__Group_0_1__1"
    // InternalNLX.g:8954:1: rule__ItWord__Group_0_1__1 : rule__ItWord__Group_0_1__1__Impl rule__ItWord__Group_0_1__2 ;
    public final void rule__ItWord__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8958:1: ( rule__ItWord__Group_0_1__1__Impl rule__ItWord__Group_0_1__2 )
            // InternalNLX.g:8959:2: rule__ItWord__Group_0_1__1__Impl rule__ItWord__Group_0_1__2
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__ItWord__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1__1"


    // $ANTLR start "rule__ItWord__Group_0_1__1__Impl"
    // InternalNLX.g:8966:1: rule__ItWord__Group_0_1__1__Impl : ( ( rule__ItWord__Alternatives_0_1_1 ) ) ;
    public final void rule__ItWord__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8970:1: ( ( ( rule__ItWord__Alternatives_0_1_1 ) ) )
            // InternalNLX.g:8971:1: ( ( rule__ItWord__Alternatives_0_1_1 ) )
            {
            // InternalNLX.g:8971:1: ( ( rule__ItWord__Alternatives_0_1_1 ) )
            // InternalNLX.g:8972:2: ( rule__ItWord__Alternatives_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getAlternatives_0_1_1()); 
            }
            // InternalNLX.g:8973:2: ( rule__ItWord__Alternatives_0_1_1 )
            // InternalNLX.g:8973:3: rule__ItWord__Alternatives_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Alternatives_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getAlternatives_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1__1__Impl"


    // $ANTLR start "rule__ItWord__Group_0_1__2"
    // InternalNLX.g:8981:1: rule__ItWord__Group_0_1__2 : rule__ItWord__Group_0_1__2__Impl ;
    public final void rule__ItWord__Group_0_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8985:1: ( rule__ItWord__Group_0_1__2__Impl )
            // InternalNLX.g:8986:2: rule__ItWord__Group_0_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1__2"


    // $ANTLR start "rule__ItWord__Group_0_1__2__Impl"
    // InternalNLX.g:8992:1: rule__ItWord__Group_0_1__2__Impl : ( ( rule__ItWord__Group_0_1_2__0 )* ) ;
    public final void rule__ItWord__Group_0_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:8996:1: ( ( ( rule__ItWord__Group_0_1_2__0 )* ) )
            // InternalNLX.g:8997:1: ( ( rule__ItWord__Group_0_1_2__0 )* )
            {
            // InternalNLX.g:8997:1: ( ( rule__ItWord__Group_0_1_2__0 )* )
            // InternalNLX.g:8998:2: ( rule__ItWord__Group_0_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getGroup_0_1_2()); 
            }
            // InternalNLX.g:8999:2: ( rule__ItWord__Group_0_1_2__0 )*
            loop123:
            do {
                int alt123=2;
                alt123 = dfa123.predict(input);
                switch (alt123) {
            	case 1 :
            	    // InternalNLX.g:8999:3: rule__ItWord__Group_0_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__ItWord__Group_0_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getGroup_0_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1__2__Impl"


    // $ANTLR start "rule__ItWord__Group_0_1_1_0__0"
    // InternalNLX.g:9008:1: rule__ItWord__Group_0_1_1_0__0 : rule__ItWord__Group_0_1_1_0__0__Impl rule__ItWord__Group_0_1_1_0__1 ;
    public final void rule__ItWord__Group_0_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9012:1: ( rule__ItWord__Group_0_1_1_0__0__Impl rule__ItWord__Group_0_1_1_0__1 )
            // InternalNLX.g:9013:2: rule__ItWord__Group_0_1_1_0__0__Impl rule__ItWord__Group_0_1_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__ItWord__Group_0_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_1_0__0"


    // $ANTLR start "rule__ItWord__Group_0_1_1_0__0__Impl"
    // InternalNLX.g:9020:1: rule__ItWord__Group_0_1_1_0__0__Impl : ( ( ( rule__ItWord__WordAssignment_0_1_1_0_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_1_0_0 )* ) ) ;
    public final void rule__ItWord__Group_0_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9024:1: ( ( ( ( rule__ItWord__WordAssignment_0_1_1_0_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_1_0_0 )* ) ) )
            // InternalNLX.g:9025:1: ( ( ( rule__ItWord__WordAssignment_0_1_1_0_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_1_0_0 )* ) )
            {
            // InternalNLX.g:9025:1: ( ( ( rule__ItWord__WordAssignment_0_1_1_0_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_1_0_0 )* ) )
            // InternalNLX.g:9026:2: ( ( rule__ItWord__WordAssignment_0_1_1_0_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_1_0_0 )* )
            {
            // InternalNLX.g:9026:2: ( ( rule__ItWord__WordAssignment_0_1_1_0_0 ) )
            // InternalNLX.g:9027:3: ( rule__ItWord__WordAssignment_0_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_0_0()); 
            }
            // InternalNLX.g:9028:3: ( rule__ItWord__WordAssignment_0_1_1_0_0 )
            // InternalNLX.g:9028:4: rule__ItWord__WordAssignment_0_1_1_0_0
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__ItWord__WordAssignment_0_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_0_0()); 
            }

            }

            // InternalNLX.g:9031:2: ( ( rule__ItWord__WordAssignment_0_1_1_0_0 )* )
            // InternalNLX.g:9032:3: ( rule__ItWord__WordAssignment_0_1_1_0_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_0_0()); 
            }
            // InternalNLX.g:9033:3: ( rule__ItWord__WordAssignment_0_1_1_0_0 )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==RULE_DOT||(LA124_0>=RULE_SEPARATORS_IT && LA124_0<=RULE_COLON)) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalNLX.g:9033:4: rule__ItWord__WordAssignment_0_1_1_0_0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__ItWord__WordAssignment_0_1_1_0_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_0_0()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_1_0__0__Impl"


    // $ANTLR start "rule__ItWord__Group_0_1_1_0__1"
    // InternalNLX.g:9042:1: rule__ItWord__Group_0_1_1_0__1 : rule__ItWord__Group_0_1_1_0__1__Impl ;
    public final void rule__ItWord__Group_0_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9046:1: ( rule__ItWord__Group_0_1_1_0__1__Impl )
            // InternalNLX.g:9047:2: rule__ItWord__Group_0_1_1_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_1_0__1"


    // $ANTLR start "rule__ItWord__Group_0_1_1_0__1__Impl"
    // InternalNLX.g:9053:1: rule__ItWord__Group_0_1_1_0__1__Impl : ( ( rule__ItWord__WordAssignment_0_1_1_0_1 ) ) ;
    public final void rule__ItWord__Group_0_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9057:1: ( ( ( rule__ItWord__WordAssignment_0_1_1_0_1 ) ) )
            // InternalNLX.g:9058:1: ( ( rule__ItWord__WordAssignment_0_1_1_0_1 ) )
            {
            // InternalNLX.g:9058:1: ( ( rule__ItWord__WordAssignment_0_1_1_0_1 ) )
            // InternalNLX.g:9059:2: ( rule__ItWord__WordAssignment_0_1_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_0_1()); 
            }
            // InternalNLX.g:9060:2: ( rule__ItWord__WordAssignment_0_1_1_0_1 )
            // InternalNLX.g:9060:3: rule__ItWord__WordAssignment_0_1_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__WordAssignment_0_1_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_1_0__1__Impl"


    // $ANTLR start "rule__ItWord__Group_0_1_1_1__0"
    // InternalNLX.g:9069:1: rule__ItWord__Group_0_1_1_1__0 : rule__ItWord__Group_0_1_1_1__0__Impl rule__ItWord__Group_0_1_1_1__1 ;
    public final void rule__ItWord__Group_0_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9073:1: ( rule__ItWord__Group_0_1_1_1__0__Impl rule__ItWord__Group_0_1_1_1__1 )
            // InternalNLX.g:9074:2: rule__ItWord__Group_0_1_1_1__0__Impl rule__ItWord__Group_0_1_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__ItWord__Group_0_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_1_1__0"


    // $ANTLR start "rule__ItWord__Group_0_1_1_1__0__Impl"
    // InternalNLX.g:9081:1: rule__ItWord__Group_0_1_1_1__0__Impl : ( ( ( rule__ItWord__WordAssignment_0_1_1_1_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_1_1_0 )* ) ) ;
    public final void rule__ItWord__Group_0_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9085:1: ( ( ( ( rule__ItWord__WordAssignment_0_1_1_1_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_1_1_0 )* ) ) )
            // InternalNLX.g:9086:1: ( ( ( rule__ItWord__WordAssignment_0_1_1_1_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_1_1_0 )* ) )
            {
            // InternalNLX.g:9086:1: ( ( ( rule__ItWord__WordAssignment_0_1_1_1_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_1_1_0 )* ) )
            // InternalNLX.g:9087:2: ( ( rule__ItWord__WordAssignment_0_1_1_1_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_1_1_0 )* )
            {
            // InternalNLX.g:9087:2: ( ( rule__ItWord__WordAssignment_0_1_1_1_0 ) )
            // InternalNLX.g:9088:3: ( rule__ItWord__WordAssignment_0_1_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_1_0()); 
            }
            // InternalNLX.g:9089:3: ( rule__ItWord__WordAssignment_0_1_1_1_0 )
            // InternalNLX.g:9089:4: rule__ItWord__WordAssignment_0_1_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__ItWord__WordAssignment_0_1_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_1_0()); 
            }

            }

            // InternalNLX.g:9092:2: ( ( rule__ItWord__WordAssignment_0_1_1_1_0 )* )
            // InternalNLX.g:9093:3: ( rule__ItWord__WordAssignment_0_1_1_1_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_1_0()); 
            }
            // InternalNLX.g:9094:3: ( rule__ItWord__WordAssignment_0_1_1_1_0 )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( ((LA125_0>=RULE_DASH && LA125_0<=RULE_MINUS)||LA125_0==RULE_DOT||(LA125_0>=RULE_SLASH && LA125_0<=RULE_COLON)) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // InternalNLX.g:9094:4: rule__ItWord__WordAssignment_0_1_1_1_0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__ItWord__WordAssignment_0_1_1_1_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_1_0()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_1_1__0__Impl"


    // $ANTLR start "rule__ItWord__Group_0_1_1_1__1"
    // InternalNLX.g:9103:1: rule__ItWord__Group_0_1_1_1__1 : rule__ItWord__Group_0_1_1_1__1__Impl ;
    public final void rule__ItWord__Group_0_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9107:1: ( rule__ItWord__Group_0_1_1_1__1__Impl )
            // InternalNLX.g:9108:2: rule__ItWord__Group_0_1_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_1_1__1"


    // $ANTLR start "rule__ItWord__Group_0_1_1_1__1__Impl"
    // InternalNLX.g:9114:1: rule__ItWord__Group_0_1_1_1__1__Impl : ( ( rule__ItWord__WordAssignment_0_1_1_1_1 ) ) ;
    public final void rule__ItWord__Group_0_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9118:1: ( ( ( rule__ItWord__WordAssignment_0_1_1_1_1 ) ) )
            // InternalNLX.g:9119:1: ( ( rule__ItWord__WordAssignment_0_1_1_1_1 ) )
            {
            // InternalNLX.g:9119:1: ( ( rule__ItWord__WordAssignment_0_1_1_1_1 ) )
            // InternalNLX.g:9120:2: ( rule__ItWord__WordAssignment_0_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_1_1()); 
            }
            // InternalNLX.g:9121:2: ( rule__ItWord__WordAssignment_0_1_1_1_1 )
            // InternalNLX.g:9121:3: rule__ItWord__WordAssignment_0_1_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__WordAssignment_0_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_1_1__1__Impl"


    // $ANTLR start "rule__ItWord__Group_0_1_2__0"
    // InternalNLX.g:9130:1: rule__ItWord__Group_0_1_2__0 : rule__ItWord__Group_0_1_2__0__Impl rule__ItWord__Group_0_1_2__1 ;
    public final void rule__ItWord__Group_0_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9134:1: ( rule__ItWord__Group_0_1_2__0__Impl rule__ItWord__Group_0_1_2__1 )
            // InternalNLX.g:9135:2: rule__ItWord__Group_0_1_2__0__Impl rule__ItWord__Group_0_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__ItWord__Group_0_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_2__0"


    // $ANTLR start "rule__ItWord__Group_0_1_2__0__Impl"
    // InternalNLX.g:9142:1: rule__ItWord__Group_0_1_2__0__Impl : ( ( ( rule__ItWord__WordAssignment_0_1_2_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_2_0 )* ) ) ;
    public final void rule__ItWord__Group_0_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9146:1: ( ( ( ( rule__ItWord__WordAssignment_0_1_2_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_2_0 )* ) ) )
            // InternalNLX.g:9147:1: ( ( ( rule__ItWord__WordAssignment_0_1_2_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_2_0 )* ) )
            {
            // InternalNLX.g:9147:1: ( ( ( rule__ItWord__WordAssignment_0_1_2_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_2_0 )* ) )
            // InternalNLX.g:9148:2: ( ( rule__ItWord__WordAssignment_0_1_2_0 ) ) ( ( rule__ItWord__WordAssignment_0_1_2_0 )* )
            {
            // InternalNLX.g:9148:2: ( ( rule__ItWord__WordAssignment_0_1_2_0 ) )
            // InternalNLX.g:9149:3: ( rule__ItWord__WordAssignment_0_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_1_2_0()); 
            }
            // InternalNLX.g:9150:3: ( rule__ItWord__WordAssignment_0_1_2_0 )
            // InternalNLX.g:9150:4: rule__ItWord__WordAssignment_0_1_2_0
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__ItWord__WordAssignment_0_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_1_2_0()); 
            }

            }

            // InternalNLX.g:9153:2: ( ( rule__ItWord__WordAssignment_0_1_2_0 )* )
            // InternalNLX.g:9154:3: ( rule__ItWord__WordAssignment_0_1_2_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_1_2_0()); 
            }
            // InternalNLX.g:9155:3: ( rule__ItWord__WordAssignment_0_1_2_0 )*
            loop126:
            do {
                int alt126=2;
                int LA126_0 = input.LA(1);

                if ( ((LA126_0>=RULE_DASH && LA126_0<=RULE_MINUS)||LA126_0==RULE_DOT||(LA126_0>=RULE_SLASH && LA126_0<=RULE_COLON)) ) {
                    alt126=1;
                }


                switch (alt126) {
            	case 1 :
            	    // InternalNLX.g:9155:4: rule__ItWord__WordAssignment_0_1_2_0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__ItWord__WordAssignment_0_1_2_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_1_2_0()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_2__0__Impl"

}

@SuppressWarnings("all")
abstract class InternalNLXParser8 extends InternalNLXParser7 {

        InternalNLXParser8(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalNLXParser8(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__ItWord__Group_0_1_2__1"
    // InternalNLX.g:9164:1: rule__ItWord__Group_0_1_2__1 : rule__ItWord__Group_0_1_2__1__Impl ;
    public final void rule__ItWord__Group_0_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9168:1: ( rule__ItWord__Group_0_1_2__1__Impl )
            // InternalNLX.g:9169:2: rule__ItWord__Group_0_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__Group_0_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_2__1"


    // $ANTLR start "rule__ItWord__Group_0_1_2__1__Impl"
    // InternalNLX.g:9175:1: rule__ItWord__Group_0_1_2__1__Impl : ( ( rule__ItWord__WordAssignment_0_1_2_1 ) ) ;
    public final void rule__ItWord__Group_0_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9179:1: ( ( ( rule__ItWord__WordAssignment_0_1_2_1 ) ) )
            // InternalNLX.g:9180:1: ( ( rule__ItWord__WordAssignment_0_1_2_1 ) )
            {
            // InternalNLX.g:9180:1: ( ( rule__ItWord__WordAssignment_0_1_2_1 ) )
            // InternalNLX.g:9181:2: ( rule__ItWord__WordAssignment_0_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAssignment_0_1_2_1()); 
            }
            // InternalNLX.g:9182:2: ( rule__ItWord__WordAssignment_0_1_2_1 )
            // InternalNLX.g:9182:3: rule__ItWord__WordAssignment_0_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItWord__WordAssignment_0_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAssignment_0_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__Group_0_1_2__1__Impl"


    // $ANTLR start "rule__Whitespace__Group_1__0"
    // InternalNLX.g:9191:1: rule__Whitespace__Group_1__0 : rule__Whitespace__Group_1__0__Impl rule__Whitespace__Group_1__1 ;
    public final void rule__Whitespace__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9195:1: ( rule__Whitespace__Group_1__0__Impl rule__Whitespace__Group_1__1 )
            // InternalNLX.g:9196:2: rule__Whitespace__Group_1__0__Impl rule__Whitespace__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__Whitespace__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Whitespace__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Whitespace__Group_1__0"


    // $ANTLR start "rule__Whitespace__Group_1__0__Impl"
    // InternalNLX.g:9203:1: rule__Whitespace__Group_1__0__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__Whitespace__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9207:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:9208:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:9208:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:9209:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhitespaceAccess().getSPACETerminalRuleCall_1_0()); 
            }
            // InternalNLX.g:9210:2: ( RULE_SPACE )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==RULE_SPACE) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalNLX.g:9210:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhitespaceAccess().getSPACETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Whitespace__Group_1__0__Impl"


    // $ANTLR start "rule__Whitespace__Group_1__1"
    // InternalNLX.g:9218:1: rule__Whitespace__Group_1__1 : rule__Whitespace__Group_1__1__Impl rule__Whitespace__Group_1__2 ;
    public final void rule__Whitespace__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9222:1: ( rule__Whitespace__Group_1__1__Impl rule__Whitespace__Group_1__2 )
            // InternalNLX.g:9223:2: rule__Whitespace__Group_1__1__Impl rule__Whitespace__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Whitespace__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Whitespace__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Whitespace__Group_1__1"


    // $ANTLR start "rule__Whitespace__Group_1__1__Impl"
    // InternalNLX.g:9230:1: rule__Whitespace__Group_1__1__Impl : ( RULE_NEWLINE ) ;
    public final void rule__Whitespace__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9234:1: ( ( RULE_NEWLINE ) )
            // InternalNLX.g:9235:1: ( RULE_NEWLINE )
            {
            // InternalNLX.g:9235:1: ( RULE_NEWLINE )
            // InternalNLX.g:9236:2: RULE_NEWLINE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhitespaceAccess().getNEWLINETerminalRuleCall_1_1()); 
            }
            match(input,RULE_NEWLINE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhitespaceAccess().getNEWLINETerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Whitespace__Group_1__1__Impl"


    // $ANTLR start "rule__Whitespace__Group_1__2"
    // InternalNLX.g:9245:1: rule__Whitespace__Group_1__2 : rule__Whitespace__Group_1__2__Impl ;
    public final void rule__Whitespace__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9249:1: ( rule__Whitespace__Group_1__2__Impl )
            // InternalNLX.g:9250:2: rule__Whitespace__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Whitespace__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Whitespace__Group_1__2"


    // $ANTLR start "rule__Whitespace__Group_1__2__Impl"
    // InternalNLX.g:9256:1: rule__Whitespace__Group_1__2__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__Whitespace__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9260:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:9261:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:9261:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:9262:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhitespaceAccess().getSPACETerminalRuleCall_1_2()); 
            }
            // InternalNLX.g:9263:2: ( RULE_SPACE )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==RULE_SPACE) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalNLX.g:9263:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhitespaceAccess().getSPACETerminalRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Whitespace__Group_1__2__Impl"


    // $ANTLR start "rule__Unit__Group__0"
    // InternalNLX.g:9272:1: rule__Unit__Group__0 : rule__Unit__Group__0__Impl rule__Unit__Group__1 ;
    public final void rule__Unit__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9276:1: ( rule__Unit__Group__0__Impl rule__Unit__Group__1 )
            // InternalNLX.g:9277:2: rule__Unit__Group__0__Impl rule__Unit__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__Unit__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__0"


    // $ANTLR start "rule__Unit__Group__0__Impl"
    // InternalNLX.g:9284:1: rule__Unit__Group__0__Impl : ( ( rule__Unit__SignatureAssignment_0 )? ) ;
    public final void rule__Unit__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9288:1: ( ( ( rule__Unit__SignatureAssignment_0 )? ) )
            // InternalNLX.g:9289:1: ( ( rule__Unit__SignatureAssignment_0 )? )
            {
            // InternalNLX.g:9289:1: ( ( rule__Unit__SignatureAssignment_0 )? )
            // InternalNLX.g:9290:2: ( rule__Unit__SignatureAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSignatureAssignment_0()); 
            }
            // InternalNLX.g:9291:2: ( rule__Unit__SignatureAssignment_0 )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==RULE_MINUS) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalNLX.g:9291:3: rule__Unit__SignatureAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__SignatureAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSignatureAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__0__Impl"


    // $ANTLR start "rule__Unit__Group__1"
    // InternalNLX.g:9299:1: rule__Unit__Group__1 : rule__Unit__Group__1__Impl rule__Unit__Group__2 ;
    public final void rule__Unit__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9303:1: ( rule__Unit__Group__1__Impl rule__Unit__Group__2 )
            // InternalNLX.g:9304:2: rule__Unit__Group__1__Impl rule__Unit__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__Unit__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__1"


    // $ANTLR start "rule__Unit__Group__1__Impl"
    // InternalNLX.g:9311:1: rule__Unit__Group__1__Impl : ( ( rule__Unit__ValueAssignment_1 ) ) ;
    public final void rule__Unit__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9315:1: ( ( ( rule__Unit__ValueAssignment_1 ) ) )
            // InternalNLX.g:9316:1: ( ( rule__Unit__ValueAssignment_1 ) )
            {
            // InternalNLX.g:9316:1: ( ( rule__Unit__ValueAssignment_1 ) )
            // InternalNLX.g:9317:2: ( rule__Unit__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getValueAssignment_1()); 
            }
            // InternalNLX.g:9318:2: ( rule__Unit__ValueAssignment_1 )
            // InternalNLX.g:9318:3: rule__Unit__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__1__Impl"


    // $ANTLR start "rule__Unit__Group__2"
    // InternalNLX.g:9326:1: rule__Unit__Group__2 : rule__Unit__Group__2__Impl ;
    public final void rule__Unit__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9330:1: ( rule__Unit__Group__2__Impl )
            // InternalNLX.g:9331:2: rule__Unit__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__2"


    // $ANTLR start "rule__Unit__Group__2__Impl"
    // InternalNLX.g:9337:1: rule__Unit__Group__2__Impl : ( ( rule__Unit__Alternatives_2 )? ) ;
    public final void rule__Unit__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9341:1: ( ( ( rule__Unit__Alternatives_2 )? ) )
            // InternalNLX.g:9342:1: ( ( rule__Unit__Alternatives_2 )? )
            {
            // InternalNLX.g:9342:1: ( ( rule__Unit__Alternatives_2 )? )
            // InternalNLX.g:9343:2: ( rule__Unit__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getAlternatives_2()); 
            }
            // InternalNLX.g:9344:2: ( rule__Unit__Alternatives_2 )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==RULE_ID||LA130_0==RULE_PERCENT||LA130_0==RULE_CURRENCY) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalNLX.g:9344:3: rule__Unit__Alternatives_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__2__Impl"


    // $ANTLR start "rule__SimpleUnit__Group_0__0"
    // InternalNLX.g:9353:1: rule__SimpleUnit__Group_0__0 : rule__SimpleUnit__Group_0__0__Impl rule__SimpleUnit__Group_0__1 ;
    public final void rule__SimpleUnit__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9357:1: ( rule__SimpleUnit__Group_0__0__Impl rule__SimpleUnit__Group_0__1 )
            // InternalNLX.g:9358:2: rule__SimpleUnit__Group_0__0__Impl rule__SimpleUnit__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__SimpleUnit__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleUnit__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleUnit__Group_0__0"


    // $ANTLR start "rule__SimpleUnit__Group_0__0__Impl"
    // InternalNLX.g:9365:1: rule__SimpleUnit__Group_0__0__Impl : ( () ) ;
    public final void rule__SimpleUnit__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9369:1: ( ( () ) )
            // InternalNLX.g:9370:1: ( () )
            {
            // InternalNLX.g:9370:1: ( () )
            // InternalNLX.g:9371:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleUnitAccess().getUnitAction_0_0()); 
            }
            // InternalNLX.g:9372:2: ()
            // InternalNLX.g:9372:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleUnitAccess().getUnitAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleUnit__Group_0__0__Impl"


    // $ANTLR start "rule__SimpleUnit__Group_0__1"
    // InternalNLX.g:9380:1: rule__SimpleUnit__Group_0__1 : rule__SimpleUnit__Group_0__1__Impl ;
    public final void rule__SimpleUnit__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9384:1: ( rule__SimpleUnit__Group_0__1__Impl )
            // InternalNLX.g:9385:2: rule__SimpleUnit__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleUnit__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleUnit__Group_0__1"


    // $ANTLR start "rule__SimpleUnit__Group_0__1__Impl"
    // InternalNLX.g:9391:1: rule__SimpleUnit__Group_0__1__Impl : ( ( rule__SimpleUnit__ValueAssignment_0_1 ) ) ;
    public final void rule__SimpleUnit__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9395:1: ( ( ( rule__SimpleUnit__ValueAssignment_0_1 ) ) )
            // InternalNLX.g:9396:1: ( ( rule__SimpleUnit__ValueAssignment_0_1 ) )
            {
            // InternalNLX.g:9396:1: ( ( rule__SimpleUnit__ValueAssignment_0_1 ) )
            // InternalNLX.g:9397:2: ( rule__SimpleUnit__ValueAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleUnitAccess().getValueAssignment_0_1()); 
            }
            // InternalNLX.g:9398:2: ( rule__SimpleUnit__ValueAssignment_0_1 )
            // InternalNLX.g:9398:3: rule__SimpleUnit__ValueAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleUnit__ValueAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleUnitAccess().getValueAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleUnit__Group_0__1__Impl"


    // $ANTLR start "rule__Chapter_Unit_HI__Group__0"
    // InternalNLX.g:9407:1: rule__Chapter_Unit_HI__Group__0 : rule__Chapter_Unit_HI__Group__0__Impl rule__Chapter_Unit_HI__Group__1 ;
    public final void rule__Chapter_Unit_HI__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9411:1: ( rule__Chapter_Unit_HI__Group__0__Impl rule__Chapter_Unit_HI__Group__1 )
            // InternalNLX.g:9412:2: rule__Chapter_Unit_HI__Group__0__Impl rule__Chapter_Unit_HI__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__Chapter_Unit_HI__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Chapter_Unit_HI__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_HI__Group__0"


    // $ANTLR start "rule__Chapter_Unit_HI__Group__0__Impl"
    // InternalNLX.g:9419:1: rule__Chapter_Unit_HI__Group__0__Impl : ( () ) ;
    public final void rule__Chapter_Unit_HI__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9423:1: ( ( () ) )
            // InternalNLX.g:9424:1: ( () )
            {
            // InternalNLX.g:9424:1: ( () )
            // InternalNLX.g:9425:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_HIAccess().getUnitAction_0()); 
            }
            // InternalNLX.g:9426:2: ()
            // InternalNLX.g:9426:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_HIAccess().getUnitAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_HI__Group__0__Impl"


    // $ANTLR start "rule__Chapter_Unit_HI__Group__1"
    // InternalNLX.g:9434:1: rule__Chapter_Unit_HI__Group__1 : rule__Chapter_Unit_HI__Group__1__Impl rule__Chapter_Unit_HI__Group__2 ;
    public final void rule__Chapter_Unit_HI__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9438:1: ( rule__Chapter_Unit_HI__Group__1__Impl rule__Chapter_Unit_HI__Group__2 )
            // InternalNLX.g:9439:2: rule__Chapter_Unit_HI__Group__1__Impl rule__Chapter_Unit_HI__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Chapter_Unit_HI__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Chapter_Unit_HI__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_HI__Group__1"


    // $ANTLR start "rule__Chapter_Unit_HI__Group__1__Impl"
    // InternalNLX.g:9446:1: rule__Chapter_Unit_HI__Group__1__Impl : ( ( rule__Chapter_Unit_HI__ValueAssignment_1 ) ) ;
    public final void rule__Chapter_Unit_HI__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9450:1: ( ( ( rule__Chapter_Unit_HI__ValueAssignment_1 ) ) )
            // InternalNLX.g:9451:1: ( ( rule__Chapter_Unit_HI__ValueAssignment_1 ) )
            {
            // InternalNLX.g:9451:1: ( ( rule__Chapter_Unit_HI__ValueAssignment_1 ) )
            // InternalNLX.g:9452:2: ( rule__Chapter_Unit_HI__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_HIAccess().getValueAssignment_1()); 
            }
            // InternalNLX.g:9453:2: ( rule__Chapter_Unit_HI__ValueAssignment_1 )
            // InternalNLX.g:9453:3: rule__Chapter_Unit_HI__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Chapter_Unit_HI__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_HIAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_HI__Group__1__Impl"


    // $ANTLR start "rule__Chapter_Unit_HI__Group__2"
    // InternalNLX.g:9461:1: rule__Chapter_Unit_HI__Group__2 : rule__Chapter_Unit_HI__Group__2__Impl ;
    public final void rule__Chapter_Unit_HI__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9465:1: ( rule__Chapter_Unit_HI__Group__2__Impl )
            // InternalNLX.g:9466:2: rule__Chapter_Unit_HI__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Chapter_Unit_HI__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_HI__Group__2"


    // $ANTLR start "rule__Chapter_Unit_HI__Group__2__Impl"
    // InternalNLX.g:9472:1: rule__Chapter_Unit_HI__Group__2__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__Chapter_Unit_HI__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9476:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:9477:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:9477:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:9478:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_HIAccess().getSPACETerminalRuleCall_2()); 
            }
            // InternalNLX.g:9479:2: ( RULE_SPACE )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==RULE_SPACE) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalNLX.g:9479:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_HIAccess().getSPACETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_HI__Group__2__Impl"


    // $ANTLR start "rule__Chapter_Unit_Low__Group__0"
    // InternalNLX.g:9488:1: rule__Chapter_Unit_Low__Group__0 : rule__Chapter_Unit_Low__Group__0__Impl rule__Chapter_Unit_Low__Group__1 ;
    public final void rule__Chapter_Unit_Low__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9492:1: ( rule__Chapter_Unit_Low__Group__0__Impl rule__Chapter_Unit_Low__Group__1 )
            // InternalNLX.g:9493:2: rule__Chapter_Unit_Low__Group__0__Impl rule__Chapter_Unit_Low__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__Chapter_Unit_Low__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Chapter_Unit_Low__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_Low__Group__0"


    // $ANTLR start "rule__Chapter_Unit_Low__Group__0__Impl"
    // InternalNLX.g:9500:1: rule__Chapter_Unit_Low__Group__0__Impl : ( () ) ;
    public final void rule__Chapter_Unit_Low__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9504:1: ( ( () ) )
            // InternalNLX.g:9505:1: ( () )
            {
            // InternalNLX.g:9505:1: ( () )
            // InternalNLX.g:9506:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_LowAccess().getUnitAction_0()); 
            }
            // InternalNLX.g:9507:2: ()
            // InternalNLX.g:9507:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_LowAccess().getUnitAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_Low__Group__0__Impl"


    // $ANTLR start "rule__Chapter_Unit_Low__Group__1"
    // InternalNLX.g:9515:1: rule__Chapter_Unit_Low__Group__1 : rule__Chapter_Unit_Low__Group__1__Impl rule__Chapter_Unit_Low__Group__2 ;
    public final void rule__Chapter_Unit_Low__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9519:1: ( rule__Chapter_Unit_Low__Group__1__Impl rule__Chapter_Unit_Low__Group__2 )
            // InternalNLX.g:9520:2: rule__Chapter_Unit_Low__Group__1__Impl rule__Chapter_Unit_Low__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Chapter_Unit_Low__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Chapter_Unit_Low__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_Low__Group__1"


    // $ANTLR start "rule__Chapter_Unit_Low__Group__1__Impl"
    // InternalNLX.g:9527:1: rule__Chapter_Unit_Low__Group__1__Impl : ( ( rule__Chapter_Unit_Low__ValueAssignment_1 ) ) ;
    public final void rule__Chapter_Unit_Low__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9531:1: ( ( ( rule__Chapter_Unit_Low__ValueAssignment_1 ) ) )
            // InternalNLX.g:9532:1: ( ( rule__Chapter_Unit_Low__ValueAssignment_1 ) )
            {
            // InternalNLX.g:9532:1: ( ( rule__Chapter_Unit_Low__ValueAssignment_1 ) )
            // InternalNLX.g:9533:2: ( rule__Chapter_Unit_Low__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_LowAccess().getValueAssignment_1()); 
            }
            // InternalNLX.g:9534:2: ( rule__Chapter_Unit_Low__ValueAssignment_1 )
            // InternalNLX.g:9534:3: rule__Chapter_Unit_Low__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Chapter_Unit_Low__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_LowAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_Low__Group__1__Impl"


    // $ANTLR start "rule__Chapter_Unit_Low__Group__2"
    // InternalNLX.g:9542:1: rule__Chapter_Unit_Low__Group__2 : rule__Chapter_Unit_Low__Group__2__Impl ;
    public final void rule__Chapter_Unit_Low__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9546:1: ( rule__Chapter_Unit_Low__Group__2__Impl )
            // InternalNLX.g:9547:2: rule__Chapter_Unit_Low__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Chapter_Unit_Low__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_Low__Group__2"


    // $ANTLR start "rule__Chapter_Unit_Low__Group__2__Impl"
    // InternalNLX.g:9553:1: rule__Chapter_Unit_Low__Group__2__Impl : ( ( RULE_SPACE )? ) ;
    public final void rule__Chapter_Unit_Low__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9557:1: ( ( ( RULE_SPACE )? ) )
            // InternalNLX.g:9558:1: ( ( RULE_SPACE )? )
            {
            // InternalNLX.g:9558:1: ( ( RULE_SPACE )? )
            // InternalNLX.g:9559:2: ( RULE_SPACE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_LowAccess().getSPACETerminalRuleCall_2()); 
            }
            // InternalNLX.g:9560:2: ( RULE_SPACE )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==RULE_SPACE) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalNLX.g:9560:3: RULE_SPACE
                    {
                    match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_LowAccess().getSPACETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_Low__Group__2__Impl"


    // $ANTLR start "rule__HashNumber__Group__0"
    // InternalNLX.g:9569:1: rule__HashNumber__Group__0 : rule__HashNumber__Group__0__Impl rule__HashNumber__Group__1 ;
    public final void rule__HashNumber__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9573:1: ( rule__HashNumber__Group__0__Impl rule__HashNumber__Group__1 )
            // InternalNLX.g:9574:2: rule__HashNumber__Group__0__Impl rule__HashNumber__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__HashNumber__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HashNumber__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HashNumber__Group__0"


    // $ANTLR start "rule__HashNumber__Group__0__Impl"
    // InternalNLX.g:9581:1: rule__HashNumber__Group__0__Impl : ( () ) ;
    public final void rule__HashNumber__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9585:1: ( ( () ) )
            // InternalNLX.g:9586:1: ( () )
            {
            // InternalNLX.g:9586:1: ( () )
            // InternalNLX.g:9587:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHashNumberAccess().getUnitAction_0()); 
            }
            // InternalNLX.g:9588:2: ()
            // InternalNLX.g:9588:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHashNumberAccess().getUnitAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HashNumber__Group__0__Impl"


    // $ANTLR start "rule__HashNumber__Group__1"
    // InternalNLX.g:9596:1: rule__HashNumber__Group__1 : rule__HashNumber__Group__1__Impl rule__HashNumber__Group__2 ;
    public final void rule__HashNumber__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9600:1: ( rule__HashNumber__Group__1__Impl rule__HashNumber__Group__2 )
            // InternalNLX.g:9601:2: rule__HashNumber__Group__1__Impl rule__HashNumber__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__HashNumber__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HashNumber__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HashNumber__Group__1"


    // $ANTLR start "rule__HashNumber__Group__1__Impl"
    // InternalNLX.g:9608:1: rule__HashNumber__Group__1__Impl : ( ( rule__HashNumber__SignAssignment_1 ) ) ;
    public final void rule__HashNumber__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9612:1: ( ( ( rule__HashNumber__SignAssignment_1 ) ) )
            // InternalNLX.g:9613:1: ( ( rule__HashNumber__SignAssignment_1 ) )
            {
            // InternalNLX.g:9613:1: ( ( rule__HashNumber__SignAssignment_1 ) )
            // InternalNLX.g:9614:2: ( rule__HashNumber__SignAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHashNumberAccess().getSignAssignment_1()); 
            }
            // InternalNLX.g:9615:2: ( rule__HashNumber__SignAssignment_1 )
            // InternalNLX.g:9615:3: rule__HashNumber__SignAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HashNumber__SignAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHashNumberAccess().getSignAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HashNumber__Group__1__Impl"


    // $ANTLR start "rule__HashNumber__Group__2"
    // InternalNLX.g:9623:1: rule__HashNumber__Group__2 : rule__HashNumber__Group__2__Impl ;
    public final void rule__HashNumber__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9627:1: ( rule__HashNumber__Group__2__Impl )
            // InternalNLX.g:9628:2: rule__HashNumber__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HashNumber__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HashNumber__Group__2"


    // $ANTLR start "rule__HashNumber__Group__2__Impl"
    // InternalNLX.g:9634:1: rule__HashNumber__Group__2__Impl : ( ( rule__HashNumber__ValueAssignment_2 ) ) ;
    public final void rule__HashNumber__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9638:1: ( ( ( rule__HashNumber__ValueAssignment_2 ) ) )
            // InternalNLX.g:9639:1: ( ( rule__HashNumber__ValueAssignment_2 ) )
            {
            // InternalNLX.g:9639:1: ( ( rule__HashNumber__ValueAssignment_2 ) )
            // InternalNLX.g:9640:2: ( rule__HashNumber__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHashNumberAccess().getValueAssignment_2()); 
            }
            // InternalNLX.g:9641:2: ( rule__HashNumber__ValueAssignment_2 )
            // InternalNLX.g:9641:3: rule__HashNumber__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HashNumber__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHashNumberAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HashNumber__Group__2__Impl"


    // $ANTLR start "rule__ChapterAlpha__Group__0"
    // InternalNLX.g:9650:1: rule__ChapterAlpha__Group__0 : rule__ChapterAlpha__Group__0__Impl rule__ChapterAlpha__Group__1 ;
    public final void rule__ChapterAlpha__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9654:1: ( rule__ChapterAlpha__Group__0__Impl rule__ChapterAlpha__Group__1 )
            // InternalNLX.g:9655:2: rule__ChapterAlpha__Group__0__Impl rule__ChapterAlpha__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_53);
            rule__ChapterAlpha__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__0"


    // $ANTLR start "rule__ChapterAlpha__Group__0__Impl"
    // InternalNLX.g:9662:1: rule__ChapterAlpha__Group__0__Impl : ( () ) ;
    public final void rule__ChapterAlpha__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9666:1: ( ( () ) )
            // InternalNLX.g:9667:1: ( () )
            {
            // InternalNLX.g:9667:1: ( () )
            // InternalNLX.g:9668:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getUnitAction_0()); 
            }
            // InternalNLX.g:9669:2: ()
            // InternalNLX.g:9669:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getUnitAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__0__Impl"


    // $ANTLR start "rule__ChapterAlpha__Group__1"
    // InternalNLX.g:9677:1: rule__ChapterAlpha__Group__1 : rule__ChapterAlpha__Group__1__Impl rule__ChapterAlpha__Group__2 ;
    public final void rule__ChapterAlpha__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9681:1: ( rule__ChapterAlpha__Group__1__Impl rule__ChapterAlpha__Group__2 )
            // InternalNLX.g:9682:2: rule__ChapterAlpha__Group__1__Impl rule__ChapterAlpha__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__ChapterAlpha__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__1"


    // $ANTLR start "rule__ChapterAlpha__Group__1__Impl"
    // InternalNLX.g:9689:1: rule__ChapterAlpha__Group__1__Impl : ( ( rule__ChapterAlpha__Alternatives_1 ) ) ;
    public final void rule__ChapterAlpha__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9693:1: ( ( ( rule__ChapterAlpha__Alternatives_1 ) ) )
            // InternalNLX.g:9694:1: ( ( rule__ChapterAlpha__Alternatives_1 ) )
            {
            // InternalNLX.g:9694:1: ( ( rule__ChapterAlpha__Alternatives_1 ) )
            // InternalNLX.g:9695:2: ( rule__ChapterAlpha__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getAlternatives_1()); 
            }
            // InternalNLX.g:9696:2: ( rule__ChapterAlpha__Alternatives_1 )
            // InternalNLX.g:9696:3: rule__ChapterAlpha__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__1__Impl"


    // $ANTLR start "rule__ChapterAlpha__Group__2"
    // InternalNLX.g:9704:1: rule__ChapterAlpha__Group__2 : rule__ChapterAlpha__Group__2__Impl rule__ChapterAlpha__Group__3 ;
    public final void rule__ChapterAlpha__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9708:1: ( rule__ChapterAlpha__Group__2__Impl rule__ChapterAlpha__Group__3 )
            // InternalNLX.g:9709:2: rule__ChapterAlpha__Group__2__Impl rule__ChapterAlpha__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__ChapterAlpha__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__2"


    // $ANTLR start "rule__ChapterAlpha__Group__2__Impl"
    // InternalNLX.g:9716:1: rule__ChapterAlpha__Group__2__Impl : ( ( rule__ChapterAlpha__ValueAssignment_2 ) ) ;
    public final void rule__ChapterAlpha__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9720:1: ( ( ( rule__ChapterAlpha__ValueAssignment_2 ) ) )
            // InternalNLX.g:9721:1: ( ( rule__ChapterAlpha__ValueAssignment_2 ) )
            {
            // InternalNLX.g:9721:1: ( ( rule__ChapterAlpha__ValueAssignment_2 ) )
            // InternalNLX.g:9722:2: ( rule__ChapterAlpha__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getValueAssignment_2()); 
            }
            // InternalNLX.g:9723:2: ( rule__ChapterAlpha__ValueAssignment_2 )
            // InternalNLX.g:9723:3: rule__ChapterAlpha__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__2__Impl"


    // $ANTLR start "rule__ChapterAlpha__Group__3"
    // InternalNLX.g:9731:1: rule__ChapterAlpha__Group__3 : rule__ChapterAlpha__Group__3__Impl rule__ChapterAlpha__Group__4 ;
    public final void rule__ChapterAlpha__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9735:1: ( rule__ChapterAlpha__Group__3__Impl rule__ChapterAlpha__Group__4 )
            // InternalNLX.g:9736:2: rule__ChapterAlpha__Group__3__Impl rule__ChapterAlpha__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__ChapterAlpha__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__3"


    // $ANTLR start "rule__ChapterAlpha__Group__3__Impl"
    // InternalNLX.g:9743:1: rule__ChapterAlpha__Group__3__Impl : ( ( rule__ChapterAlpha__ValueAssignment_3 ) ) ;
    public final void rule__ChapterAlpha__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9747:1: ( ( ( rule__ChapterAlpha__ValueAssignment_3 ) ) )
            // InternalNLX.g:9748:1: ( ( rule__ChapterAlpha__ValueAssignment_3 ) )
            {
            // InternalNLX.g:9748:1: ( ( rule__ChapterAlpha__ValueAssignment_3 ) )
            // InternalNLX.g:9749:2: ( rule__ChapterAlpha__ValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getValueAssignment_3()); 
            }
            // InternalNLX.g:9750:2: ( rule__ChapterAlpha__ValueAssignment_3 )
            // InternalNLX.g:9750:3: rule__ChapterAlpha__ValueAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__ValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__3__Impl"


    // $ANTLR start "rule__ChapterAlpha__Group__4"
    // InternalNLX.g:9758:1: rule__ChapterAlpha__Group__4 : rule__ChapterAlpha__Group__4__Impl rule__ChapterAlpha__Group__5 ;
    public final void rule__ChapterAlpha__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9762:1: ( rule__ChapterAlpha__Group__4__Impl rule__ChapterAlpha__Group__5 )
            // InternalNLX.g:9763:2: rule__ChapterAlpha__Group__4__Impl rule__ChapterAlpha__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__ChapterAlpha__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__4"


    // $ANTLR start "rule__ChapterAlpha__Group__4__Impl"
    // InternalNLX.g:9770:1: rule__ChapterAlpha__Group__4__Impl : ( ( rule__ChapterAlpha__Group_4__0 )* ) ;
    public final void rule__ChapterAlpha__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9774:1: ( ( ( rule__ChapterAlpha__Group_4__0 )* ) )
            // InternalNLX.g:9775:1: ( ( rule__ChapterAlpha__Group_4__0 )* )
            {
            // InternalNLX.g:9775:1: ( ( rule__ChapterAlpha__Group_4__0 )* )
            // InternalNLX.g:9776:2: ( rule__ChapterAlpha__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getGroup_4()); 
            }
            // InternalNLX.g:9777:2: ( rule__ChapterAlpha__Group_4__0 )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==RULE_MINUS||LA133_0==RULE_DOT) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalNLX.g:9777:3: rule__ChapterAlpha__Group_4__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_57);
            	    rule__ChapterAlpha__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__4__Impl"


    // $ANTLR start "rule__ChapterAlpha__Group__5"
    // InternalNLX.g:9785:1: rule__ChapterAlpha__Group__5 : rule__ChapterAlpha__Group__5__Impl ;
    public final void rule__ChapterAlpha__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9789:1: ( rule__ChapterAlpha__Group__5__Impl )
            // InternalNLX.g:9790:2: rule__ChapterAlpha__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__5"


    // $ANTLR start "rule__ChapterAlpha__Group__5__Impl"
    // InternalNLX.g:9796:1: rule__ChapterAlpha__Group__5__Impl : ( RULE_SPACE ) ;
    public final void rule__ChapterAlpha__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9800:1: ( ( RULE_SPACE ) )
            // InternalNLX.g:9801:1: ( RULE_SPACE )
            {
            // InternalNLX.g:9801:1: ( RULE_SPACE )
            // InternalNLX.g:9802:2: RULE_SPACE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getSPACETerminalRuleCall_5()); 
            }
            match(input,RULE_SPACE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getSPACETerminalRuleCall_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group__5__Impl"


    // $ANTLR start "rule__ChapterAlpha__Group_4__0"
    // InternalNLX.g:9812:1: rule__ChapterAlpha__Group_4__0 : rule__ChapterAlpha__Group_4__0__Impl rule__ChapterAlpha__Group_4__1 ;
    public final void rule__ChapterAlpha__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9816:1: ( rule__ChapterAlpha__Group_4__0__Impl rule__ChapterAlpha__Group_4__1 )
            // InternalNLX.g:9817:2: rule__ChapterAlpha__Group_4__0__Impl rule__ChapterAlpha__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__ChapterAlpha__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group_4__0"


    // $ANTLR start "rule__ChapterAlpha__Group_4__0__Impl"
    // InternalNLX.g:9824:1: rule__ChapterAlpha__Group_4__0__Impl : ( ( rule__ChapterAlpha__Alternatives_4_0 ) ) ;
    public final void rule__ChapterAlpha__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9828:1: ( ( ( rule__ChapterAlpha__Alternatives_4_0 ) ) )
            // InternalNLX.g:9829:1: ( ( rule__ChapterAlpha__Alternatives_4_0 ) )
            {
            // InternalNLX.g:9829:1: ( ( rule__ChapterAlpha__Alternatives_4_0 ) )
            // InternalNLX.g:9830:2: ( rule__ChapterAlpha__Alternatives_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getAlternatives_4_0()); 
            }
            // InternalNLX.g:9831:2: ( rule__ChapterAlpha__Alternatives_4_0 )
            // InternalNLX.g:9831:3: rule__ChapterAlpha__Alternatives_4_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__Alternatives_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getAlternatives_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group_4__0__Impl"


    // $ANTLR start "rule__ChapterAlpha__Group_4__1"
    // InternalNLX.g:9839:1: rule__ChapterAlpha__Group_4__1 : rule__ChapterAlpha__Group_4__1__Impl ;
    public final void rule__ChapterAlpha__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9843:1: ( rule__ChapterAlpha__Group_4__1__Impl )
            // InternalNLX.g:9844:2: rule__ChapterAlpha__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group_4__1"


    // $ANTLR start "rule__ChapterAlpha__Group_4__1__Impl"
    // InternalNLX.g:9850:1: rule__ChapterAlpha__Group_4__1__Impl : ( ( rule__ChapterAlpha__ValueAssignment_4_1 ) ) ;
    public final void rule__ChapterAlpha__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9854:1: ( ( ( rule__ChapterAlpha__ValueAssignment_4_1 ) ) )
            // InternalNLX.g:9855:1: ( ( rule__ChapterAlpha__ValueAssignment_4_1 ) )
            {
            // InternalNLX.g:9855:1: ( ( rule__ChapterAlpha__ValueAssignment_4_1 ) )
            // InternalNLX.g:9856:2: ( rule__ChapterAlpha__ValueAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getValueAssignment_4_1()); 
            }
            // InternalNLX.g:9857:2: ( rule__ChapterAlpha__ValueAssignment_4_1 )
            // InternalNLX.g:9857:3: rule__ChapterAlpha__ValueAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterAlpha__ValueAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getValueAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__Group_4__1__Impl"


    // $ANTLR start "rule__SymbolsX__Group__0"
    // InternalNLX.g:9866:1: rule__SymbolsX__Group__0 : rule__SymbolsX__Group__0__Impl rule__SymbolsX__Group__1 ;
    public final void rule__SymbolsX__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9870:1: ( rule__SymbolsX__Group__0__Impl rule__SymbolsX__Group__1 )
            // InternalNLX.g:9871:2: rule__SymbolsX__Group__0__Impl rule__SymbolsX__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__SymbolsX__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SymbolsX__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SymbolsX__Group__0"


    // $ANTLR start "rule__SymbolsX__Group__0__Impl"
    // InternalNLX.g:9878:1: rule__SymbolsX__Group__0__Impl : ( () ) ;
    public final void rule__SymbolsX__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9882:1: ( ( () ) )
            // InternalNLX.g:9883:1: ( () )
            {
            // InternalNLX.g:9883:1: ( () )
            // InternalNLX.g:9884:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSymbolsXAccess().getSymbolsAction_0()); 
            }
            // InternalNLX.g:9885:2: ()
            // InternalNLX.g:9885:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSymbolsXAccess().getSymbolsAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SymbolsX__Group__0__Impl"


    // $ANTLR start "rule__SymbolsX__Group__1"
    // InternalNLX.g:9893:1: rule__SymbolsX__Group__1 : rule__SymbolsX__Group__1__Impl ;
    public final void rule__SymbolsX__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9897:1: ( rule__SymbolsX__Group__1__Impl )
            // InternalNLX.g:9898:2: rule__SymbolsX__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SymbolsX__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SymbolsX__Group__1"


    // $ANTLR start "rule__SymbolsX__Group__1__Impl"
    // InternalNLX.g:9904:1: rule__SymbolsX__Group__1__Impl : ( ( rule__SymbolsX__SymbolAssignment_1 ) ) ;
    public final void rule__SymbolsX__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9908:1: ( ( ( rule__SymbolsX__SymbolAssignment_1 ) ) )
            // InternalNLX.g:9909:1: ( ( rule__SymbolsX__SymbolAssignment_1 ) )
            {
            // InternalNLX.g:9909:1: ( ( rule__SymbolsX__SymbolAssignment_1 ) )
            // InternalNLX.g:9910:2: ( rule__SymbolsX__SymbolAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSymbolsXAccess().getSymbolAssignment_1()); 
            }
            // InternalNLX.g:9911:2: ( rule__SymbolsX__SymbolAssignment_1 )
            // InternalNLX.g:9911:3: rule__SymbolsX__SymbolAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SymbolsX__SymbolAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSymbolsXAccess().getSymbolAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SymbolsX__Group__1__Impl"


    // $ANTLR start "rule__Symbols__Group__0"
    // InternalNLX.g:9920:1: rule__Symbols__Group__0 : rule__Symbols__Group__0__Impl rule__Symbols__Group__1 ;
    public final void rule__Symbols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9924:1: ( rule__Symbols__Group__0__Impl rule__Symbols__Group__1 )
            // InternalNLX.g:9925:2: rule__Symbols__Group__0__Impl rule__Symbols__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__Symbols__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Symbols__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Symbols__Group__0"


    // $ANTLR start "rule__Symbols__Group__0__Impl"
    // InternalNLX.g:9932:1: rule__Symbols__Group__0__Impl : ( () ) ;
    public final void rule__Symbols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9936:1: ( ( () ) )
            // InternalNLX.g:9937:1: ( () )
            {
            // InternalNLX.g:9937:1: ( () )
            // InternalNLX.g:9938:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSymbolsAccess().getSymbolsAction_0()); 
            }
            // InternalNLX.g:9939:2: ()
            // InternalNLX.g:9939:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSymbolsAccess().getSymbolsAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Symbols__Group__0__Impl"


    // $ANTLR start "rule__Symbols__Group__1"
    // InternalNLX.g:9947:1: rule__Symbols__Group__1 : rule__Symbols__Group__1__Impl ;
    public final void rule__Symbols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9951:1: ( rule__Symbols__Group__1__Impl )
            // InternalNLX.g:9952:2: rule__Symbols__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Symbols__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Symbols__Group__1"


    // $ANTLR start "rule__Symbols__Group__1__Impl"
    // InternalNLX.g:9958:1: rule__Symbols__Group__1__Impl : ( ( rule__Symbols__SymbolAssignment_1 ) ) ;
    public final void rule__Symbols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9962:1: ( ( ( rule__Symbols__SymbolAssignment_1 ) ) )
            // InternalNLX.g:9963:1: ( ( rule__Symbols__SymbolAssignment_1 ) )
            {
            // InternalNLX.g:9963:1: ( ( rule__Symbols__SymbolAssignment_1 ) )
            // InternalNLX.g:9964:2: ( rule__Symbols__SymbolAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSymbolsAccess().getSymbolAssignment_1()); 
            }
            // InternalNLX.g:9965:2: ( rule__Symbols__SymbolAssignment_1 )
            // InternalNLX.g:9965:3: rule__Symbols__SymbolAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Symbols__SymbolAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSymbolsAccess().getSymbolAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Symbols__Group__1__Impl"


    // $ANTLR start "rule__ShortcutGen__Group__0"
    // InternalNLX.g:9974:1: rule__ShortcutGen__Group__0 : rule__ShortcutGen__Group__0__Impl rule__ShortcutGen__Group__1 ;
    public final void rule__ShortcutGen__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9978:1: ( rule__ShortcutGen__Group__0__Impl rule__ShortcutGen__Group__1 )
            // InternalNLX.g:9979:2: rule__ShortcutGen__Group__0__Impl rule__ShortcutGen__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__ShortcutGen__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutGen__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group__0"


    // $ANTLR start "rule__ShortcutGen__Group__0__Impl"
    // InternalNLX.g:9986:1: rule__ShortcutGen__Group__0__Impl : ( () ) ;
    public final void rule__ShortcutGen__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:9990:1: ( ( () ) )
            // InternalNLX.g:9991:1: ( () )
            {
            // InternalNLX.g:9991:1: ( () )
            // InternalNLX.g:9992:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getEStringAction_0()); 
            }
            // InternalNLX.g:9993:2: ()
            // InternalNLX.g:9993:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getEStringAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group__0__Impl"


    // $ANTLR start "rule__ShortcutGen__Group__1"
    // InternalNLX.g:10001:1: rule__ShortcutGen__Group__1 : rule__ShortcutGen__Group__1__Impl rule__ShortcutGen__Group__2 ;
    public final void rule__ShortcutGen__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10005:1: ( rule__ShortcutGen__Group__1__Impl rule__ShortcutGen__Group__2 )
            // InternalNLX.g:10006:2: rule__ShortcutGen__Group__1__Impl rule__ShortcutGen__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__ShortcutGen__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutGen__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group__1"


    // $ANTLR start "rule__ShortcutGen__Group__1__Impl"
    // InternalNLX.g:10013:1: rule__ShortcutGen__Group__1__Impl : ( ( rule__ShortcutGen__Alternatives_1 ) ) ;
    public final void rule__ShortcutGen__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10017:1: ( ( ( rule__ShortcutGen__Alternatives_1 ) ) )
            // InternalNLX.g:10018:1: ( ( rule__ShortcutGen__Alternatives_1 ) )
            {
            // InternalNLX.g:10018:1: ( ( rule__ShortcutGen__Alternatives_1 ) )
            // InternalNLX.g:10019:2: ( rule__ShortcutGen__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getAlternatives_1()); 
            }
            // InternalNLX.g:10020:2: ( rule__ShortcutGen__Alternatives_1 )
            // InternalNLX.g:10020:3: rule__ShortcutGen__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutGen__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group__1__Impl"


    // $ANTLR start "rule__ShortcutGen__Group__2"
    // InternalNLX.g:10028:1: rule__ShortcutGen__Group__2 : rule__ShortcutGen__Group__2__Impl rule__ShortcutGen__Group__3 ;
    public final void rule__ShortcutGen__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10032:1: ( rule__ShortcutGen__Group__2__Impl rule__ShortcutGen__Group__3 )
            // InternalNLX.g:10033:2: rule__ShortcutGen__Group__2__Impl rule__ShortcutGen__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__ShortcutGen__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutGen__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group__2"


    // $ANTLR start "rule__ShortcutGen__Group__2__Impl"
    // InternalNLX.g:10040:1: rule__ShortcutGen__Group__2__Impl : ( ( ( rule__ShortcutGen__Group_2__0 ) ) ( ( rule__ShortcutGen__Group_2__0 )* ) ) ;
    public final void rule__ShortcutGen__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10044:1: ( ( ( ( rule__ShortcutGen__Group_2__0 ) ) ( ( rule__ShortcutGen__Group_2__0 )* ) ) )
            // InternalNLX.g:10045:1: ( ( ( rule__ShortcutGen__Group_2__0 ) ) ( ( rule__ShortcutGen__Group_2__0 )* ) )
            {
            // InternalNLX.g:10045:1: ( ( ( rule__ShortcutGen__Group_2__0 ) ) ( ( rule__ShortcutGen__Group_2__0 )* ) )
            // InternalNLX.g:10046:2: ( ( rule__ShortcutGen__Group_2__0 ) ) ( ( rule__ShortcutGen__Group_2__0 )* )
            {
            // InternalNLX.g:10046:2: ( ( rule__ShortcutGen__Group_2__0 ) )
            // InternalNLX.g:10047:3: ( rule__ShortcutGen__Group_2__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getGroup_2()); 
            }
            // InternalNLX.g:10048:3: ( rule__ShortcutGen__Group_2__0 )
            // InternalNLX.g:10048:4: rule__ShortcutGen__Group_2__0
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__ShortcutGen__Group_2__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getGroup_2()); 
            }

            }

            // InternalNLX.g:10051:2: ( ( rule__ShortcutGen__Group_2__0 )* )
            // InternalNLX.g:10052:3: ( rule__ShortcutGen__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getGroup_2()); 
            }
            // InternalNLX.g:10053:3: ( rule__ShortcutGen__Group_2__0 )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==RULE_DOT) ) {
                    int LA134_1 = input.LA(2);

                    if ( ((LA134_1>=RULE_ALL_ALPHA && LA134_1<=RULE_ALPHA)) ) {
                        alt134=1;
                    }


                }


                switch (alt134) {
            	case 1 :
            	    // InternalNLX.g:10053:4: rule__ShortcutGen__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    rule__ShortcutGen__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getGroup_2()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group__2__Impl"


    // $ANTLR start "rule__ShortcutGen__Group__3"
    // InternalNLX.g:10062:1: rule__ShortcutGen__Group__3 : rule__ShortcutGen__Group__3__Impl ;
    public final void rule__ShortcutGen__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10066:1: ( rule__ShortcutGen__Group__3__Impl )
            // InternalNLX.g:10067:2: rule__ShortcutGen__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutGen__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group__3"


    // $ANTLR start "rule__ShortcutGen__Group__3__Impl"
    // InternalNLX.g:10073:1: rule__ShortcutGen__Group__3__Impl : ( ( rule__ShortcutGen__WordAssignment_3 ) ) ;
    public final void rule__ShortcutGen__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10077:1: ( ( ( rule__ShortcutGen__WordAssignment_3 ) ) )
            // InternalNLX.g:10078:1: ( ( rule__ShortcutGen__WordAssignment_3 ) )
            {
            // InternalNLX.g:10078:1: ( ( rule__ShortcutGen__WordAssignment_3 ) )
            // InternalNLX.g:10079:2: ( rule__ShortcutGen__WordAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getWordAssignment_3()); 
            }
            // InternalNLX.g:10080:2: ( rule__ShortcutGen__WordAssignment_3 )
            // InternalNLX.g:10080:3: rule__ShortcutGen__WordAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutGen__WordAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getWordAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group__3__Impl"


    // $ANTLR start "rule__ShortcutGen__Group_2__0"
    // InternalNLX.g:10089:1: rule__ShortcutGen__Group_2__0 : rule__ShortcutGen__Group_2__0__Impl rule__ShortcutGen__Group_2__1 ;
    public final void rule__ShortcutGen__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10093:1: ( rule__ShortcutGen__Group_2__0__Impl rule__ShortcutGen__Group_2__1 )
            // InternalNLX.g:10094:2: rule__ShortcutGen__Group_2__0__Impl rule__ShortcutGen__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__ShortcutGen__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutGen__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group_2__0"


    // $ANTLR start "rule__ShortcutGen__Group_2__0__Impl"
    // InternalNLX.g:10101:1: rule__ShortcutGen__Group_2__0__Impl : ( ( rule__ShortcutGen__WordAssignment_2_0 ) ) ;
    public final void rule__ShortcutGen__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10105:1: ( ( ( rule__ShortcutGen__WordAssignment_2_0 ) ) )
            // InternalNLX.g:10106:1: ( ( rule__ShortcutGen__WordAssignment_2_0 ) )
            {
            // InternalNLX.g:10106:1: ( ( rule__ShortcutGen__WordAssignment_2_0 ) )
            // InternalNLX.g:10107:2: ( rule__ShortcutGen__WordAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getWordAssignment_2_0()); 
            }
            // InternalNLX.g:10108:2: ( rule__ShortcutGen__WordAssignment_2_0 )
            // InternalNLX.g:10108:3: rule__ShortcutGen__WordAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutGen__WordAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getWordAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group_2__0__Impl"


    // $ANTLR start "rule__ShortcutGen__Group_2__1"
    // InternalNLX.g:10116:1: rule__ShortcutGen__Group_2__1 : rule__ShortcutGen__Group_2__1__Impl ;
    public final void rule__ShortcutGen__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10120:1: ( rule__ShortcutGen__Group_2__1__Impl )
            // InternalNLX.g:10121:2: rule__ShortcutGen__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutGen__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group_2__1"


    // $ANTLR start "rule__ShortcutGen__Group_2__1__Impl"
    // InternalNLX.g:10127:1: rule__ShortcutGen__Group_2__1__Impl : ( ( rule__ShortcutGen__Alternatives_2_1 ) ) ;
    public final void rule__ShortcutGen__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10131:1: ( ( ( rule__ShortcutGen__Alternatives_2_1 ) ) )
            // InternalNLX.g:10132:1: ( ( rule__ShortcutGen__Alternatives_2_1 ) )
            {
            // InternalNLX.g:10132:1: ( ( rule__ShortcutGen__Alternatives_2_1 ) )
            // InternalNLX.g:10133:2: ( rule__ShortcutGen__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getAlternatives_2_1()); 
            }
            // InternalNLX.g:10134:2: ( rule__ShortcutGen__Alternatives_2_1 )
            // InternalNLX.g:10134:3: rule__ShortcutGen__Alternatives_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutGen__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__Group_2__1__Impl"


    // $ANTLR start "rule__ShortcutLib__Group__0"
    // InternalNLX.g:10143:1: rule__ShortcutLib__Group__0 : rule__ShortcutLib__Group__0__Impl rule__ShortcutLib__Group__1 ;
    public final void rule__ShortcutLib__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10147:1: ( rule__ShortcutLib__Group__0__Impl rule__ShortcutLib__Group__1 )
            // InternalNLX.g:10148:2: rule__ShortcutLib__Group__0__Impl rule__ShortcutLib__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__ShortcutLib__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutLib__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutLib__Group__0"


    // $ANTLR start "rule__ShortcutLib__Group__0__Impl"
    // InternalNLX.g:10155:1: rule__ShortcutLib__Group__0__Impl : ( () ) ;
    public final void rule__ShortcutLib__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10159:1: ( ( () ) )
            // InternalNLX.g:10160:1: ( () )
            {
            // InternalNLX.g:10160:1: ( () )
            // InternalNLX.g:10161:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutLibAccess().getEStringAction_0()); 
            }
            // InternalNLX.g:10162:2: ()
            // InternalNLX.g:10162:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutLibAccess().getEStringAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutLib__Group__0__Impl"


    // $ANTLR start "rule__ShortcutLib__Group__1"
    // InternalNLX.g:10170:1: rule__ShortcutLib__Group__1 : rule__ShortcutLib__Group__1__Impl ;
    public final void rule__ShortcutLib__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10174:1: ( rule__ShortcutLib__Group__1__Impl )
            // InternalNLX.g:10175:2: rule__ShortcutLib__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutLib__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutLib__Group__1"


    // $ANTLR start "rule__ShortcutLib__Group__1__Impl"
    // InternalNLX.g:10181:1: rule__ShortcutLib__Group__1__Impl : ( ( rule__ShortcutLib__ShortcutAssignment_1 ) ) ;
    public final void rule__ShortcutLib__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10185:1: ( ( ( rule__ShortcutLib__ShortcutAssignment_1 ) ) )
            // InternalNLX.g:10186:1: ( ( rule__ShortcutLib__ShortcutAssignment_1 ) )
            {
            // InternalNLX.g:10186:1: ( ( rule__ShortcutLib__ShortcutAssignment_1 ) )
            // InternalNLX.g:10187:2: ( rule__ShortcutLib__ShortcutAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutLibAccess().getShortcutAssignment_1()); 
            }
            // InternalNLX.g:10188:2: ( rule__ShortcutLib__ShortcutAssignment_1 )
            // InternalNLX.g:10188:3: rule__ShortcutLib__ShortcutAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShortcutLib__ShortcutAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutLibAccess().getShortcutAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutLib__Group__1__Impl"


    // $ANTLR start "rule__ItNum__Group__0"
    // InternalNLX.g:10197:1: rule__ItNum__Group__0 : rule__ItNum__Group__0__Impl rule__ItNum__Group__1 ;
    public final void rule__ItNum__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10201:1: ( rule__ItNum__Group__0__Impl rule__ItNum__Group__1 )
            // InternalNLX.g:10202:2: rule__ItNum__Group__0__Impl rule__ItNum__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__ItNum__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItNum__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group__0"


    // $ANTLR start "rule__ItNum__Group__0__Impl"
    // InternalNLX.g:10209:1: rule__ItNum__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__ItNum__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10213:1: ( ( RULE_INT ) )
            // InternalNLX.g:10214:1: ( RULE_INT )
            {
            // InternalNLX.g:10214:1: ( RULE_INT )
            // InternalNLX.g:10215:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItNumAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItNumAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group__0__Impl"


    // $ANTLR start "rule__ItNum__Group__1"
    // InternalNLX.g:10224:1: rule__ItNum__Group__1 : rule__ItNum__Group__1__Impl rule__ItNum__Group__2 ;
    public final void rule__ItNum__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10228:1: ( rule__ItNum__Group__1__Impl rule__ItNum__Group__2 )
            // InternalNLX.g:10229:2: rule__ItNum__Group__1__Impl rule__ItNum__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__ItNum__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItNum__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group__1"


    // $ANTLR start "rule__ItNum__Group__1__Impl"
    // InternalNLX.g:10236:1: rule__ItNum__Group__1__Impl : ( ( ( rule__ItNum__Group_1__0 ) ) ( ( rule__ItNum__Group_1__0 )* ) ) ;
    public final void rule__ItNum__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10240:1: ( ( ( ( rule__ItNum__Group_1__0 ) ) ( ( rule__ItNum__Group_1__0 )* ) ) )
            // InternalNLX.g:10241:1: ( ( ( rule__ItNum__Group_1__0 ) ) ( ( rule__ItNum__Group_1__0 )* ) )
            {
            // InternalNLX.g:10241:1: ( ( ( rule__ItNum__Group_1__0 ) ) ( ( rule__ItNum__Group_1__0 )* ) )
            // InternalNLX.g:10242:2: ( ( rule__ItNum__Group_1__0 ) ) ( ( rule__ItNum__Group_1__0 )* )
            {
            // InternalNLX.g:10242:2: ( ( rule__ItNum__Group_1__0 ) )
            // InternalNLX.g:10243:3: ( rule__ItNum__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItNumAccess().getGroup_1()); 
            }
            // InternalNLX.g:10244:3: ( rule__ItNum__Group_1__0 )
            // InternalNLX.g:10244:4: rule__ItNum__Group_1__0
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__ItNum__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItNumAccess().getGroup_1()); 
            }

            }

            // InternalNLX.g:10247:2: ( ( rule__ItNum__Group_1__0 )* )
            // InternalNLX.g:10248:3: ( rule__ItNum__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItNumAccess().getGroup_1()); 
            }
            // InternalNLX.g:10249:3: ( rule__ItNum__Group_1__0 )*
            loop135:
            do {
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( ((LA135_0>=RULE_DASH && LA135_0<=RULE_MINUS)||LA135_0==RULE_SLASH||(LA135_0>=RULE_SEPARATORS_IT && LA135_0<=RULE_COLON)) ) {
                    alt135=1;
                }


                switch (alt135) {
            	case 1 :
            	    // InternalNLX.g:10249:4: rule__ItNum__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_66);
            	    rule__ItNum__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop135;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItNumAccess().getGroup_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group__1__Impl"


    // $ANTLR start "rule__ItNum__Group__2"
    // InternalNLX.g:10258:1: rule__ItNum__Group__2 : rule__ItNum__Group__2__Impl ;
    public final void rule__ItNum__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10262:1: ( rule__ItNum__Group__2__Impl )
            // InternalNLX.g:10263:2: rule__ItNum__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItNum__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group__2"


    // $ANTLR start "rule__ItNum__Group__2__Impl"
    // InternalNLX.g:10269:1: rule__ItNum__Group__2__Impl : ( ( rule__ItNum__Group_2__0 )? ) ;
    public final void rule__ItNum__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10273:1: ( ( ( rule__ItNum__Group_2__0 )? ) )
            // InternalNLX.g:10274:1: ( ( rule__ItNum__Group_2__0 )? )
            {
            // InternalNLX.g:10274:1: ( ( rule__ItNum__Group_2__0 )? )
            // InternalNLX.g:10275:2: ( rule__ItNum__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItNumAccess().getGroup_2()); 
            }
            // InternalNLX.g:10276:2: ( rule__ItNum__Group_2__0 )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==RULE_KM) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalNLX.g:10276:3: rule__ItNum__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ItNum__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItNumAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group__2__Impl"


    // $ANTLR start "rule__ItNum__Group_1__0"
    // InternalNLX.g:10285:1: rule__ItNum__Group_1__0 : rule__ItNum__Group_1__0__Impl rule__ItNum__Group_1__1 ;
    public final void rule__ItNum__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10289:1: ( rule__ItNum__Group_1__0__Impl rule__ItNum__Group_1__1 )
            // InternalNLX.g:10290:2: rule__ItNum__Group_1__0__Impl rule__ItNum__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__ItNum__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItNum__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group_1__0"


    // $ANTLR start "rule__ItNum__Group_1__0__Impl"
    // InternalNLX.g:10297:1: rule__ItNum__Group_1__0__Impl : ( ( rule__ItNum__Alternatives_1_0 ) ) ;
    public final void rule__ItNum__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10301:1: ( ( ( rule__ItNum__Alternatives_1_0 ) ) )
            // InternalNLX.g:10302:1: ( ( rule__ItNum__Alternatives_1_0 ) )
            {
            // InternalNLX.g:10302:1: ( ( rule__ItNum__Alternatives_1_0 ) )
            // InternalNLX.g:10303:2: ( rule__ItNum__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItNumAccess().getAlternatives_1_0()); 
            }
            // InternalNLX.g:10304:2: ( rule__ItNum__Alternatives_1_0 )
            // InternalNLX.g:10304:3: rule__ItNum__Alternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItNum__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItNumAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group_1__0__Impl"


    // $ANTLR start "rule__ItNum__Group_1__1"
    // InternalNLX.g:10312:1: rule__ItNum__Group_1__1 : rule__ItNum__Group_1__1__Impl ;
    public final void rule__ItNum__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10316:1: ( rule__ItNum__Group_1__1__Impl )
            // InternalNLX.g:10317:2: rule__ItNum__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItNum__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group_1__1"


    // $ANTLR start "rule__ItNum__Group_1__1__Impl"
    // InternalNLX.g:10323:1: rule__ItNum__Group_1__1__Impl : ( RULE_INT ) ;
    public final void rule__ItNum__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10327:1: ( ( RULE_INT ) )
            // InternalNLX.g:10328:1: ( RULE_INT )
            {
            // InternalNLX.g:10328:1: ( RULE_INT )
            // InternalNLX.g:10329:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItNumAccess().getINTTerminalRuleCall_1_1()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItNumAccess().getINTTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group_1__1__Impl"


    // $ANTLR start "rule__ItNum__Group_2__0"
    // InternalNLX.g:10339:1: rule__ItNum__Group_2__0 : rule__ItNum__Group_2__0__Impl rule__ItNum__Group_2__1 ;
    public final void rule__ItNum__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10343:1: ( rule__ItNum__Group_2__0__Impl rule__ItNum__Group_2__1 )
            // InternalNLX.g:10344:2: rule__ItNum__Group_2__0__Impl rule__ItNum__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__ItNum__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItNum__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group_2__0"


    // $ANTLR start "rule__ItNum__Group_2__0__Impl"
    // InternalNLX.g:10351:1: rule__ItNum__Group_2__0__Impl : ( RULE_KM ) ;
    public final void rule__ItNum__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10355:1: ( ( RULE_KM ) )
            // InternalNLX.g:10356:1: ( RULE_KM )
            {
            // InternalNLX.g:10356:1: ( RULE_KM )
            // InternalNLX.g:10357:2: RULE_KM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItNumAccess().getKMTerminalRuleCall_2_0()); 
            }
            match(input,RULE_KM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItNumAccess().getKMTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group_2__0__Impl"


    // $ANTLR start "rule__ItNum__Group_2__1"
    // InternalNLX.g:10366:1: rule__ItNum__Group_2__1 : rule__ItNum__Group_2__1__Impl ;
    public final void rule__ItNum__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10370:1: ( rule__ItNum__Group_2__1__Impl )
            // InternalNLX.g:10371:2: rule__ItNum__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ItNum__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group_2__1"


    // $ANTLR start "rule__ItNum__Group_2__1__Impl"
    // InternalNLX.g:10377:1: rule__ItNum__Group_2__1__Impl : ( RULE_INT ) ;
    public final void rule__ItNum__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10381:1: ( ( RULE_INT ) )
            // InternalNLX.g:10382:1: ( RULE_INT )
            {
            // InternalNLX.g:10382:1: ( RULE_INT )
            // InternalNLX.g:10383:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItNumAccess().getINTTerminalRuleCall_2_1()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItNumAccess().getINTTerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItNum__Group_2__1__Impl"


    // $ANTLR start "rule__DecimalNumEN__Group__0"
    // InternalNLX.g:10393:1: rule__DecimalNumEN__Group__0 : rule__DecimalNumEN__Group__0__Impl rule__DecimalNumEN__Group__1 ;
    public final void rule__DecimalNumEN__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10397:1: ( rule__DecimalNumEN__Group__0__Impl rule__DecimalNumEN__Group__1 )
            // InternalNLX.g:10398:2: rule__DecimalNumEN__Group__0__Impl rule__DecimalNumEN__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__DecimalNumEN__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalNumEN__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumEN__Group__0"


    // $ANTLR start "rule__DecimalNumEN__Group__0__Impl"
    // InternalNLX.g:10405:1: rule__DecimalNumEN__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__DecimalNumEN__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10409:1: ( ( RULE_INT ) )
            // InternalNLX.g:10410:1: ( RULE_INT )
            {
            // InternalNLX.g:10410:1: ( RULE_INT )
            // InternalNLX.g:10411:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalNumENAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalNumENAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumEN__Group__0__Impl"


    // $ANTLR start "rule__DecimalNumEN__Group__1"
    // InternalNLX.g:10420:1: rule__DecimalNumEN__Group__1 : rule__DecimalNumEN__Group__1__Impl rule__DecimalNumEN__Group__2 ;
    public final void rule__DecimalNumEN__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10424:1: ( rule__DecimalNumEN__Group__1__Impl rule__DecimalNumEN__Group__2 )
            // InternalNLX.g:10425:2: rule__DecimalNumEN__Group__1__Impl rule__DecimalNumEN__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__DecimalNumEN__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalNumEN__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumEN__Group__1"


    // $ANTLR start "rule__DecimalNumEN__Group__1__Impl"
    // InternalNLX.g:10432:1: rule__DecimalNumEN__Group__1__Impl : ( RULE_DOT ) ;
    public final void rule__DecimalNumEN__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10436:1: ( ( RULE_DOT ) )
            // InternalNLX.g:10437:1: ( RULE_DOT )
            {
            // InternalNLX.g:10437:1: ( RULE_DOT )
            // InternalNLX.g:10438:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalNumENAccess().getDOTTerminalRuleCall_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalNumENAccess().getDOTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumEN__Group__1__Impl"


    // $ANTLR start "rule__DecimalNumEN__Group__2"
    // InternalNLX.g:10447:1: rule__DecimalNumEN__Group__2 : rule__DecimalNumEN__Group__2__Impl ;
    public final void rule__DecimalNumEN__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10451:1: ( rule__DecimalNumEN__Group__2__Impl )
            // InternalNLX.g:10452:2: rule__DecimalNumEN__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalNumEN__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumEN__Group__2"


    // $ANTLR start "rule__DecimalNumEN__Group__2__Impl"
    // InternalNLX.g:10458:1: rule__DecimalNumEN__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__DecimalNumEN__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10462:1: ( ( RULE_INT ) )
            // InternalNLX.g:10463:1: ( RULE_INT )
            {
            // InternalNLX.g:10463:1: ( RULE_INT )
            // InternalNLX.g:10464:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalNumENAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalNumENAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumEN__Group__2__Impl"


    // $ANTLR start "rule__DecimalNumDE__Group__0"
    // InternalNLX.g:10474:1: rule__DecimalNumDE__Group__0 : rule__DecimalNumDE__Group__0__Impl rule__DecimalNumDE__Group__1 ;
    public final void rule__DecimalNumDE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10478:1: ( rule__DecimalNumDE__Group__0__Impl rule__DecimalNumDE__Group__1 )
            // InternalNLX.g:10479:2: rule__DecimalNumDE__Group__0__Impl rule__DecimalNumDE__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__DecimalNumDE__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalNumDE__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumDE__Group__0"


    // $ANTLR start "rule__DecimalNumDE__Group__0__Impl"
    // InternalNLX.g:10486:1: rule__DecimalNumDE__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__DecimalNumDE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10490:1: ( ( RULE_INT ) )
            // InternalNLX.g:10491:1: ( RULE_INT )
            {
            // InternalNLX.g:10491:1: ( RULE_INT )
            // InternalNLX.g:10492:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalNumDEAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalNumDEAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumDE__Group__0__Impl"


    // $ANTLR start "rule__DecimalNumDE__Group__1"
    // InternalNLX.g:10501:1: rule__DecimalNumDE__Group__1 : rule__DecimalNumDE__Group__1__Impl rule__DecimalNumDE__Group__2 ;
    public final void rule__DecimalNumDE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10505:1: ( rule__DecimalNumDE__Group__1__Impl rule__DecimalNumDE__Group__2 )
            // InternalNLX.g:10506:2: rule__DecimalNumDE__Group__1__Impl rule__DecimalNumDE__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__DecimalNumDE__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalNumDE__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumDE__Group__1"


    // $ANTLR start "rule__DecimalNumDE__Group__1__Impl"
    // InternalNLX.g:10513:1: rule__DecimalNumDE__Group__1__Impl : ( RULE_KM ) ;
    public final void rule__DecimalNumDE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10517:1: ( ( RULE_KM ) )
            // InternalNLX.g:10518:1: ( RULE_KM )
            {
            // InternalNLX.g:10518:1: ( RULE_KM )
            // InternalNLX.g:10519:2: RULE_KM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalNumDEAccess().getKMTerminalRuleCall_1()); 
            }
            match(input,RULE_KM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalNumDEAccess().getKMTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumDE__Group__1__Impl"

}

@SuppressWarnings("all")
abstract class InternalNLXParser9 extends InternalNLXParser8 {

        InternalNLXParser9(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalNLXParser9(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__DecimalNumDE__Group__2"
    // InternalNLX.g:10528:1: rule__DecimalNumDE__Group__2 : rule__DecimalNumDE__Group__2__Impl ;
    public final void rule__DecimalNumDE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10532:1: ( rule__DecimalNumDE__Group__2__Impl )
            // InternalNLX.g:10533:2: rule__DecimalNumDE__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalNumDE__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumDE__Group__2"


    // $ANTLR start "rule__DecimalNumDE__Group__2__Impl"
    // InternalNLX.g:10539:1: rule__DecimalNumDE__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__DecimalNumDE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10543:1: ( ( RULE_INT ) )
            // InternalNLX.g:10544:1: ( RULE_INT )
            {
            // InternalNLX.g:10544:1: ( RULE_INT )
            // InternalNLX.g:10545:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalNumDEAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalNumDEAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalNumDE__Group__2__Impl"


    // $ANTLR start "rule__ChapterNum__Group__0"
    // InternalNLX.g:10555:1: rule__ChapterNum__Group__0 : rule__ChapterNum__Group__0__Impl rule__ChapterNum__Group__1 ;
    public final void rule__ChapterNum__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10559:1: ( rule__ChapterNum__Group__0__Impl rule__ChapterNum__Group__1 )
            // InternalNLX.g:10560:2: rule__ChapterNum__Group__0__Impl rule__ChapterNum__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__ChapterNum__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterNum__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterNum__Group__0"


    // $ANTLR start "rule__ChapterNum__Group__0__Impl"
    // InternalNLX.g:10567:1: rule__ChapterNum__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__ChapterNum__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10571:1: ( ( RULE_INT ) )
            // InternalNLX.g:10572:1: ( RULE_INT )
            {
            // InternalNLX.g:10572:1: ( RULE_INT )
            // InternalNLX.g:10573:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterNumAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterNumAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterNum__Group__0__Impl"


    // $ANTLR start "rule__ChapterNum__Group__1"
    // InternalNLX.g:10582:1: rule__ChapterNum__Group__1 : rule__ChapterNum__Group__1__Impl ;
    public final void rule__ChapterNum__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10586:1: ( rule__ChapterNum__Group__1__Impl )
            // InternalNLX.g:10587:2: rule__ChapterNum__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterNum__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterNum__Group__1"


    // $ANTLR start "rule__ChapterNum__Group__1__Impl"
    // InternalNLX.g:10593:1: rule__ChapterNum__Group__1__Impl : ( ( ( rule__ChapterNum__Group_1__0 ) ) ( ( rule__ChapterNum__Group_1__0 )* ) ) ;
    public final void rule__ChapterNum__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10597:1: ( ( ( ( rule__ChapterNum__Group_1__0 ) ) ( ( rule__ChapterNum__Group_1__0 )* ) ) )
            // InternalNLX.g:10598:1: ( ( ( rule__ChapterNum__Group_1__0 ) ) ( ( rule__ChapterNum__Group_1__0 )* ) )
            {
            // InternalNLX.g:10598:1: ( ( ( rule__ChapterNum__Group_1__0 ) ) ( ( rule__ChapterNum__Group_1__0 )* ) )
            // InternalNLX.g:10599:2: ( ( rule__ChapterNum__Group_1__0 ) ) ( ( rule__ChapterNum__Group_1__0 )* )
            {
            // InternalNLX.g:10599:2: ( ( rule__ChapterNum__Group_1__0 ) )
            // InternalNLX.g:10600:3: ( rule__ChapterNum__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterNumAccess().getGroup_1()); 
            }
            // InternalNLX.g:10601:3: ( rule__ChapterNum__Group_1__0 )
            // InternalNLX.g:10601:4: rule__ChapterNum__Group_1__0
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__ChapterNum__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterNumAccess().getGroup_1()); 
            }

            }

            // InternalNLX.g:10604:2: ( ( rule__ChapterNum__Group_1__0 )* )
            // InternalNLX.g:10605:3: ( rule__ChapterNum__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterNumAccess().getGroup_1()); 
            }
            // InternalNLX.g:10606:3: ( rule__ChapterNum__Group_1__0 )*
            loop137:
            do {
                int alt137=2;
                alt137 = dfa137.predict(input);
                switch (alt137) {
            	case 1 :
            	    // InternalNLX.g:10606:4: rule__ChapterNum__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    rule__ChapterNum__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterNumAccess().getGroup_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterNum__Group__1__Impl"


    // $ANTLR start "rule__ChapterNum__Group_1__0"
    // InternalNLX.g:10616:1: rule__ChapterNum__Group_1__0 : rule__ChapterNum__Group_1__0__Impl rule__ChapterNum__Group_1__1 ;
    public final void rule__ChapterNum__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10620:1: ( rule__ChapterNum__Group_1__0__Impl rule__ChapterNum__Group_1__1 )
            // InternalNLX.g:10621:2: rule__ChapterNum__Group_1__0__Impl rule__ChapterNum__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__ChapterNum__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterNum__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterNum__Group_1__0"


    // $ANTLR start "rule__ChapterNum__Group_1__0__Impl"
    // InternalNLX.g:10628:1: rule__ChapterNum__Group_1__0__Impl : ( RULE_DOT ) ;
    public final void rule__ChapterNum__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10632:1: ( ( RULE_DOT ) )
            // InternalNLX.g:10633:1: ( RULE_DOT )
            {
            // InternalNLX.g:10633:1: ( RULE_DOT )
            // InternalNLX.g:10634:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterNumAccess().getDOTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterNumAccess().getDOTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterNum__Group_1__0__Impl"


    // $ANTLR start "rule__ChapterNum__Group_1__1"
    // InternalNLX.g:10643:1: rule__ChapterNum__Group_1__1 : rule__ChapterNum__Group_1__1__Impl ;
    public final void rule__ChapterNum__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10647:1: ( rule__ChapterNum__Group_1__1__Impl )
            // InternalNLX.g:10648:2: rule__ChapterNum__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChapterNum__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterNum__Group_1__1"


    // $ANTLR start "rule__ChapterNum__Group_1__1__Impl"
    // InternalNLX.g:10654:1: rule__ChapterNum__Group_1__1__Impl : ( ruleChapterIntermediate ) ;
    public final void rule__ChapterNum__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10658:1: ( ( ruleChapterIntermediate ) )
            // InternalNLX.g:10659:1: ( ruleChapterIntermediate )
            {
            // InternalNLX.g:10659:1: ( ruleChapterIntermediate )
            // InternalNLX.g:10660:2: ruleChapterIntermediate
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterNumAccess().getChapterIntermediateParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleChapterIntermediate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterNumAccess().getChapterIntermediateParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterNum__Group_1__1__Impl"


    // $ANTLR start "rule__UrlAdress__Group__0"
    // InternalNLX.g:10670:1: rule__UrlAdress__Group__0 : rule__UrlAdress__Group__0__Impl rule__UrlAdress__Group__1 ;
    public final void rule__UrlAdress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10674:1: ( rule__UrlAdress__Group__0__Impl rule__UrlAdress__Group__1 )
            // InternalNLX.g:10675:2: rule__UrlAdress__Group__0__Impl rule__UrlAdress__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__UrlAdress__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UrlAdress__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group__0"


    // $ANTLR start "rule__UrlAdress__Group__0__Impl"
    // InternalNLX.g:10682:1: rule__UrlAdress__Group__0__Impl : ( ( rule__UrlAdress__ProtocolAssignment_0 ) ) ;
    public final void rule__UrlAdress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10686:1: ( ( ( rule__UrlAdress__ProtocolAssignment_0 ) ) )
            // InternalNLX.g:10687:1: ( ( rule__UrlAdress__ProtocolAssignment_0 ) )
            {
            // InternalNLX.g:10687:1: ( ( rule__UrlAdress__ProtocolAssignment_0 ) )
            // InternalNLX.g:10688:2: ( rule__UrlAdress__ProtocolAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getProtocolAssignment_0()); 
            }
            // InternalNLX.g:10689:2: ( rule__UrlAdress__ProtocolAssignment_0 )
            // InternalNLX.g:10689:3: rule__UrlAdress__ProtocolAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UrlAdress__ProtocolAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getProtocolAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group__0__Impl"


    // $ANTLR start "rule__UrlAdress__Group__1"
    // InternalNLX.g:10697:1: rule__UrlAdress__Group__1 : rule__UrlAdress__Group__1__Impl rule__UrlAdress__Group__2 ;
    public final void rule__UrlAdress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10701:1: ( rule__UrlAdress__Group__1__Impl rule__UrlAdress__Group__2 )
            // InternalNLX.g:10702:2: rule__UrlAdress__Group__1__Impl rule__UrlAdress__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__UrlAdress__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UrlAdress__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group__1"


    // $ANTLR start "rule__UrlAdress__Group__1__Impl"
    // InternalNLX.g:10709:1: rule__UrlAdress__Group__1__Impl : ( ( rule__UrlAdress__UrlAssignment_1 ) ) ;
    public final void rule__UrlAdress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10713:1: ( ( ( rule__UrlAdress__UrlAssignment_1 ) ) )
            // InternalNLX.g:10714:1: ( ( rule__UrlAdress__UrlAssignment_1 ) )
            {
            // InternalNLX.g:10714:1: ( ( rule__UrlAdress__UrlAssignment_1 ) )
            // InternalNLX.g:10715:2: ( rule__UrlAdress__UrlAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getUrlAssignment_1()); 
            }
            // InternalNLX.g:10716:2: ( rule__UrlAdress__UrlAssignment_1 )
            // InternalNLX.g:10716:3: rule__UrlAdress__UrlAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UrlAdress__UrlAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getUrlAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group__1__Impl"


    // $ANTLR start "rule__UrlAdress__Group__2"
    // InternalNLX.g:10724:1: rule__UrlAdress__Group__2 : rule__UrlAdress__Group__2__Impl rule__UrlAdress__Group__3 ;
    public final void rule__UrlAdress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10728:1: ( rule__UrlAdress__Group__2__Impl rule__UrlAdress__Group__3 )
            // InternalNLX.g:10729:2: rule__UrlAdress__Group__2__Impl rule__UrlAdress__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__UrlAdress__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UrlAdress__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group__2"


    // $ANTLR start "rule__UrlAdress__Group__2__Impl"
    // InternalNLX.g:10736:1: rule__UrlAdress__Group__2__Impl : ( ( rule__UrlAdress__Group_2__0 )* ) ;
    public final void rule__UrlAdress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10740:1: ( ( ( rule__UrlAdress__Group_2__0 )* ) )
            // InternalNLX.g:10741:1: ( ( rule__UrlAdress__Group_2__0 )* )
            {
            // InternalNLX.g:10741:1: ( ( rule__UrlAdress__Group_2__0 )* )
            // InternalNLX.g:10742:2: ( rule__UrlAdress__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getGroup_2()); 
            }
            // InternalNLX.g:10743:2: ( rule__UrlAdress__Group_2__0 )*
            loop138:
            do {
                int alt138=2;
                alt138 = dfa138.predict(input);
                switch (alt138) {
            	case 1 :
            	    // InternalNLX.g:10743:3: rule__UrlAdress__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__UrlAdress__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group__2__Impl"


    // $ANTLR start "rule__UrlAdress__Group__3"
    // InternalNLX.g:10751:1: rule__UrlAdress__Group__3 : rule__UrlAdress__Group__3__Impl ;
    public final void rule__UrlAdress__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10755:1: ( rule__UrlAdress__Group__3__Impl )
            // InternalNLX.g:10756:2: rule__UrlAdress__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UrlAdress__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group__3"


    // $ANTLR start "rule__UrlAdress__Group__3__Impl"
    // InternalNLX.g:10762:1: rule__UrlAdress__Group__3__Impl : ( ( rule__UrlAdress__UrlAssignment_3 )* ) ;
    public final void rule__UrlAdress__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10766:1: ( ( ( rule__UrlAdress__UrlAssignment_3 )* ) )
            // InternalNLX.g:10767:1: ( ( rule__UrlAdress__UrlAssignment_3 )* )
            {
            // InternalNLX.g:10767:1: ( ( rule__UrlAdress__UrlAssignment_3 )* )
            // InternalNLX.g:10768:2: ( rule__UrlAdress__UrlAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getUrlAssignment_3()); 
            }
            // InternalNLX.g:10769:2: ( rule__UrlAdress__UrlAssignment_3 )*
            loop139:
            do {
                int alt139=2;
                int LA139_0 = input.LA(1);

                if ( (LA139_0==RULE_DOT) ) {
                    int LA139_2 = input.LA(2);

                    if ( (synpred196_InternalNLX()) ) {
                        alt139=1;
                    }


                }
                else if ( ((LA139_0>=RULE_DASH && LA139_0<=RULE_MINUS)||(LA139_0>=RULE_SLASH && LA139_0<=RULE_COLON)) ) {
                    alt139=1;
                }


                switch (alt139) {
            	case 1 :
            	    // InternalNLX.g:10769:3: rule__UrlAdress__UrlAssignment_3
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__UrlAdress__UrlAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getUrlAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group__3__Impl"


    // $ANTLR start "rule__UrlAdress__Group_2__0"
    // InternalNLX.g:10778:1: rule__UrlAdress__Group_2__0 : rule__UrlAdress__Group_2__0__Impl rule__UrlAdress__Group_2__1 ;
    public final void rule__UrlAdress__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10782:1: ( rule__UrlAdress__Group_2__0__Impl rule__UrlAdress__Group_2__1 )
            // InternalNLX.g:10783:2: rule__UrlAdress__Group_2__0__Impl rule__UrlAdress__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__UrlAdress__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UrlAdress__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group_2__0"


    // $ANTLR start "rule__UrlAdress__Group_2__0__Impl"
    // InternalNLX.g:10790:1: rule__UrlAdress__Group_2__0__Impl : ( ( ( rule__UrlAdress__UrlAssignment_2_0 ) ) ( ( rule__UrlAdress__UrlAssignment_2_0 )* ) ) ;
    public final void rule__UrlAdress__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10794:1: ( ( ( ( rule__UrlAdress__UrlAssignment_2_0 ) ) ( ( rule__UrlAdress__UrlAssignment_2_0 )* ) ) )
            // InternalNLX.g:10795:1: ( ( ( rule__UrlAdress__UrlAssignment_2_0 ) ) ( ( rule__UrlAdress__UrlAssignment_2_0 )* ) )
            {
            // InternalNLX.g:10795:1: ( ( ( rule__UrlAdress__UrlAssignment_2_0 ) ) ( ( rule__UrlAdress__UrlAssignment_2_0 )* ) )
            // InternalNLX.g:10796:2: ( ( rule__UrlAdress__UrlAssignment_2_0 ) ) ( ( rule__UrlAdress__UrlAssignment_2_0 )* )
            {
            // InternalNLX.g:10796:2: ( ( rule__UrlAdress__UrlAssignment_2_0 ) )
            // InternalNLX.g:10797:3: ( rule__UrlAdress__UrlAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_0()); 
            }
            // InternalNLX.g:10798:3: ( rule__UrlAdress__UrlAssignment_2_0 )
            // InternalNLX.g:10798:4: rule__UrlAdress__UrlAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__UrlAdress__UrlAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_0()); 
            }

            }

            // InternalNLX.g:10801:2: ( ( rule__UrlAdress__UrlAssignment_2_0 )* )
            // InternalNLX.g:10802:3: ( rule__UrlAdress__UrlAssignment_2_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_0()); 
            }
            // InternalNLX.g:10803:3: ( rule__UrlAdress__UrlAssignment_2_0 )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( ((LA140_0>=RULE_DASH && LA140_0<=RULE_MINUS)||LA140_0==RULE_DOT||(LA140_0>=RULE_SLASH && LA140_0<=RULE_COLON)) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalNLX.g:10803:4: rule__UrlAdress__UrlAssignment_2_0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__UrlAdress__UrlAssignment_2_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_0()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group_2__0__Impl"


    // $ANTLR start "rule__UrlAdress__Group_2__1"
    // InternalNLX.g:10812:1: rule__UrlAdress__Group_2__1 : rule__UrlAdress__Group_2__1__Impl ;
    public final void rule__UrlAdress__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10816:1: ( rule__UrlAdress__Group_2__1__Impl )
            // InternalNLX.g:10817:2: rule__UrlAdress__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UrlAdress__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group_2__1"


    // $ANTLR start "rule__UrlAdress__Group_2__1__Impl"
    // InternalNLX.g:10823:1: rule__UrlAdress__Group_2__1__Impl : ( ( rule__UrlAdress__Alternatives_2_1 ) ) ;
    public final void rule__UrlAdress__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10827:1: ( ( ( rule__UrlAdress__Alternatives_2_1 ) ) )
            // InternalNLX.g:10828:1: ( ( rule__UrlAdress__Alternatives_2_1 ) )
            {
            // InternalNLX.g:10828:1: ( ( rule__UrlAdress__Alternatives_2_1 ) )
            // InternalNLX.g:10829:2: ( rule__UrlAdress__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getAlternatives_2_1()); 
            }
            // InternalNLX.g:10830:2: ( rule__UrlAdress__Alternatives_2_1 )
            // InternalNLX.g:10830:3: rule__UrlAdress__Alternatives_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UrlAdress__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__Group_2__1__Impl"


    // $ANTLR start "rule__MailAdress__Group__0"
    // InternalNLX.g:10839:1: rule__MailAdress__Group__0 : rule__MailAdress__Group__0__Impl rule__MailAdress__Group__1 ;
    public final void rule__MailAdress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10843:1: ( rule__MailAdress__Group__0__Impl rule__MailAdress__Group__1 )
            // InternalNLX.g:10844:2: rule__MailAdress__Group__0__Impl rule__MailAdress__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__MailAdress__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MailAdress__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MailAdress__Group__0"


    // $ANTLR start "rule__MailAdress__Group__0__Impl"
    // InternalNLX.g:10851:1: rule__MailAdress__Group__0__Impl : ( ( rule__MailAdress__Alternatives_0 ) ) ;
    public final void rule__MailAdress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10855:1: ( ( ( rule__MailAdress__Alternatives_0 ) ) )
            // InternalNLX.g:10856:1: ( ( rule__MailAdress__Alternatives_0 ) )
            {
            // InternalNLX.g:10856:1: ( ( rule__MailAdress__Alternatives_0 ) )
            // InternalNLX.g:10857:2: ( rule__MailAdress__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMailAdressAccess().getAlternatives_0()); 
            }
            // InternalNLX.g:10858:2: ( rule__MailAdress__Alternatives_0 )
            // InternalNLX.g:10858:3: rule__MailAdress__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MailAdress__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMailAdressAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MailAdress__Group__0__Impl"


    // $ANTLR start "rule__MailAdress__Group__1"
    // InternalNLX.g:10866:1: rule__MailAdress__Group__1 : rule__MailAdress__Group__1__Impl rule__MailAdress__Group__2 ;
    public final void rule__MailAdress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10870:1: ( rule__MailAdress__Group__1__Impl rule__MailAdress__Group__2 )
            // InternalNLX.g:10871:2: rule__MailAdress__Group__1__Impl rule__MailAdress__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_69);
            rule__MailAdress__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MailAdress__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MailAdress__Group__1"


    // $ANTLR start "rule__MailAdress__Group__1__Impl"
    // InternalNLX.g:10878:1: rule__MailAdress__Group__1__Impl : ( ( rule__MailAdress__EmailAssignment_1 ) ) ;
    public final void rule__MailAdress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10882:1: ( ( ( rule__MailAdress__EmailAssignment_1 ) ) )
            // InternalNLX.g:10883:1: ( ( rule__MailAdress__EmailAssignment_1 ) )
            {
            // InternalNLX.g:10883:1: ( ( rule__MailAdress__EmailAssignment_1 ) )
            // InternalNLX.g:10884:2: ( rule__MailAdress__EmailAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMailAdressAccess().getEmailAssignment_1()); 
            }
            // InternalNLX.g:10885:2: ( rule__MailAdress__EmailAssignment_1 )
            // InternalNLX.g:10885:3: rule__MailAdress__EmailAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MailAdress__EmailAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMailAdressAccess().getEmailAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MailAdress__Group__1__Impl"


    // $ANTLR start "rule__MailAdress__Group__2"
    // InternalNLX.g:10893:1: rule__MailAdress__Group__2 : rule__MailAdress__Group__2__Impl ;
    public final void rule__MailAdress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10897:1: ( rule__MailAdress__Group__2__Impl )
            // InternalNLX.g:10898:2: rule__MailAdress__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MailAdress__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MailAdress__Group__2"


    // $ANTLR start "rule__MailAdress__Group__2__Impl"
    // InternalNLX.g:10904:1: rule__MailAdress__Group__2__Impl : ( ( rule__MailAdress__EmailAssignment_2 ) ) ;
    public final void rule__MailAdress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10908:1: ( ( ( rule__MailAdress__EmailAssignment_2 ) ) )
            // InternalNLX.g:10909:1: ( ( rule__MailAdress__EmailAssignment_2 ) )
            {
            // InternalNLX.g:10909:1: ( ( rule__MailAdress__EmailAssignment_2 ) )
            // InternalNLX.g:10910:2: ( rule__MailAdress__EmailAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMailAdressAccess().getEmailAssignment_2()); 
            }
            // InternalNLX.g:10911:2: ( rule__MailAdress__EmailAssignment_2 )
            // InternalNLX.g:10911:3: rule__MailAdress__EmailAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MailAdress__EmailAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMailAdressAccess().getEmailAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MailAdress__Group__2__Impl"


    // $ANTLR start "rule__Formula__Group__0"
    // InternalNLX.g:10920:1: rule__Formula__Group__0 : rule__Formula__Group__0__Impl rule__Formula__Group__1 ;
    public final void rule__Formula__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10924:1: ( rule__Formula__Group__0__Impl rule__Formula__Group__1 )
            // InternalNLX.g:10925:2: rule__Formula__Group__0__Impl rule__Formula__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__Formula__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group__0"


    // $ANTLR start "rule__Formula__Group__0__Impl"
    // InternalNLX.g:10932:1: rule__Formula__Group__0__Impl : ( ( rule__Formula__NameAssignment_0 )? ) ;
    public final void rule__Formula__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10936:1: ( ( ( rule__Formula__NameAssignment_0 )? ) )
            // InternalNLX.g:10937:1: ( ( rule__Formula__NameAssignment_0 )? )
            {
            // InternalNLX.g:10937:1: ( ( rule__Formula__NameAssignment_0 )? )
            // InternalNLX.g:10938:2: ( rule__Formula__NameAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getNameAssignment_0()); 
            }
            // InternalNLX.g:10939:2: ( rule__Formula__NameAssignment_0 )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==RULE_AT) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalNLX.g:10939:3: rule__Formula__NameAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Formula__NameAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group__0__Impl"


    // $ANTLR start "rule__Formula__Group__1"
    // InternalNLX.g:10947:1: rule__Formula__Group__1 : rule__Formula__Group__1__Impl rule__Formula__Group__2 ;
    public final void rule__Formula__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10951:1: ( rule__Formula__Group__1__Impl rule__Formula__Group__2 )
            // InternalNLX.g:10952:2: rule__Formula__Group__1__Impl rule__Formula__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__Formula__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group__1"


    // $ANTLR start "rule__Formula__Group__1__Impl"
    // InternalNLX.g:10959:1: rule__Formula__Group__1__Impl : ( ( rule__Formula__Alternatives_1 ) ) ;
    public final void rule__Formula__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10963:1: ( ( ( rule__Formula__Alternatives_1 ) ) )
            // InternalNLX.g:10964:1: ( ( rule__Formula__Alternatives_1 ) )
            {
            // InternalNLX.g:10964:1: ( ( rule__Formula__Alternatives_1 ) )
            // InternalNLX.g:10965:2: ( rule__Formula__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getAlternatives_1()); 
            }
            // InternalNLX.g:10966:2: ( rule__Formula__Alternatives_1 )
            // InternalNLX.g:10966:3: rule__Formula__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group__1__Impl"


    // $ANTLR start "rule__Formula__Group__2"
    // InternalNLX.g:10974:1: rule__Formula__Group__2 : rule__Formula__Group__2__Impl rule__Formula__Group__3 ;
    public final void rule__Formula__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10978:1: ( rule__Formula__Group__2__Impl rule__Formula__Group__3 )
            // InternalNLX.g:10979:2: rule__Formula__Group__2__Impl rule__Formula__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__Formula__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group__2"


    // $ANTLR start "rule__Formula__Group__2__Impl"
    // InternalNLX.g:10986:1: rule__Formula__Group__2__Impl : ( ( rule__Formula__ParametersAssignment_2 ) ) ;
    public final void rule__Formula__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:10990:1: ( ( ( rule__Formula__ParametersAssignment_2 ) ) )
            // InternalNLX.g:10991:1: ( ( rule__Formula__ParametersAssignment_2 ) )
            {
            // InternalNLX.g:10991:1: ( ( rule__Formula__ParametersAssignment_2 ) )
            // InternalNLX.g:10992:2: ( rule__Formula__ParametersAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getParametersAssignment_2()); 
            }
            // InternalNLX.g:10993:2: ( rule__Formula__ParametersAssignment_2 )
            // InternalNLX.g:10993:3: rule__Formula__ParametersAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__ParametersAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getParametersAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group__2__Impl"


    // $ANTLR start "rule__Formula__Group__3"
    // InternalNLX.g:11001:1: rule__Formula__Group__3 : rule__Formula__Group__3__Impl ;
    public final void rule__Formula__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11005:1: ( rule__Formula__Group__3__Impl )
            // InternalNLX.g:11006:2: rule__Formula__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group__3"


    // $ANTLR start "rule__Formula__Group__3__Impl"
    // InternalNLX.g:11012:1: rule__Formula__Group__3__Impl : ( ( rule__Formula__Group_3__0 )* ) ;
    public final void rule__Formula__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11016:1: ( ( ( rule__Formula__Group_3__0 )* ) )
            // InternalNLX.g:11017:1: ( ( rule__Formula__Group_3__0 )* )
            {
            // InternalNLX.g:11017:1: ( ( rule__Formula__Group_3__0 )* )
            // InternalNLX.g:11018:2: ( rule__Formula__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getGroup_3()); 
            }
            // InternalNLX.g:11019:2: ( rule__Formula__Group_3__0 )*
            loop142:
            do {
                int alt142=2;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==RULE_DOT) ) {
                    int LA142_2 = input.LA(2);

                    if ( (LA142_2==RULE_HASH||LA142_2==RULE_MULTI||LA142_2==RULE_DOT||(LA142_2>=RULE_ID && LA142_2<=RULE_DOUBLE_DOT)||LA142_2==RULE_CURL||(LA142_2>=RULE_SEPARATORS_IT && LA142_2<=RULE_COLON)||LA142_2==RULE_CURRENCY) ) {
                        alt142=1;
                    }


                }


                switch (alt142) {
            	case 1 :
            	    // InternalNLX.g:11019:3: rule__Formula__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    rule__Formula__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop142;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group__3__Impl"


    // $ANTLR start "rule__Formula__Group_3__0"
    // InternalNLX.g:11028:1: rule__Formula__Group_3__0 : rule__Formula__Group_3__0__Impl rule__Formula__Group_3__1 ;
    public final void rule__Formula__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11032:1: ( rule__Formula__Group_3__0__Impl rule__Formula__Group_3__1 )
            // InternalNLX.g:11033:2: rule__Formula__Group_3__0__Impl rule__Formula__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_69);
            rule__Formula__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group_3__0"


    // $ANTLR start "rule__Formula__Group_3__0__Impl"
    // InternalNLX.g:11040:1: rule__Formula__Group_3__0__Impl : ( RULE_DOT ) ;
    public final void rule__Formula__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11044:1: ( ( RULE_DOT ) )
            // InternalNLX.g:11045:1: ( RULE_DOT )
            {
            // InternalNLX.g:11045:1: ( RULE_DOT )
            // InternalNLX.g:11046:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getDOTTerminalRuleCall_3_0()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getDOTTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group_3__0__Impl"


    // $ANTLR start "rule__Formula__Group_3__1"
    // InternalNLX.g:11055:1: rule__Formula__Group_3__1 : rule__Formula__Group_3__1__Impl rule__Formula__Group_3__2 ;
    public final void rule__Formula__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11059:1: ( rule__Formula__Group_3__1__Impl rule__Formula__Group_3__2 )
            // InternalNLX.g:11060:2: rule__Formula__Group_3__1__Impl rule__Formula__Group_3__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__Formula__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group_3__1"


    // $ANTLR start "rule__Formula__Group_3__1__Impl"
    // InternalNLX.g:11067:1: rule__Formula__Group_3__1__Impl : ( ( rule__Formula__Alternatives_3_1 ) ) ;
    public final void rule__Formula__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11071:1: ( ( ( rule__Formula__Alternatives_3_1 ) ) )
            // InternalNLX.g:11072:1: ( ( rule__Formula__Alternatives_3_1 ) )
            {
            // InternalNLX.g:11072:1: ( ( rule__Formula__Alternatives_3_1 ) )
            // InternalNLX.g:11073:2: ( rule__Formula__Alternatives_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getAlternatives_3_1()); 
            }
            // InternalNLX.g:11074:2: ( rule__Formula__Alternatives_3_1 )
            // InternalNLX.g:11074:3: rule__Formula__Alternatives_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__Alternatives_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getAlternatives_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group_3__1__Impl"


    // $ANTLR start "rule__Formula__Group_3__2"
    // InternalNLX.g:11082:1: rule__Formula__Group_3__2 : rule__Formula__Group_3__2__Impl ;
    public final void rule__Formula__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11086:1: ( rule__Formula__Group_3__2__Impl )
            // InternalNLX.g:11087:2: rule__Formula__Group_3__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group_3__2"


    // $ANTLR start "rule__Formula__Group_3__2__Impl"
    // InternalNLX.g:11093:1: rule__Formula__Group_3__2__Impl : ( ( rule__Formula__ParametersAssignment_3_2 ) ) ;
    public final void rule__Formula__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11097:1: ( ( ( rule__Formula__ParametersAssignment_3_2 ) ) )
            // InternalNLX.g:11098:1: ( ( rule__Formula__ParametersAssignment_3_2 ) )
            {
            // InternalNLX.g:11098:1: ( ( rule__Formula__ParametersAssignment_3_2 ) )
            // InternalNLX.g:11099:2: ( rule__Formula__ParametersAssignment_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getParametersAssignment_3_2()); 
            }
            // InternalNLX.g:11100:2: ( rule__Formula__ParametersAssignment_3_2 )
            // InternalNLX.g:11100:3: rule__Formula__ParametersAssignment_3_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Formula__ParametersAssignment_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getParametersAssignment_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__Group_3__2__Impl"


    // $ANTLR start "rule__Array__Group__0"
    // InternalNLX.g:11109:1: rule__Array__Group__0 : rule__Array__Group__0__Impl rule__Array__Group__1 ;
    public final void rule__Array__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11113:1: ( rule__Array__Group__0__Impl rule__Array__Group__1 )
            // InternalNLX.g:11114:2: rule__Array__Group__0__Impl rule__Array__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__Array__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Array__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__Group__0"


    // $ANTLR start "rule__Array__Group__0__Impl"
    // InternalNLX.g:11121:1: rule__Array__Group__0__Impl : ( ( rule__Array__Alternatives_0 ) ) ;
    public final void rule__Array__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11125:1: ( ( ( rule__Array__Alternatives_0 ) ) )
            // InternalNLX.g:11126:1: ( ( rule__Array__Alternatives_0 ) )
            {
            // InternalNLX.g:11126:1: ( ( rule__Array__Alternatives_0 ) )
            // InternalNLX.g:11127:2: ( rule__Array__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayAccess().getAlternatives_0()); 
            }
            // InternalNLX.g:11128:2: ( rule__Array__Alternatives_0 )
            // InternalNLX.g:11128:3: rule__Array__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Array__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__Group__0__Impl"


    // $ANTLR start "rule__Array__Group__1"
    // InternalNLX.g:11136:1: rule__Array__Group__1 : rule__Array__Group__1__Impl ;
    public final void rule__Array__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11140:1: ( rule__Array__Group__1__Impl )
            // InternalNLX.g:11141:2: rule__Array__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Array__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__Group__1"


    // $ANTLR start "rule__Array__Group__1__Impl"
    // InternalNLX.g:11147:1: rule__Array__Group__1__Impl : ( ( ( rule__Array__ParametersAssignment_1 ) ) ( ( rule__Array__ParametersAssignment_1 )* ) ) ;
    public final void rule__Array__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11151:1: ( ( ( ( rule__Array__ParametersAssignment_1 ) ) ( ( rule__Array__ParametersAssignment_1 )* ) ) )
            // InternalNLX.g:11152:1: ( ( ( rule__Array__ParametersAssignment_1 ) ) ( ( rule__Array__ParametersAssignment_1 )* ) )
            {
            // InternalNLX.g:11152:1: ( ( ( rule__Array__ParametersAssignment_1 ) ) ( ( rule__Array__ParametersAssignment_1 )* ) )
            // InternalNLX.g:11153:2: ( ( rule__Array__ParametersAssignment_1 ) ) ( ( rule__Array__ParametersAssignment_1 )* )
            {
            // InternalNLX.g:11153:2: ( ( rule__Array__ParametersAssignment_1 ) )
            // InternalNLX.g:11154:3: ( rule__Array__ParametersAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayAccess().getParametersAssignment_1()); 
            }
            // InternalNLX.g:11155:3: ( rule__Array__ParametersAssignment_1 )
            // InternalNLX.g:11155:4: rule__Array__ParametersAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__Array__ParametersAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayAccess().getParametersAssignment_1()); 
            }

            }

            // InternalNLX.g:11158:2: ( ( rule__Array__ParametersAssignment_1 )* )
            // InternalNLX.g:11159:3: ( rule__Array__ParametersAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayAccess().getParametersAssignment_1()); 
            }
            // InternalNLX.g:11160:3: ( rule__Array__ParametersAssignment_1 )*
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==RULE_EXBR_O) ) {
                    alt143=1;
                }


                switch (alt143) {
            	case 1 :
            	    // InternalNLX.g:11160:4: rule__Array__ParametersAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_71);
            	    rule__Array__ParametersAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayAccess().getParametersAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__Group__1__Impl"


    // $ANTLR start "rule__New_Line__Group__0"
    // InternalNLX.g:11170:1: rule__New_Line__Group__0 : rule__New_Line__Group__0__Impl rule__New_Line__Group__1 ;
    public final void rule__New_Line__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11174:1: ( rule__New_Line__Group__0__Impl rule__New_Line__Group__1 )
            // InternalNLX.g:11175:2: rule__New_Line__Group__0__Impl rule__New_Line__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__New_Line__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__New_Line__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__New_Line__Group__0"


    // $ANTLR start "rule__New_Line__Group__0__Impl"
    // InternalNLX.g:11182:1: rule__New_Line__Group__0__Impl : ( () ) ;
    public final void rule__New_Line__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11186:1: ( ( () ) )
            // InternalNLX.g:11187:1: ( () )
            {
            // InternalNLX.g:11187:1: ( () )
            // InternalNLX.g:11188:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNew_LineAccess().getElementsAction_0()); 
            }
            // InternalNLX.g:11189:2: ()
            // InternalNLX.g:11189:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNew_LineAccess().getElementsAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__New_Line__Group__0__Impl"


    // $ANTLR start "rule__New_Line__Group__1"
    // InternalNLX.g:11197:1: rule__New_Line__Group__1 : rule__New_Line__Group__1__Impl ;
    public final void rule__New_Line__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11201:1: ( rule__New_Line__Group__1__Impl )
            // InternalNLX.g:11202:2: rule__New_Line__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__New_Line__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__New_Line__Group__1"


    // $ANTLR start "rule__New_Line__Group__1__Impl"
    // InternalNLX.g:11208:1: rule__New_Line__Group__1__Impl : ( ( rule__New_Line__NlAssignment_1 ) ) ;
    public final void rule__New_Line__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11212:1: ( ( ( rule__New_Line__NlAssignment_1 ) ) )
            // InternalNLX.g:11213:1: ( ( rule__New_Line__NlAssignment_1 ) )
            {
            // InternalNLX.g:11213:1: ( ( rule__New_Line__NlAssignment_1 ) )
            // InternalNLX.g:11214:2: ( rule__New_Line__NlAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNew_LineAccess().getNlAssignment_1()); 
            }
            // InternalNLX.g:11215:2: ( rule__New_Line__NlAssignment_1 )
            // InternalNLX.g:11215:3: rule__New_Line__NlAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__New_Line__NlAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNew_LineAccess().getNlAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__New_Line__Group__1__Impl"


    // $ANTLR start "rule__Model__SentencesAssignment"
    // InternalNLX.g:11224:1: rule__Model__SentencesAssignment : ( ruleSentenceType ) ;
    public final void rule__Model__SentencesAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11228:1: ( ( ruleSentenceType ) )
            // InternalNLX.g:11229:2: ( ruleSentenceType )
            {
            // InternalNLX.g:11229:2: ( ruleSentenceType )
            // InternalNLX.g:11230:3: ruleSentenceType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getSentencesSentenceTypeParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSentenceType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getSentencesSentenceTypeParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__SentencesAssignment"


    // $ANTLR start "rule__SentenceType__PEndAssignment_2"
    // InternalNLX.g:11239:1: rule__SentenceType__PEndAssignment_2 : ( ruleParagraph ) ;
    public final void rule__SentenceType__PEndAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11243:1: ( ( ruleParagraph ) )
            // InternalNLX.g:11244:2: ( ruleParagraph )
            {
            // InternalNLX.g:11244:2: ( ruleParagraph )
            // InternalNLX.g:11245:3: ruleParagraph
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceTypeAccess().getPEndParagraphParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParagraph();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceTypeAccess().getPEndParagraphParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceType__PEndAssignment_2"


    // $ANTLR start "rule__ParagraphBlock__BlockAssignment"
    // InternalNLX.g:11254:1: rule__ParagraphBlock__BlockAssignment : ( ruleBlockElement ) ;
    public final void rule__ParagraphBlock__BlockAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11258:1: ( ( ruleBlockElement ) )
            // InternalNLX.g:11259:2: ( ruleBlockElement )
            {
            // InternalNLX.g:11259:2: ( ruleBlockElement )
            // InternalNLX.g:11260:3: ruleBlockElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParagraphBlockAccess().getBlockBlockElementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParagraphBlockAccess().getBlockBlockElementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParagraphBlock__BlockAssignment"


    // $ANTLR start "rule__FootNote__NumberAssignment_0"
    // InternalNLX.g:11269:1: rule__FootNote__NumberAssignment_0 : ( rulesimpleNum ) ;
    public final void rule__FootNote__NumberAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11273:1: ( ( rulesimpleNum ) )
            // InternalNLX.g:11274:2: ( rulesimpleNum )
            {
            // InternalNLX.g:11274:2: ( rulesimpleNum )
            // InternalNLX.g:11275:3: rulesimpleNum
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFootNoteAccess().getNumberSimpleNumParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulesimpleNum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFootNoteAccess().getNumberSimpleNumParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FootNote__NumberAssignment_0"


    // $ANTLR start "rule__FootNote__SentenceChainAssignment_2"
    // InternalNLX.g:11284:1: rule__FootNote__SentenceChainAssignment_2 : ( ruleSentenceChain ) ;
    public final void rule__FootNote__SentenceChainAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11288:1: ( ( ruleSentenceChain ) )
            // InternalNLX.g:11289:2: ( ruleSentenceChain )
            {
            // InternalNLX.g:11289:2: ( ruleSentenceChain )
            // InternalNLX.g:11290:3: ruleSentenceChain
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFootNoteAccess().getSentenceChainSentenceChainParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSentenceChain();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFootNoteAccess().getSentenceChainSentenceChainParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FootNote__SentenceChainAssignment_2"


    // $ANTLR start "rule__TableLine__ContentAssignment"
    // InternalNLX.g:11299:1: rule__TableLine__ContentAssignment : ( RULE_TABLE_LINE ) ;
    public final void rule__TableLine__ContentAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11303:1: ( ( RULE_TABLE_LINE ) )
            // InternalNLX.g:11304:2: ( RULE_TABLE_LINE )
            {
            // InternalNLX.g:11304:2: ( RULE_TABLE_LINE )
            // InternalNLX.g:11305:3: RULE_TABLE_LINE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableLineAccess().getContentTABLE_LINETerminalRuleCall_0()); 
            }
            match(input,RULE_TABLE_LINE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableLineAccess().getContentTABLE_LINETerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableLine__ContentAssignment"


    // $ANTLR start "rule__TableRow__ContentAssignment_1"
    // InternalNLX.g:11314:1: rule__TableRow__ContentAssignment_1 : ( ruleTableBorder ) ;
    public final void rule__TableRow__ContentAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11318:1: ( ( ruleTableBorder ) )
            // InternalNLX.g:11319:2: ( ruleTableBorder )
            {
            // InternalNLX.g:11319:2: ( ruleTableBorder )
            // InternalNLX.g:11320:3: ruleTableBorder
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getContentTableBorderParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTableBorder();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getContentTableBorderParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__ContentAssignment_1"


    // $ANTLR start "rule__TableRow__ContentAssignment_2"
    // InternalNLX.g:11329:1: rule__TableRow__ContentAssignment_2 : ( ruleLineSentenceChain ) ;
    public final void rule__TableRow__ContentAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11333:1: ( ( ruleLineSentenceChain ) )
            // InternalNLX.g:11334:2: ( ruleLineSentenceChain )
            {
            // InternalNLX.g:11334:2: ( ruleLineSentenceChain )
            // InternalNLX.g:11335:3: ruleLineSentenceChain
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getContentLineSentenceChainParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLineSentenceChain();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getContentLineSentenceChainParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__ContentAssignment_2"


    // $ANTLR start "rule__TableRow__ContentAssignment_3_0"
    // InternalNLX.g:11344:1: rule__TableRow__ContentAssignment_3_0 : ( ruleTableBorder ) ;
    public final void rule__TableRow__ContentAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11348:1: ( ( ruleTableBorder ) )
            // InternalNLX.g:11349:2: ( ruleTableBorder )
            {
            // InternalNLX.g:11349:2: ( ruleTableBorder )
            // InternalNLX.g:11350:3: ruleTableBorder
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getContentTableBorderParserRuleCall_3_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTableBorder();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getContentTableBorderParserRuleCall_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__ContentAssignment_3_0"


    // $ANTLR start "rule__TableRow__ContentAssignment_3_1"
    // InternalNLX.g:11359:1: rule__TableRow__ContentAssignment_3_1 : ( ruleLineSentenceChain ) ;
    public final void rule__TableRow__ContentAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11363:1: ( ( ruleLineSentenceChain ) )
            // InternalNLX.g:11364:2: ( ruleLineSentenceChain )
            {
            // InternalNLX.g:11364:2: ( ruleLineSentenceChain )
            // InternalNLX.g:11365:3: ruleLineSentenceChain
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getContentLineSentenceChainParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLineSentenceChain();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getContentLineSentenceChainParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__ContentAssignment_3_1"


    // $ANTLR start "rule__TableRow__ContentAssignment_4"
    // InternalNLX.g:11374:1: rule__TableRow__ContentAssignment_4 : ( ruleTableBorder ) ;
    public final void rule__TableRow__ContentAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11378:1: ( ( ruleTableBorder ) )
            // InternalNLX.g:11379:2: ( ruleTableBorder )
            {
            // InternalNLX.g:11379:2: ( ruleTableBorder )
            // InternalNLX.g:11380:3: ruleTableBorder
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableRowAccess().getContentTableBorderParserRuleCall_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTableBorder();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableRowAccess().getContentTableBorderParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableRow__ContentAssignment_4"


    // $ANTLR start "rule__TableColumnSeparator__CharAssignment"
    // InternalNLX.g:11389:1: rule__TableColumnSeparator__CharAssignment : ( RULE_HORIZ_SEP ) ;
    public final void rule__TableColumnSeparator__CharAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11393:1: ( ( RULE_HORIZ_SEP ) )
            // InternalNLX.g:11394:2: ( RULE_HORIZ_SEP )
            {
            // InternalNLX.g:11394:2: ( RULE_HORIZ_SEP )
            // InternalNLX.g:11395:3: RULE_HORIZ_SEP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableColumnSeparatorAccess().getCharHORIZ_SEPTerminalRuleCall_0()); 
            }
            match(input,RULE_HORIZ_SEP,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableColumnSeparatorAccess().getCharHORIZ_SEPTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableColumnSeparator__CharAssignment"


    // $ANTLR start "rule__Table__LinesAssignment_0"
    // InternalNLX.g:11404:1: rule__Table__LinesAssignment_0 : ( ruleTableLine ) ;
    public final void rule__Table__LinesAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11408:1: ( ( ruleTableLine ) )
            // InternalNLX.g:11409:2: ( ruleTableLine )
            {
            // InternalNLX.g:11409:2: ( ruleTableLine )
            // InternalNLX.g:11410:3: ruleTableLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getLinesTableLineParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTableLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getLinesTableLineParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__LinesAssignment_0"


    // $ANTLR start "rule__Table__LinesAssignment_2_0"
    // InternalNLX.g:11419:1: rule__Table__LinesAssignment_2_0 : ( ruleTableRow ) ;
    public final void rule__Table__LinesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11423:1: ( ( ruleTableRow ) )
            // InternalNLX.g:11424:2: ( ruleTableRow )
            {
            // InternalNLX.g:11424:2: ( ruleTableRow )
            // InternalNLX.g:11425:3: ruleTableRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getLinesTableRowParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTableRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getLinesTableRowParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__LinesAssignment_2_0"


    // $ANTLR start "rule__Table__LinesAssignment_3_0"
    // InternalNLX.g:11434:1: rule__Table__LinesAssignment_3_0 : ( ruleTableLine ) ;
    public final void rule__Table__LinesAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11438:1: ( ( ruleTableLine ) )
            // InternalNLX.g:11439:2: ( ruleTableLine )
            {
            // InternalNLX.g:11439:2: ( ruleTableLine )
            // InternalNLX.g:11440:3: ruleTableLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getLinesTableLineParserRuleCall_3_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTableLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getLinesTableLineParserRuleCall_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__LinesAssignment_3_0"


    // $ANTLR start "rule__Table__LinesAssignment_3_2_0"
    // InternalNLX.g:11449:1: rule__Table__LinesAssignment_3_2_0 : ( ruleTableRow ) ;
    public final void rule__Table__LinesAssignment_3_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11453:1: ( ( ruleTableRow ) )
            // InternalNLX.g:11454:2: ( ruleTableRow )
            {
            // InternalNLX.g:11454:2: ( ruleTableRow )
            // InternalNLX.g:11455:3: ruleTableRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getLinesTableRowParserRuleCall_3_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTableRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getLinesTableRowParserRuleCall_3_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__LinesAssignment_3_2_0"


    // $ANTLR start "rule__Table__LinesAssignment_4"
    // InternalNLX.g:11464:1: rule__Table__LinesAssignment_4 : ( ruleTableLine ) ;
    public final void rule__Table__LinesAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11468:1: ( ( ruleTableLine ) )
            // InternalNLX.g:11469:2: ( ruleTableLine )
            {
            // InternalNLX.g:11469:2: ( ruleTableLine )
            // InternalNLX.g:11470:3: ruleTableLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableAccess().getLinesTableLineParserRuleCall_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTableLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableAccess().getLinesTableLineParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Table__LinesAssignment_4"


    // $ANTLR start "rule__LineSentenceChain__SentencesAssignment_1"
    // InternalNLX.g:11479:1: rule__LineSentenceChain__SentencesAssignment_1 : ( ruleLineSentence ) ;
    public final void rule__LineSentenceChain__SentencesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11483:1: ( ( ruleLineSentence ) )
            // InternalNLX.g:11484:2: ( ruleLineSentence )
            {
            // InternalNLX.g:11484:2: ( ruleLineSentence )
            // InternalNLX.g:11485:3: ruleLineSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainAccess().getSentencesLineSentenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLineSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainAccess().getSentencesLineSentenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__SentencesAssignment_1"


    // $ANTLR start "rule__LineSentenceChain__SeparatorsAssignment_2_0"
    // InternalNLX.g:11494:1: rule__LineSentenceChain__SeparatorsAssignment_2_0 : ( RULE_FULL_STOP_IM ) ;
    public final void rule__LineSentenceChain__SeparatorsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11498:1: ( ( RULE_FULL_STOP_IM ) )
            // InternalNLX.g:11499:2: ( RULE_FULL_STOP_IM )
            {
            // InternalNLX.g:11499:2: ( RULE_FULL_STOP_IM )
            // InternalNLX.g:11500:3: RULE_FULL_STOP_IM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainAccess().getSeparatorsFULL_STOP_IMTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_FULL_STOP_IM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainAccess().getSeparatorsFULL_STOP_IMTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__SeparatorsAssignment_2_0"


    // $ANTLR start "rule__LineSentenceChain__SentencesAssignment_2_1"
    // InternalNLX.g:11509:1: rule__LineSentenceChain__SentencesAssignment_2_1 : ( ruleLineSentence ) ;
    public final void rule__LineSentenceChain__SentencesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11513:1: ( ( ruleLineSentence ) )
            // InternalNLX.g:11514:2: ( ruleLineSentence )
            {
            // InternalNLX.g:11514:2: ( ruleLineSentence )
            // InternalNLX.g:11515:3: ruleLineSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainAccess().getSentencesLineSentenceParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLineSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainAccess().getSentencesLineSentenceParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__SentencesAssignment_2_1"


    // $ANTLR start "rule__LineSentenceChain__EndpointAssignment_3"
    // InternalNLX.g:11524:1: rule__LineSentenceChain__EndpointAssignment_3 : ( RULE_FULL_STOP_IM ) ;
    public final void rule__LineSentenceChain__EndpointAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11528:1: ( ( RULE_FULL_STOP_IM ) )
            // InternalNLX.g:11529:2: ( RULE_FULL_STOP_IM )
            {
            // InternalNLX.g:11529:2: ( RULE_FULL_STOP_IM )
            // InternalNLX.g:11530:3: RULE_FULL_STOP_IM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceChainAccess().getEndpointFULL_STOP_IMTerminalRuleCall_3_0()); 
            }
            match(input,RULE_FULL_STOP_IM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceChainAccess().getEndpointFULL_STOP_IMTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentenceChain__EndpointAssignment_3"


    // $ANTLR start "rule__SentenceChain__SentencesAssignment_1"
    // InternalNLX.g:11539:1: rule__SentenceChain__SentencesAssignment_1 : ( ruleSentence ) ;
    public final void rule__SentenceChain__SentencesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11543:1: ( ( ruleSentence ) )
            // InternalNLX.g:11544:2: ( ruleSentence )
            {
            // InternalNLX.g:11544:2: ( ruleSentence )
            // InternalNLX.g:11545:3: ruleSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getSentencesSentenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getSentencesSentenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__SentencesAssignment_1"


    // $ANTLR start "rule__SentenceChain__SeparatorsAssignment_2_0"
    // InternalNLX.g:11554:1: rule__SentenceChain__SeparatorsAssignment_2_0 : ( RULE_FULL_STOP_IM ) ;
    public final void rule__SentenceChain__SeparatorsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11558:1: ( ( RULE_FULL_STOP_IM ) )
            // InternalNLX.g:11559:2: ( RULE_FULL_STOP_IM )
            {
            // InternalNLX.g:11559:2: ( RULE_FULL_STOP_IM )
            // InternalNLX.g:11560:3: RULE_FULL_STOP_IM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getSeparatorsFULL_STOP_IMTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_FULL_STOP_IM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getSeparatorsFULL_STOP_IMTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__SeparatorsAssignment_2_0"


    // $ANTLR start "rule__SentenceChain__SentencesAssignment_2_1"
    // InternalNLX.g:11569:1: rule__SentenceChain__SentencesAssignment_2_1 : ( ruleSentenceX ) ;
    public final void rule__SentenceChain__SentencesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11573:1: ( ( ruleSentenceX ) )
            // InternalNLX.g:11574:2: ( ruleSentenceX )
            {
            // InternalNLX.g:11574:2: ( ruleSentenceX )
            // InternalNLX.g:11575:3: ruleSentenceX
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getSentencesSentenceXParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSentenceX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getSentencesSentenceXParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__SentencesAssignment_2_1"


    // $ANTLR start "rule__SentenceChain__EndpointAssignment_3_0"
    // InternalNLX.g:11584:1: rule__SentenceChain__EndpointAssignment_3_0 : ( RULE_FULL_STOP_NL ) ;
    public final void rule__SentenceChain__EndpointAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11588:1: ( ( RULE_FULL_STOP_NL ) )
            // InternalNLX.g:11589:2: ( RULE_FULL_STOP_NL )
            {
            // InternalNLX.g:11589:2: ( RULE_FULL_STOP_NL )
            // InternalNLX.g:11590:3: RULE_FULL_STOP_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getEndpointFULL_STOP_NLTerminalRuleCall_3_0_0()); 
            }
            match(input,RULE_FULL_STOP_NL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getEndpointFULL_STOP_NLTerminalRuleCall_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__EndpointAssignment_3_0"


    // $ANTLR start "rule__SentenceChain__EndpointAssignment_3_1"
    // InternalNLX.g:11599:1: rule__SentenceChain__EndpointAssignment_3_1 : ( RULE_NEWLINE ) ;
    public final void rule__SentenceChain__EndpointAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11603:1: ( ( RULE_NEWLINE ) )
            // InternalNLX.g:11604:2: ( RULE_NEWLINE )
            {
            // InternalNLX.g:11604:2: ( RULE_NEWLINE )
            // InternalNLX.g:11605:3: RULE_NEWLINE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainAccess().getEndpointNEWLINETerminalRuleCall_3_1_0()); 
            }
            match(input,RULE_NEWLINE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainAccess().getEndpointNEWLINETerminalRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChain__EndpointAssignment_3_1"


    // $ANTLR start "rule__SentenceChainX__SentencesAssignment_1"
    // InternalNLX.g:11614:1: rule__SentenceChainX__SentencesAssignment_1 : ( ruleSentence ) ;
    public final void rule__SentenceChainX__SentencesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11618:1: ( ( ruleSentence ) )
            // InternalNLX.g:11619:2: ( ruleSentence )
            {
            // InternalNLX.g:11619:2: ( ruleSentence )
            // InternalNLX.g:11620:3: ruleSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getSentencesSentenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getSentencesSentenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__SentencesAssignment_1"


    // $ANTLR start "rule__SentenceChainX__SeparatorsAssignment_2_0"
    // InternalNLX.g:11629:1: rule__SentenceChainX__SeparatorsAssignment_2_0 : ( RULE_FULL_STOP_IM ) ;
    public final void rule__SentenceChainX__SeparatorsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11633:1: ( ( RULE_FULL_STOP_IM ) )
            // InternalNLX.g:11634:2: ( RULE_FULL_STOP_IM )
            {
            // InternalNLX.g:11634:2: ( RULE_FULL_STOP_IM )
            // InternalNLX.g:11635:3: RULE_FULL_STOP_IM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getSeparatorsFULL_STOP_IMTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_FULL_STOP_IM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getSeparatorsFULL_STOP_IMTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__SeparatorsAssignment_2_0"


    // $ANTLR start "rule__SentenceChainX__SentencesAssignment_2_1"
    // InternalNLX.g:11644:1: rule__SentenceChainX__SentencesAssignment_2_1 : ( ruleSentenceX ) ;
    public final void rule__SentenceChainX__SentencesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11648:1: ( ( ruleSentenceX ) )
            // InternalNLX.g:11649:2: ( ruleSentenceX )
            {
            // InternalNLX.g:11649:2: ( ruleSentenceX )
            // InternalNLX.g:11650:3: ruleSentenceX
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getSentencesSentenceXParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSentenceX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getSentencesSentenceXParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__SentencesAssignment_2_1"


    // $ANTLR start "rule__SentenceChainX__EndpointAssignment_3_0_0"
    // InternalNLX.g:11659:1: rule__SentenceChainX__EndpointAssignment_3_0_0 : ( RULE_FULL_STOP_NL ) ;
    public final void rule__SentenceChainX__EndpointAssignment_3_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11663:1: ( ( RULE_FULL_STOP_NL ) )
            // InternalNLX.g:11664:2: ( RULE_FULL_STOP_NL )
            {
            // InternalNLX.g:11664:2: ( RULE_FULL_STOP_NL )
            // InternalNLX.g:11665:3: RULE_FULL_STOP_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getEndpointFULL_STOP_NLTerminalRuleCall_3_0_0_0()); 
            }
            match(input,RULE_FULL_STOP_NL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getEndpointFULL_STOP_NLTerminalRuleCall_3_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__EndpointAssignment_3_0_0"


    // $ANTLR start "rule__SentenceChainX__EndpointAssignment_3_0_1"
    // InternalNLX.g:11674:1: rule__SentenceChainX__EndpointAssignment_3_0_1 : ( RULE_NEWLINE ) ;
    public final void rule__SentenceChainX__EndpointAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11678:1: ( ( RULE_NEWLINE ) )
            // InternalNLX.g:11679:2: ( RULE_NEWLINE )
            {
            // InternalNLX.g:11679:2: ( RULE_NEWLINE )
            // InternalNLX.g:11680:3: RULE_NEWLINE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getEndpointNEWLINETerminalRuleCall_3_0_1_0()); 
            }
            match(input,RULE_NEWLINE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getEndpointNEWLINETerminalRuleCall_3_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__EndpointAssignment_3_0_1"


    // $ANTLR start "rule__SentenceChainX__EndpointAssignment_3_0_2"
    // InternalNLX.g:11689:1: rule__SentenceChainX__EndpointAssignment_3_0_2 : ( RULE_KOMMA ) ;
    public final void rule__SentenceChainX__EndpointAssignment_3_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11693:1: ( ( RULE_KOMMA ) )
            // InternalNLX.g:11694:2: ( RULE_KOMMA )
            {
            // InternalNLX.g:11694:2: ( RULE_KOMMA )
            // InternalNLX.g:11695:3: RULE_KOMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceChainXAccess().getEndpointKOMMATerminalRuleCall_3_0_2_0()); 
            }
            match(input,RULE_KOMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceChainXAccess().getEndpointKOMMATerminalRuleCall_3_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceChainX__EndpointAssignment_3_0_2"


    // $ANTLR start "rule__Sentence__SubsentenceAssignment_1"
    // InternalNLX.g:11704:1: rule__Sentence__SubsentenceAssignment_1 : ( ruleSubSentence ) ;
    public final void rule__Sentence__SubsentenceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11708:1: ( ( ruleSubSentence ) )
            // InternalNLX.g:11709:2: ( ruleSubSentence )
            {
            // InternalNLX.g:11709:2: ( ruleSubSentence )
            // InternalNLX.g:11710:3: ruleSubSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceAccess().getSubsentenceSubSentenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceAccess().getSubsentenceSubSentenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__SubsentenceAssignment_1"


    // $ANTLR start "rule__Sentence__SubsentenceAssignment_2_1"
    // InternalNLX.g:11719:1: rule__Sentence__SubsentenceAssignment_2_1 : ( ruleTrailSubSentence ) ;
    public final void rule__Sentence__SubsentenceAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11723:1: ( ( ruleTrailSubSentence ) )
            // InternalNLX.g:11724:2: ( ruleTrailSubSentence )
            {
            // InternalNLX.g:11724:2: ( ruleTrailSubSentence )
            // InternalNLX.g:11725:3: ruleTrailSubSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceAccess().getSubsentenceTrailSubSentenceParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTrailSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceAccess().getSubsentenceTrailSubSentenceParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sentence__SubsentenceAssignment_2_1"


    // $ANTLR start "rule__LineSentence__SubsentenceAssignment_1"
    // InternalNLX.g:11734:1: rule__LineSentence__SubsentenceAssignment_1 : ( ruleLineSubSentence ) ;
    public final void rule__LineSentence__SubsentenceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11738:1: ( ( ruleLineSubSentence ) )
            // InternalNLX.g:11739:2: ( ruleLineSubSentence )
            {
            // InternalNLX.g:11739:2: ( ruleLineSubSentence )
            // InternalNLX.g:11740:3: ruleLineSubSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceAccess().getSubsentenceLineSubSentenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLineSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceAccess().getSubsentenceLineSubSentenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__SubsentenceAssignment_1"


    // $ANTLR start "rule__LineSentence__SubsentenceAssignment_2_1"
    // InternalNLX.g:11749:1: rule__LineSentence__SubsentenceAssignment_2_1 : ( ruleLineSubSentence ) ;
    public final void rule__LineSentence__SubsentenceAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11753:1: ( ( ruleLineSubSentence ) )
            // InternalNLX.g:11754:2: ( ruleLineSubSentence )
            {
            // InternalNLX.g:11754:2: ( ruleLineSubSentence )
            // InternalNLX.g:11755:3: ruleLineSubSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSentenceAccess().getSubsentenceLineSubSentenceParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLineSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSentenceAccess().getSubsentenceLineSubSentenceParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSentence__SubsentenceAssignment_2_1"


    // $ANTLR start "rule__FreeSentence__SubsentenceAssignment_1"
    // InternalNLX.g:11764:1: rule__FreeSentence__SubsentenceAssignment_1 : ( ruleFreeSubSentence ) ;
    public final void rule__FreeSentence__SubsentenceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11768:1: ( ( ruleFreeSubSentence ) )
            // InternalNLX.g:11769:2: ( ruleFreeSubSentence )
            {
            // InternalNLX.g:11769:2: ( ruleFreeSubSentence )
            // InternalNLX.g:11770:3: ruleFreeSubSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSentenceAccess().getSubsentenceFreeSubSentenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFreeSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSentenceAccess().getSubsentenceFreeSubSentenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__SubsentenceAssignment_1"


    // $ANTLR start "rule__FreeSentence__SubsentenceAssignment_2_1"
    // InternalNLX.g:11779:1: rule__FreeSentence__SubsentenceAssignment_2_1 : ( ruleFreeSubSentence ) ;
    public final void rule__FreeSentence__SubsentenceAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11783:1: ( ( ruleFreeSubSentence ) )
            // InternalNLX.g:11784:2: ( ruleFreeSubSentence )
            {
            // InternalNLX.g:11784:2: ( ruleFreeSubSentence )
            // InternalNLX.g:11785:3: ruleFreeSubSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSentenceAccess().getSubsentenceFreeSubSentenceParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFreeSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSentenceAccess().getSubsentenceFreeSubSentenceParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSentence__SubsentenceAssignment_2_1"


    // $ANTLR start "rule__SentenceX__SubsentenceAssignment_1"
    // InternalNLX.g:11794:1: rule__SentenceX__SubsentenceAssignment_1 : ( ruleTrailSubSentence ) ;
    public final void rule__SentenceX__SubsentenceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11798:1: ( ( ruleTrailSubSentence ) )
            // InternalNLX.g:11799:2: ( ruleTrailSubSentence )
            {
            // InternalNLX.g:11799:2: ( ruleTrailSubSentence )
            // InternalNLX.g:11800:3: ruleTrailSubSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceXAccess().getSubsentenceTrailSubSentenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTrailSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceXAccess().getSubsentenceTrailSubSentenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__SubsentenceAssignment_1"


    // $ANTLR start "rule__SentenceX__SubsentenceAssignment_2_1"
    // InternalNLX.g:11809:1: rule__SentenceX__SubsentenceAssignment_2_1 : ( ruleTrailSubSentence ) ;
    public final void rule__SentenceX__SubsentenceAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11813:1: ( ( ruleTrailSubSentence ) )
            // InternalNLX.g:11814:2: ( ruleTrailSubSentence )
            {
            // InternalNLX.g:11814:2: ( ruleTrailSubSentence )
            // InternalNLX.g:11815:3: ruleTrailSubSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSentenceXAccess().getSubsentenceTrailSubSentenceParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTrailSubSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSentenceXAccess().getSubsentenceTrailSubSentenceParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SentenceX__SubsentenceAssignment_2_1"


    // $ANTLR start "rule__ListSentence__ListpointAssignment_0"
    // InternalNLX.g:11824:1: rule__ListSentence__ListpointAssignment_0 : ( ruleListPoint ) ;
    public final void rule__ListSentence__ListpointAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11828:1: ( ( ruleListPoint ) )
            // InternalNLX.g:11829:2: ( ruleListPoint )
            {
            // InternalNLX.g:11829:2: ( ruleListPoint )
            // InternalNLX.g:11830:3: ruleListPoint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListSentenceAccess().getListpointListPointParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleListPoint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListSentenceAccess().getListpointListPointParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListSentence__ListpointAssignment_0"


    // $ANTLR start "rule__ListSentence__SentenceChainAssignment_1_0"
    // InternalNLX.g:11839:1: rule__ListSentence__SentenceChainAssignment_1_0 : ( ruleSentenceChainX ) ;
    public final void rule__ListSentence__SentenceChainAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11843:1: ( ( ruleSentenceChainX ) )
            // InternalNLX.g:11844:2: ( ruleSentenceChainX )
            {
            // InternalNLX.g:11844:2: ( ruleSentenceChainX )
            // InternalNLX.g:11845:3: ruleSentenceChainX
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListSentenceAccess().getSentenceChainSentenceChainXParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSentenceChainX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListSentenceAccess().getSentenceChainSentenceChainXParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListSentence__SentenceChainAssignment_1_0"


    // $ANTLR start "rule__ChapterSentence__ChapterNumberAssignment_0_0"
    // InternalNLX.g:11854:1: rule__ChapterSentence__ChapterNumberAssignment_0_0 : ( ruleChapter_Unit_Low ) ;
    public final void rule__ChapterSentence__ChapterNumberAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11858:1: ( ( ruleChapter_Unit_Low ) )
            // InternalNLX.g:11859:2: ( ruleChapter_Unit_Low )
            {
            // InternalNLX.g:11859:2: ( ruleChapter_Unit_Low )
            // InternalNLX.g:11860:3: ruleChapter_Unit_Low
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterSentenceAccess().getChapterNumberChapter_Unit_LowParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleChapter_Unit_Low();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterSentenceAccess().getChapterNumberChapter_Unit_LowParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterSentence__ChapterNumberAssignment_0_0"


    // $ANTLR start "rule__ChapterSentence__ChapterNumberAssignment_0_1"
    // InternalNLX.g:11869:1: rule__ChapterSentence__ChapterNumberAssignment_0_1 : ( ruleChapterAlpha ) ;
    public final void rule__ChapterSentence__ChapterNumberAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11873:1: ( ( ruleChapterAlpha ) )
            // InternalNLX.g:11874:2: ( ruleChapterAlpha )
            {
            // InternalNLX.g:11874:2: ( ruleChapterAlpha )
            // InternalNLX.g:11875:3: ruleChapterAlpha
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterSentenceAccess().getChapterNumberChapterAlphaParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleChapterAlpha();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterSentenceAccess().getChapterNumberChapterAlphaParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterSentence__ChapterNumberAssignment_0_1"


    // $ANTLR start "rule__ChapterSentence__ChapterNumberAssignment_0_2"
    // InternalNLX.g:11884:1: rule__ChapterSentence__ChapterNumberAssignment_0_2 : ( ruleChapter_Unit_HI ) ;
    public final void rule__ChapterSentence__ChapterNumberAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11888:1: ( ( ruleChapter_Unit_HI ) )
            // InternalNLX.g:11889:2: ( ruleChapter_Unit_HI )
            {
            // InternalNLX.g:11889:2: ( ruleChapter_Unit_HI )
            // InternalNLX.g:11890:3: ruleChapter_Unit_HI
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterSentenceAccess().getChapterNumberChapter_Unit_HIParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleChapter_Unit_HI();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterSentenceAccess().getChapterNumberChapter_Unit_HIParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterSentence__ChapterNumberAssignment_0_2"


    // $ANTLR start "rule__ChapterSentence__HeadlineAssignment_1"
    // InternalNLX.g:11899:1: rule__ChapterSentence__HeadlineAssignment_1 : ( ruleLineSentenceChain ) ;
    public final void rule__ChapterSentence__HeadlineAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11903:1: ( ( ruleLineSentenceChain ) )
            // InternalNLX.g:11904:2: ( ruleLineSentenceChain )
            {
            // InternalNLX.g:11904:2: ( ruleLineSentenceChain )
            // InternalNLX.g:11905:3: ruleLineSentenceChain
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterSentenceAccess().getHeadlineLineSentenceChainParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLineSentenceChain();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterSentenceAccess().getHeadlineLineSentenceChainParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterSentence__HeadlineAssignment_1"


    // $ANTLR start "rule__SubSentence__ElementsAssignment_1_0_0"
    // InternalNLX.g:11914:1: rule__SubSentence__ElementsAssignment_1_0_0 : ( ruleNoNElement ) ;
    public final void rule__SubSentence__ElementsAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11918:1: ( ( ruleNoNElement ) )
            // InternalNLX.g:11919:2: ( ruleNoNElement )
            {
            // InternalNLX.g:11919:2: ( ruleNoNElement )
            // InternalNLX.g:11920:3: ruleNoNElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsNoNElementParserRuleCall_1_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNoNElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsNoNElementParserRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__ElementsAssignment_1_0_0"


    // $ANTLR start "rule__SubSentence__ElementsAssignment_1_0_1_1"
    // InternalNLX.g:11929:1: rule__SubSentence__ElementsAssignment_1_0_1_1 : ( ruleElements ) ;
    public final void rule__SubSentence__ElementsAssignment_1_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11933:1: ( ( ruleElements ) )
            // InternalNLX.g:11934:2: ( ruleElements )
            {
            // InternalNLX.g:11934:2: ( ruleElements )
            // InternalNLX.g:11935:3: ruleElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsElementsParserRuleCall_1_0_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsElementsParserRuleCall_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__ElementsAssignment_1_0_1_1"


    // $ANTLR start "rule__SubSentence__ElementsAssignment_1_1_0"
    // InternalNLX.g:11944:1: rule__SubSentence__ElementsAssignment_1_1_0 : ( ruleNoNElementX ) ;
    public final void rule__SubSentence__ElementsAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11948:1: ( ( ruleNoNElementX ) )
            // InternalNLX.g:11949:2: ( ruleNoNElementX )
            {
            // InternalNLX.g:11949:2: ( ruleNoNElementX )
            // InternalNLX.g:11950:3: ruleNoNElementX
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsNoNElementXParserRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNoNElementX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsNoNElementXParserRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__ElementsAssignment_1_1_0"


    // $ANTLR start "rule__SubSentence__ElementsAssignment_1_1_1_1"
    // InternalNLX.g:11959:1: rule__SubSentence__ElementsAssignment_1_1_1_1 : ( ruleElements ) ;
    public final void rule__SubSentence__ElementsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11963:1: ( ( ruleElements ) )
            // InternalNLX.g:11964:2: ( ruleElements )
            {
            // InternalNLX.g:11964:2: ( ruleElements )
            // InternalNLX.g:11965:3: ruleElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsElementsParserRuleCall_1_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsElementsParserRuleCall_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__ElementsAssignment_1_1_1_1"

}

@SuppressWarnings("all")
abstract class InternalNLXParser10 extends InternalNLXParser9 {

        InternalNLXParser10(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalNLXParser10(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__SubSentence__ElementsAssignment_2_1"
    // InternalNLX.g:11974:1: rule__SubSentence__ElementsAssignment_2_1 : ( ruleNew_Line ) ;
    public final void rule__SubSentence__ElementsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11978:1: ( ( ruleNew_Line ) )
            // InternalNLX.g:11979:2: ( ruleNew_Line )
            {
            // InternalNLX.g:11979:2: ( ruleNew_Line )
            // InternalNLX.g:11980:3: ruleNew_Line
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsNew_LineParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNew_Line();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsNew_LineParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__ElementsAssignment_2_1"


    // $ANTLR start "rule__SubSentence__ElementsAssignment_2_3"
    // InternalNLX.g:11989:1: rule__SubSentence__ElementsAssignment_2_3 : ( ruleNoNElementX2 ) ;
    public final void rule__SubSentence__ElementsAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:11993:1: ( ( ruleNoNElementX2 ) )
            // InternalNLX.g:11994:2: ( ruleNoNElementX2 )
            {
            // InternalNLX.g:11994:2: ( ruleNoNElementX2 )
            // InternalNLX.g:11995:3: ruleNoNElementX2
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsNoNElementX2ParserRuleCall_2_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNoNElementX2();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsNoNElementX2ParserRuleCall_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__ElementsAssignment_2_3"


    // $ANTLR start "rule__SubSentence__ElementsAssignment_2_4_1"
    // InternalNLX.g:12004:1: rule__SubSentence__ElementsAssignment_2_4_1 : ( ruleElements ) ;
    public final void rule__SubSentence__ElementsAssignment_2_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12008:1: ( ( ruleElements ) )
            // InternalNLX.g:12009:2: ( ruleElements )
            {
            // InternalNLX.g:12009:2: ( ruleElements )
            // InternalNLX.g:12010:3: ruleElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubSentenceAccess().getElementsElementsParserRuleCall_2_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubSentenceAccess().getElementsElementsParserRuleCall_2_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubSentence__ElementsAssignment_2_4_1"


    // $ANTLR start "rule__TrailSubSentence__ElementsAssignment_1_0"
    // InternalNLX.g:12019:1: rule__TrailSubSentence__ElementsAssignment_1_0 : ( ruleElements ) ;
    public final void rule__TrailSubSentence__ElementsAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12023:1: ( ( ruleElements ) )
            // InternalNLX.g:12024:2: ( ruleElements )
            {
            // InternalNLX.g:12024:2: ( ruleElements )
            // InternalNLX.g:12025:3: ruleElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getElementsElementsParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getElementsElementsParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__ElementsAssignment_1_0"


    // $ANTLR start "rule__TrailSubSentence__ElementsAssignment_1_1_1"
    // InternalNLX.g:12034:1: rule__TrailSubSentence__ElementsAssignment_1_1_1 : ( ruleElements ) ;
    public final void rule__TrailSubSentence__ElementsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12038:1: ( ( ruleElements ) )
            // InternalNLX.g:12039:2: ( ruleElements )
            {
            // InternalNLX.g:12039:2: ( ruleElements )
            // InternalNLX.g:12040:3: ruleElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getElementsElementsParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getElementsElementsParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__ElementsAssignment_1_1_1"


    // $ANTLR start "rule__TrailSubSentence__ElementsAssignment_1_2_1"
    // InternalNLX.g:12049:1: rule__TrailSubSentence__ElementsAssignment_1_2_1 : ( ruleNew_Line ) ;
    public final void rule__TrailSubSentence__ElementsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12053:1: ( ( ruleNew_Line ) )
            // InternalNLX.g:12054:2: ( ruleNew_Line )
            {
            // InternalNLX.g:12054:2: ( ruleNew_Line )
            // InternalNLX.g:12055:3: ruleNew_Line
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getElementsNew_LineParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNew_Line();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getElementsNew_LineParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__ElementsAssignment_1_2_1"


    // $ANTLR start "rule__TrailSubSentence__ElementsAssignment_1_2_3"
    // InternalNLX.g:12064:1: rule__TrailSubSentence__ElementsAssignment_1_2_3 : ( ruleNoNElementX2 ) ;
    public final void rule__TrailSubSentence__ElementsAssignment_1_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12068:1: ( ( ruleNoNElementX2 ) )
            // InternalNLX.g:12069:2: ( ruleNoNElementX2 )
            {
            // InternalNLX.g:12069:2: ( ruleNoNElementX2 )
            // InternalNLX.g:12070:3: ruleNoNElementX2
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getElementsNoNElementX2ParserRuleCall_1_2_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNoNElementX2();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getElementsNoNElementX2ParserRuleCall_1_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__ElementsAssignment_1_2_3"


    // $ANTLR start "rule__TrailSubSentence__ElementsAssignment_1_2_4_1"
    // InternalNLX.g:12079:1: rule__TrailSubSentence__ElementsAssignment_1_2_4_1 : ( ruleElements ) ;
    public final void rule__TrailSubSentence__ElementsAssignment_1_2_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12083:1: ( ( ruleElements ) )
            // InternalNLX.g:12084:2: ( ruleElements )
            {
            // InternalNLX.g:12084:2: ( ruleElements )
            // InternalNLX.g:12085:3: ruleElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTrailSubSentenceAccess().getElementsElementsParserRuleCall_1_2_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTrailSubSentenceAccess().getElementsElementsParserRuleCall_1_2_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TrailSubSentence__ElementsAssignment_1_2_4_1"


    // $ANTLR start "rule__FreeSubSentence__ElementsAssignment_1_1"
    // InternalNLX.g:12094:1: rule__FreeSubSentence__ElementsAssignment_1_1 : ( ruleNew_Line ) ;
    public final void rule__FreeSubSentence__ElementsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12098:1: ( ( ruleNew_Line ) )
            // InternalNLX.g:12099:2: ( ruleNew_Line )
            {
            // InternalNLX.g:12099:2: ( ruleNew_Line )
            // InternalNLX.g:12100:3: ruleNew_Line
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getElementsNew_LineParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNew_Line();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getElementsNew_LineParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__ElementsAssignment_1_1"


    // $ANTLR start "rule__FreeSubSentence__ElementsAssignment_2"
    // InternalNLX.g:12109:1: rule__FreeSubSentence__ElementsAssignment_2 : ( ruleAllElements ) ;
    public final void rule__FreeSubSentence__ElementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12113:1: ( ( ruleAllElements ) )
            // InternalNLX.g:12114:2: ( ruleAllElements )
            {
            // InternalNLX.g:12114:2: ( ruleAllElements )
            // InternalNLX.g:12115:3: ruleAllElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getElementsAllElementsParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAllElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getElementsAllElementsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__ElementsAssignment_2"


    // $ANTLR start "rule__FreeSubSentence__ElementsAssignment_3_0_1"
    // InternalNLX.g:12124:1: rule__FreeSubSentence__ElementsAssignment_3_0_1 : ( ruleNew_Line ) ;
    public final void rule__FreeSubSentence__ElementsAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12128:1: ( ( ruleNew_Line ) )
            // InternalNLX.g:12129:2: ( ruleNew_Line )
            {
            // InternalNLX.g:12129:2: ( ruleNew_Line )
            // InternalNLX.g:12130:3: ruleNew_Line
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getElementsNew_LineParserRuleCall_3_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNew_Line();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getElementsNew_LineParserRuleCall_3_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__ElementsAssignment_3_0_1"


    // $ANTLR start "rule__FreeSubSentence__ElementsAssignment_3_1"
    // InternalNLX.g:12139:1: rule__FreeSubSentence__ElementsAssignment_3_1 : ( ruleAllElements ) ;
    public final void rule__FreeSubSentence__ElementsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12143:1: ( ( ruleAllElements ) )
            // InternalNLX.g:12144:2: ( ruleAllElements )
            {
            // InternalNLX.g:12144:2: ( ruleAllElements )
            // InternalNLX.g:12145:3: ruleAllElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getElementsAllElementsParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAllElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getElementsAllElementsParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__ElementsAssignment_3_1"


    // $ANTLR start "rule__FreeSubSentence__ElementsAssignment_4_1"
    // InternalNLX.g:12154:1: rule__FreeSubSentence__ElementsAssignment_4_1 : ( ruleNew_Line ) ;
    public final void rule__FreeSubSentence__ElementsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12158:1: ( ( ruleNew_Line ) )
            // InternalNLX.g:12159:2: ( ruleNew_Line )
            {
            // InternalNLX.g:12159:2: ( ruleNew_Line )
            // InternalNLX.g:12160:3: ruleNew_Line
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFreeSubSentenceAccess().getElementsNew_LineParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNew_Line();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFreeSubSentenceAccess().getElementsNew_LineParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FreeSubSentence__ElementsAssignment_4_1"


    // $ANTLR start "rule__LineSubSentence__ElementsAssignment_1"
    // InternalNLX.g:12169:1: rule__LineSubSentence__ElementsAssignment_1 : ( ruleElements ) ;
    public final void rule__LineSubSentence__ElementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12173:1: ( ( ruleElements ) )
            // InternalNLX.g:12174:2: ( ruleElements )
            {
            // InternalNLX.g:12174:2: ( ruleElements )
            // InternalNLX.g:12175:3: ruleElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSubSentenceAccess().getElementsElementsParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSubSentenceAccess().getElementsElementsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__ElementsAssignment_1"


    // $ANTLR start "rule__LineSubSentence__ElementsAssignment_2_1"
    // InternalNLX.g:12184:1: rule__LineSubSentence__ElementsAssignment_2_1 : ( ruleElements ) ;
    public final void rule__LineSubSentence__ElementsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12188:1: ( ( ruleElements ) )
            // InternalNLX.g:12189:2: ( ruleElements )
            {
            // InternalNLX.g:12189:2: ( ruleElements )
            // InternalNLX.g:12190:3: ruleElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLineSubSentenceAccess().getElementsElementsParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLineSubSentenceAccess().getElementsElementsParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LineSubSentence__ElementsAssignment_2_1"


    // $ANTLR start "rule__BracketSentence__OpenAssignment_1"
    // InternalNLX.g:12199:1: rule__BracketSentence__OpenAssignment_1 : ( RULE_BR_O ) ;
    public final void rule__BracketSentence__OpenAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12203:1: ( ( RULE_BR_O ) )
            // InternalNLX.g:12204:2: ( RULE_BR_O )
            {
            // InternalNLX.g:12204:2: ( RULE_BR_O )
            // InternalNLX.g:12205:3: RULE_BR_O
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getOpenBR_OTerminalRuleCall_1_0()); 
            }
            match(input,RULE_BR_O,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getOpenBR_OTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__OpenAssignment_1"


    // $ANTLR start "rule__BracketSentence__BrackedSentencesAssignment_2_0"
    // InternalNLX.g:12214:1: rule__BracketSentence__BrackedSentencesAssignment_2_0 : ( ruleFreeSentence ) ;
    public final void rule__BracketSentence__BrackedSentencesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12218:1: ( ( ruleFreeSentence ) )
            // InternalNLX.g:12219:2: ( ruleFreeSentence )
            {
            // InternalNLX.g:12219:2: ( ruleFreeSentence )
            // InternalNLX.g:12220:3: ruleFreeSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFreeSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__BrackedSentencesAssignment_2_0"


    // $ANTLR start "rule__BracketSentence__SeparatorAssignment_2_1_0"
    // InternalNLX.g:12229:1: rule__BracketSentence__SeparatorAssignment_2_1_0 : ( ruleFullStop ) ;
    public final void rule__BracketSentence__SeparatorAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12233:1: ( ( ruleFullStop ) )
            // InternalNLX.g:12234:2: ( ruleFullStop )
            {
            // InternalNLX.g:12234:2: ( ruleFullStop )
            // InternalNLX.g:12235:3: ruleFullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getSeparatorFullStopParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFullStop();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getSeparatorFullStopParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__SeparatorAssignment_2_1_0"


    // $ANTLR start "rule__BracketSentence__BrackedSentencesAssignment_2_1_1"
    // InternalNLX.g:12244:1: rule__BracketSentence__BrackedSentencesAssignment_2_1_1 : ( ruleFreeSentence ) ;
    public final void rule__BracketSentence__BrackedSentencesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12248:1: ( ( ruleFreeSentence ) )
            // InternalNLX.g:12249:2: ( ruleFreeSentence )
            {
            // InternalNLX.g:12249:2: ( ruleFreeSentence )
            // InternalNLX.g:12250:3: ruleFreeSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFreeSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__BrackedSentencesAssignment_2_1_1"


    // $ANTLR start "rule__BracketSentence__SeparatorAssignment_3"
    // InternalNLX.g:12259:1: rule__BracketSentence__SeparatorAssignment_3 : ( ( rule__BracketSentence__SeparatorAlternatives_3_0 ) ) ;
    public final void rule__BracketSentence__SeparatorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12263:1: ( ( ( rule__BracketSentence__SeparatorAlternatives_3_0 ) ) )
            // InternalNLX.g:12264:2: ( ( rule__BracketSentence__SeparatorAlternatives_3_0 ) )
            {
            // InternalNLX.g:12264:2: ( ( rule__BracketSentence__SeparatorAlternatives_3_0 ) )
            // InternalNLX.g:12265:3: ( rule__BracketSentence__SeparatorAlternatives_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getSeparatorAlternatives_3_0()); 
            }
            // InternalNLX.g:12266:3: ( rule__BracketSentence__SeparatorAlternatives_3_0 )
            // InternalNLX.g:12266:4: rule__BracketSentence__SeparatorAlternatives_3_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BracketSentence__SeparatorAlternatives_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getSeparatorAlternatives_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__SeparatorAssignment_3"


    // $ANTLR start "rule__BracketSentence__CloseAssignment_6"
    // InternalNLX.g:12274:1: rule__BracketSentence__CloseAssignment_6 : ( RULE_BR_CL ) ;
    public final void rule__BracketSentence__CloseAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12278:1: ( ( RULE_BR_CL ) )
            // InternalNLX.g:12279:2: ( RULE_BR_CL )
            {
            // InternalNLX.g:12279:2: ( RULE_BR_CL )
            // InternalNLX.g:12280:3: RULE_BR_CL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBracketSentenceAccess().getCloseBR_CLTerminalRuleCall_6_0()); 
            }
            match(input,RULE_BR_CL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBracketSentenceAccess().getCloseBR_CLTerminalRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BracketSentence__CloseAssignment_6"


    // $ANTLR start "rule__ExtBracketSentence__OpenAssignment_1"
    // InternalNLX.g:12289:1: rule__ExtBracketSentence__OpenAssignment_1 : ( RULE_EXBR_O ) ;
    public final void rule__ExtBracketSentence__OpenAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12293:1: ( ( RULE_EXBR_O ) )
            // InternalNLX.g:12294:2: ( RULE_EXBR_O )
            {
            // InternalNLX.g:12294:2: ( RULE_EXBR_O )
            // InternalNLX.g:12295:3: RULE_EXBR_O
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getOpenEXBR_OTerminalRuleCall_1_0()); 
            }
            match(input,RULE_EXBR_O,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getOpenEXBR_OTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__OpenAssignment_1"


    // $ANTLR start "rule__ExtBracketSentence__BrackedSentencesAssignment_2_0"
    // InternalNLX.g:12304:1: rule__ExtBracketSentence__BrackedSentencesAssignment_2_0 : ( ruleFreeSentence ) ;
    public final void rule__ExtBracketSentence__BrackedSentencesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12308:1: ( ( ruleFreeSentence ) )
            // InternalNLX.g:12309:2: ( ruleFreeSentence )
            {
            // InternalNLX.g:12309:2: ( ruleFreeSentence )
            // InternalNLX.g:12310:3: ruleFreeSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFreeSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__BrackedSentencesAssignment_2_0"


    // $ANTLR start "rule__ExtBracketSentence__SeparatorAssignment_2_1_0"
    // InternalNLX.g:12319:1: rule__ExtBracketSentence__SeparatorAssignment_2_1_0 : ( ruleFullStop ) ;
    public final void rule__ExtBracketSentence__SeparatorAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12323:1: ( ( ruleFullStop ) )
            // InternalNLX.g:12324:2: ( ruleFullStop )
            {
            // InternalNLX.g:12324:2: ( ruleFullStop )
            // InternalNLX.g:12325:3: ruleFullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getSeparatorFullStopParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFullStop();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getSeparatorFullStopParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__SeparatorAssignment_2_1_0"


    // $ANTLR start "rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1"
    // InternalNLX.g:12334:1: rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1 : ( ruleFreeSentence ) ;
    public final void rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12338:1: ( ( ruleFreeSentence ) )
            // InternalNLX.g:12339:2: ( ruleFreeSentence )
            {
            // InternalNLX.g:12339:2: ( ruleFreeSentence )
            // InternalNLX.g:12340:3: ruleFreeSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFreeSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__BrackedSentencesAssignment_2_1_1"


    // $ANTLR start "rule__ExtBracketSentence__SeparatorAssignment_3"
    // InternalNLX.g:12349:1: rule__ExtBracketSentence__SeparatorAssignment_3 : ( ( rule__ExtBracketSentence__SeparatorAlternatives_3_0 ) ) ;
    public final void rule__ExtBracketSentence__SeparatorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12353:1: ( ( ( rule__ExtBracketSentence__SeparatorAlternatives_3_0 ) ) )
            // InternalNLX.g:12354:2: ( ( rule__ExtBracketSentence__SeparatorAlternatives_3_0 ) )
            {
            // InternalNLX.g:12354:2: ( ( rule__ExtBracketSentence__SeparatorAlternatives_3_0 ) )
            // InternalNLX.g:12355:3: ( rule__ExtBracketSentence__SeparatorAlternatives_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getSeparatorAlternatives_3_0()); 
            }
            // InternalNLX.g:12356:3: ( rule__ExtBracketSentence__SeparatorAlternatives_3_0 )
            // InternalNLX.g:12356:4: rule__ExtBracketSentence__SeparatorAlternatives_3_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentence__SeparatorAlternatives_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getSeparatorAlternatives_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__SeparatorAssignment_3"


    // $ANTLR start "rule__ExtBracketSentence__CloseAssignment_5"
    // InternalNLX.g:12364:1: rule__ExtBracketSentence__CloseAssignment_5 : ( RULE_EXBR_CL ) ;
    public final void rule__ExtBracketSentence__CloseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12368:1: ( ( RULE_EXBR_CL ) )
            // InternalNLX.g:12369:2: ( RULE_EXBR_CL )
            {
            // InternalNLX.g:12369:2: ( RULE_EXBR_CL )
            // InternalNLX.g:12370:3: RULE_EXBR_CL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceAccess().getCloseEXBR_CLTerminalRuleCall_5_0()); 
            }
            match(input,RULE_EXBR_CL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceAccess().getCloseEXBR_CLTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentence__CloseAssignment_5"


    // $ANTLR start "rule__ExtBracketSentenceC__OpenAssignment_1"
    // InternalNLX.g:12379:1: rule__ExtBracketSentenceC__OpenAssignment_1 : ( RULE_EXBRC_O ) ;
    public final void rule__ExtBracketSentenceC__OpenAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12383:1: ( ( RULE_EXBRC_O ) )
            // InternalNLX.g:12384:2: ( RULE_EXBRC_O )
            {
            // InternalNLX.g:12384:2: ( RULE_EXBRC_O )
            // InternalNLX.g:12385:3: RULE_EXBRC_O
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getOpenEXBRC_OTerminalRuleCall_1_0()); 
            }
            match(input,RULE_EXBRC_O,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getOpenEXBRC_OTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__OpenAssignment_1"


    // $ANTLR start "rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0"
    // InternalNLX.g:12394:1: rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0 : ( ruleFreeSentence ) ;
    public final void rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12398:1: ( ( ruleFreeSentence ) )
            // InternalNLX.g:12399:2: ( ruleFreeSentence )
            {
            // InternalNLX.g:12399:2: ( ruleFreeSentence )
            // InternalNLX.g:12400:3: ruleFreeSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFreeSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_0"


    // $ANTLR start "rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0"
    // InternalNLX.g:12409:1: rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0 : ( ruleFullStop ) ;
    public final void rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12413:1: ( ( ruleFullStop ) )
            // InternalNLX.g:12414:2: ( ruleFullStop )
            {
            // InternalNLX.g:12414:2: ( ruleFullStop )
            // InternalNLX.g:12415:3: ruleFullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getSeparatorFullStopParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFullStop();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getSeparatorFullStopParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__SeparatorAssignment_2_1_0"


    // $ANTLR start "rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1"
    // InternalNLX.g:12424:1: rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1 : ( ruleFreeSentence ) ;
    public final void rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12428:1: ( ( ruleFreeSentence ) )
            // InternalNLX.g:12429:2: ( ruleFreeSentence )
            {
            // InternalNLX.g:12429:2: ( ruleFreeSentence )
            // InternalNLX.g:12430:3: ruleFreeSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFreeSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__BrackedSentencesAssignment_2_1_1"


    // $ANTLR start "rule__ExtBracketSentenceC__SeparatorAssignment_3"
    // InternalNLX.g:12439:1: rule__ExtBracketSentenceC__SeparatorAssignment_3 : ( ( rule__ExtBracketSentenceC__SeparatorAlternatives_3_0 ) ) ;
    public final void rule__ExtBracketSentenceC__SeparatorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12443:1: ( ( ( rule__ExtBracketSentenceC__SeparatorAlternatives_3_0 ) ) )
            // InternalNLX.g:12444:2: ( ( rule__ExtBracketSentenceC__SeparatorAlternatives_3_0 ) )
            {
            // InternalNLX.g:12444:2: ( ( rule__ExtBracketSentenceC__SeparatorAlternatives_3_0 ) )
            // InternalNLX.g:12445:3: ( rule__ExtBracketSentenceC__SeparatorAlternatives_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getSeparatorAlternatives_3_0()); 
            }
            // InternalNLX.g:12446:3: ( rule__ExtBracketSentenceC__SeparatorAlternatives_3_0 )
            // InternalNLX.g:12446:4: rule__ExtBracketSentenceC__SeparatorAlternatives_3_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtBracketSentenceC__SeparatorAlternatives_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getSeparatorAlternatives_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__SeparatorAssignment_3"


    // $ANTLR start "rule__ExtBracketSentenceC__CloseAssignment_5"
    // InternalNLX.g:12454:1: rule__ExtBracketSentenceC__CloseAssignment_5 : ( RULE_EXBRC_CL ) ;
    public final void rule__ExtBracketSentenceC__CloseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12458:1: ( ( RULE_EXBRC_CL ) )
            // InternalNLX.g:12459:2: ( RULE_EXBRC_CL )
            {
            // InternalNLX.g:12459:2: ( RULE_EXBRC_CL )
            // InternalNLX.g:12460:3: RULE_EXBRC_CL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtBracketSentenceCAccess().getCloseEXBRC_CLTerminalRuleCall_5_0()); 
            }
            match(input,RULE_EXBRC_CL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtBracketSentenceCAccess().getCloseEXBRC_CLTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtBracketSentenceC__CloseAssignment_5"


    // $ANTLR start "rule__Word__WordAssignment_0_0"
    // InternalNLX.g:12469:1: rule__Word__WordAssignment_0_0 : ( ruleFragmentX ) ;
    public final void rule__Word__WordAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12473:1: ( ( ruleFragmentX ) )
            // InternalNLX.g:12474:2: ( ruleFragmentX )
            {
            // InternalNLX.g:12474:2: ( ruleFragmentX )
            // InternalNLX.g:12475:3: ruleFragmentX
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getWordFragmentXParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFragmentX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getWordFragmentXParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__WordAssignment_0_0"


    // $ANTLR start "rule__Word__WordAssignment_0_1_0_0"
    // InternalNLX.g:12484:1: rule__Word__WordAssignment_0_1_0_0 : ( ruleFragment ) ;
    public final void rule__Word__WordAssignment_0_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12488:1: ( ( ruleFragment ) )
            // InternalNLX.g:12489:2: ( ruleFragment )
            {
            // InternalNLX.g:12489:2: ( ruleFragment )
            // InternalNLX.g:12490:3: ruleFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getWordFragmentParserRuleCall_0_1_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getWordFragmentParserRuleCall_0_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__WordAssignment_0_1_0_0"


    // $ANTLR start "rule__Word__WordAssignment_0_1_1_0"
    // InternalNLX.g:12499:1: rule__Word__WordAssignment_0_1_1_0 : ( ruleSeparatorsL ) ;
    public final void rule__Word__WordAssignment_0_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12503:1: ( ( ruleSeparatorsL ) )
            // InternalNLX.g:12504:2: ( ruleSeparatorsL )
            {
            // InternalNLX.g:12504:2: ( ruleSeparatorsL )
            // InternalNLX.g:12505:3: ruleSeparatorsL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getWordSeparatorsLParserRuleCall_0_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSeparatorsL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getWordSeparatorsLParserRuleCall_0_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__WordAssignment_0_1_1_0"


    // $ANTLR start "rule__Word__WordAssignment_0_1_1_1"
    // InternalNLX.g:12514:1: rule__Word__WordAssignment_0_1_1_1 : ( ruleFragment ) ;
    public final void rule__Word__WordAssignment_0_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12518:1: ( ( ruleFragment ) )
            // InternalNLX.g:12519:2: ( ruleFragment )
            {
            // InternalNLX.g:12519:2: ( ruleFragment )
            // InternalNLX.g:12520:3: ruleFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getWordFragmentParserRuleCall_0_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getWordFragmentParserRuleCall_0_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__WordAssignment_0_1_1_1"


    // $ANTLR start "rule__Word__WordAssignment_1"
    // InternalNLX.g:12529:1: rule__Word__WordAssignment_1 : ( ruleSeparatorsL ) ;
    public final void rule__Word__WordAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12533:1: ( ( ruleSeparatorsL ) )
            // InternalNLX.g:12534:2: ( ruleSeparatorsL )
            {
            // InternalNLX.g:12534:2: ( ruleSeparatorsL )
            // InternalNLX.g:12535:3: ruleSeparatorsL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getWordSeparatorsLParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSeparatorsL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getWordSeparatorsLParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__WordAssignment_1"


    // $ANTLR start "rule__WordShort__WordAssignment_1"
    // InternalNLX.g:12544:1: rule__WordShort__WordAssignment_1 : ( RULE_ALPHA ) ;
    public final void rule__WordShort__WordAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12548:1: ( ( RULE_ALPHA ) )
            // InternalNLX.g:12549:2: ( RULE_ALPHA )
            {
            // InternalNLX.g:12549:2: ( RULE_ALPHA )
            // InternalNLX.g:12550:3: RULE_ALPHA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordShortAccess().getWordALPHATerminalRuleCall_1_0()); 
            }
            match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordShortAccess().getWordALPHATerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WordShort__WordAssignment_1"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_0_0_0_0"
    // InternalNLX.g:12559:1: rule__ItWord__WordAssignment_0_0_0_0_0_0 : ( ruleSeparatorsIt ) ;
    public final void rule__ItWord__WordAssignment_0_0_0_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12563:1: ( ( ruleSeparatorsIt ) )
            // InternalNLX.g:12564:2: ( ruleSeparatorsIt )
            {
            // InternalNLX.g:12564:2: ( ruleSeparatorsIt )
            // InternalNLX.g:12565:3: ruleSeparatorsIt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordSeparatorsItParserRuleCall_0_0_0_0_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSeparatorsIt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordSeparatorsItParserRuleCall_0_0_0_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_0_0_0_0"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_0_0_0_1"
    // InternalNLX.g:12574:1: rule__ItWord__WordAssignment_0_0_0_0_0_1 : ( ruleHashP ) ;
    public final void rule__ItWord__WordAssignment_0_0_0_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12578:1: ( ( ruleHashP ) )
            // InternalNLX.g:12579:2: ( ruleHashP )
            {
            // InternalNLX.g:12579:2: ( ruleHashP )
            // InternalNLX.g:12580:3: ruleHashP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordHashPParserRuleCall_0_0_0_0_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleHashP();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordHashPParserRuleCall_0_0_0_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_0_0_0_1"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_0_0_0_2"
    // InternalNLX.g:12589:1: rule__ItWord__WordAssignment_0_0_0_0_0_2 : ( RULE_MULTI ) ;
    public final void rule__ItWord__WordAssignment_0_0_0_0_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12593:1: ( ( RULE_MULTI ) )
            // InternalNLX.g:12594:2: ( RULE_MULTI )
            {
            // InternalNLX.g:12594:2: ( RULE_MULTI )
            // InternalNLX.g:12595:3: RULE_MULTI
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordMULTITerminalRuleCall_0_0_0_0_0_2_0()); 
            }
            match(input,RULE_MULTI,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordMULTITerminalRuleCall_0_0_0_0_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_0_0_0_2"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_0_0_0_3"
    // InternalNLX.g:12604:1: rule__ItWord__WordAssignment_0_0_0_0_0_3 : ( RULE_CURRENCY ) ;
    public final void rule__ItWord__WordAssignment_0_0_0_0_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12608:1: ( ( RULE_CURRENCY ) )
            // InternalNLX.g:12609:2: ( RULE_CURRENCY )
            {
            // InternalNLX.g:12609:2: ( RULE_CURRENCY )
            // InternalNLX.g:12610:3: RULE_CURRENCY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordCURRENCYTerminalRuleCall_0_0_0_0_0_3_0()); 
            }
            match(input,RULE_CURRENCY,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordCURRENCYTerminalRuleCall_0_0_0_0_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_0_0_0_3"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_0_0_1_0"
    // InternalNLX.g:12619:1: rule__ItWord__WordAssignment_0_0_0_0_1_0 : ( ruleItWordElXx ) ;
    public final void rule__ItWord__WordAssignment_0_0_0_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12623:1: ( ( ruleItWordElXx ) )
            // InternalNLX.g:12624:2: ( ruleItWordElXx )
            {
            // InternalNLX.g:12624:2: ( ruleItWordElXx )
            // InternalNLX.g:12625:3: ruleItWordElXx
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_0_0_0_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWordElXx();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_0_0_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_0_0_1_0"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_0_0_1_1"
    // InternalNLX.g:12634:1: rule__ItWord__WordAssignment_0_0_0_0_1_1 : ( ruleFragment ) ;
    public final void rule__ItWord__WordAssignment_0_0_0_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12638:1: ( ( ruleFragment ) )
            // InternalNLX.g:12639:2: ( ruleFragment )
            {
            // InternalNLX.g:12639:2: ( ruleFragment )
            // InternalNLX.g:12640:3: ruleFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordFragmentParserRuleCall_0_0_0_0_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordFragmentParserRuleCall_0_0_0_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_0_0_1_1"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_0_1_0"
    // InternalNLX.g:12649:1: rule__ItWord__WordAssignment_0_0_0_1_0 : ( ruleItWordEl ) ;
    public final void rule__ItWord__WordAssignment_0_0_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12653:1: ( ( ruleItWordEl ) )
            // InternalNLX.g:12654:2: ( ruleItWordEl )
            {
            // InternalNLX.g:12654:2: ( ruleItWordEl )
            // InternalNLX.g:12655:3: ruleItWordEl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordItWordElParserRuleCall_0_0_0_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWordEl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordItWordElParserRuleCall_0_0_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_0_1_0"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_0_1_1"
    // InternalNLX.g:12664:1: rule__ItWord__WordAssignment_0_0_0_1_1 : ( RULE_CURL ) ;
    public final void rule__ItWord__WordAssignment_0_0_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12668:1: ( ( RULE_CURL ) )
            // InternalNLX.g:12669:2: ( RULE_CURL )
            {
            // InternalNLX.g:12669:2: ( RULE_CURL )
            // InternalNLX.g:12670:3: RULE_CURL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordCURLTerminalRuleCall_0_0_0_1_1_0()); 
            }
            match(input,RULE_CURL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordCURLTerminalRuleCall_0_0_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_0_1_1"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_0_1_2_0"
    // InternalNLX.g:12679:1: rule__ItWord__WordAssignment_0_0_0_1_2_0 : ( RULE_ALL_ALPHA ) ;
    public final void rule__ItWord__WordAssignment_0_0_0_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12683:1: ( ( RULE_ALL_ALPHA ) )
            // InternalNLX.g:12684:2: ( RULE_ALL_ALPHA )
            {
            // InternalNLX.g:12684:2: ( RULE_ALL_ALPHA )
            // InternalNLX.g:12685:3: RULE_ALL_ALPHA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordALL_ALPHATerminalRuleCall_0_0_0_1_2_0_0()); 
            }
            match(input,RULE_ALL_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordALL_ALPHATerminalRuleCall_0_0_0_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_0_1_2_0"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_0_1_2_1"
    // InternalNLX.g:12694:1: rule__ItWord__WordAssignment_0_0_0_1_2_1 : ( RULE_COLON ) ;
    public final void rule__ItWord__WordAssignment_0_0_0_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12698:1: ( ( RULE_COLON ) )
            // InternalNLX.g:12699:2: ( RULE_COLON )
            {
            // InternalNLX.g:12699:2: ( RULE_COLON )
            // InternalNLX.g:12700:3: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordCOLONTerminalRuleCall_0_0_0_1_2_1_0()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordCOLONTerminalRuleCall_0_0_0_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_0_1_2_1"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_1_0"
    // InternalNLX.g:12709:1: rule__ItWord__WordAssignment_0_0_1_0 : ( ruleAllSep ) ;
    public final void rule__ItWord__WordAssignment_0_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12713:1: ( ( ruleAllSep ) )
            // InternalNLX.g:12714:2: ( ruleAllSep )
            {
            // InternalNLX.g:12714:2: ( ruleAllSep )
            // InternalNLX.g:12715:3: ruleAllSep
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_0_0_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAllSep();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_0_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_1_0"


    // $ANTLR start "rule__ItWord__WordAssignment_0_0_1_1"
    // InternalNLX.g:12724:1: rule__ItWord__WordAssignment_0_0_1_1 : ( ruleItWordElXx ) ;
    public final void rule__ItWord__WordAssignment_0_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12728:1: ( ( ruleItWordElXx ) )
            // InternalNLX.g:12729:2: ( ruleItWordElXx )
            {
            // InternalNLX.g:12729:2: ( ruleItWordElXx )
            // InternalNLX.g:12730:3: ruleItWordElXx
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_0_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWordElXx();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_0_1_1"


    // $ANTLR start "rule__ItWord__WordAssignment_0_1_0_0"
    // InternalNLX.g:12739:1: rule__ItWord__WordAssignment_0_1_0_0 : ( ruleFragment ) ;
    public final void rule__ItWord__WordAssignment_0_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12743:1: ( ( ruleFragment ) )
            // InternalNLX.g:12744:2: ( ruleFragment )
            {
            // InternalNLX.g:12744:2: ( ruleFragment )
            // InternalNLX.g:12745:3: ruleFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordFragmentParserRuleCall_0_1_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordFragmentParserRuleCall_0_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_1_0_0"


    // $ANTLR start "rule__ItWord__WordAssignment_0_1_0_1"
    // InternalNLX.g:12754:1: rule__ItWord__WordAssignment_0_1_0_1 : ( ruleAsterisk ) ;
    public final void rule__ItWord__WordAssignment_0_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12758:1: ( ( ruleAsterisk ) )
            // InternalNLX.g:12759:2: ( ruleAsterisk )
            {
            // InternalNLX.g:12759:2: ( ruleAsterisk )
            // InternalNLX.g:12760:3: ruleAsterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAsteriskParserRuleCall_0_1_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAsterisk();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAsteriskParserRuleCall_0_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_1_0_1"


    // $ANTLR start "rule__ItWord__WordAssignment_0_1_1_0_0"
    // InternalNLX.g:12769:1: rule__ItWord__WordAssignment_0_1_1_0_0 : ( ruleSeparatorsIt ) ;
    public final void rule__ItWord__WordAssignment_0_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12773:1: ( ( ruleSeparatorsIt ) )
            // InternalNLX.g:12774:2: ( ruleSeparatorsIt )
            {
            // InternalNLX.g:12774:2: ( ruleSeparatorsIt )
            // InternalNLX.g:12775:3: ruleSeparatorsIt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordSeparatorsItParserRuleCall_0_1_1_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSeparatorsIt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordSeparatorsItParserRuleCall_0_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_1_1_0_0"


    // $ANTLR start "rule__ItWord__WordAssignment_0_1_1_0_1"
    // InternalNLX.g:12784:1: rule__ItWord__WordAssignment_0_1_1_0_1 : ( ruleItWordElXx ) ;
    public final void rule__ItWord__WordAssignment_0_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12788:1: ( ( ruleItWordElXx ) )
            // InternalNLX.g:12789:2: ( ruleItWordElXx )
            {
            // InternalNLX.g:12789:2: ( ruleItWordElXx )
            // InternalNLX.g:12790:3: ruleItWordElXx
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_1_1_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWordElXx();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_1_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_1_1_0_1"


    // $ANTLR start "rule__ItWord__WordAssignment_0_1_1_1_0"
    // InternalNLX.g:12799:1: rule__ItWord__WordAssignment_0_1_1_1_0 : ( ruleAllSep ) ;
    public final void rule__ItWord__WordAssignment_0_1_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12803:1: ( ( ruleAllSep ) )
            // InternalNLX.g:12804:2: ( ruleAllSep )
            {
            // InternalNLX.g:12804:2: ( ruleAllSep )
            // InternalNLX.g:12805:3: ruleAllSep
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_0_1_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAllSep();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_0_1_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_1_1_1_0"


    // $ANTLR start "rule__ItWord__WordAssignment_0_1_1_1_1"
    // InternalNLX.g:12814:1: rule__ItWord__WordAssignment_0_1_1_1_1 : ( ruleItWordElX ) ;
    public final void rule__ItWord__WordAssignment_0_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12818:1: ( ( ruleItWordElX ) )
            // InternalNLX.g:12819:2: ( ruleItWordElX )
            {
            // InternalNLX.g:12819:2: ( ruleItWordElX )
            // InternalNLX.g:12820:3: ruleItWordElX
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordItWordElXParserRuleCall_0_1_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWordElX();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordItWordElXParserRuleCall_0_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_1_1_1_1"


    // $ANTLR start "rule__ItWord__WordAssignment_0_1_2_0"
    // InternalNLX.g:12829:1: rule__ItWord__WordAssignment_0_1_2_0 : ( ruleAllSep ) ;
    public final void rule__ItWord__WordAssignment_0_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12833:1: ( ( ruleAllSep ) )
            // InternalNLX.g:12834:2: ( ruleAllSep )
            {
            // InternalNLX.g:12834:2: ( ruleAllSep )
            // InternalNLX.g:12835:3: ruleAllSep
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_0_1_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAllSep();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_0_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_1_2_0"


    // $ANTLR start "rule__ItWord__WordAssignment_0_1_2_1"
    // InternalNLX.g:12844:1: rule__ItWord__WordAssignment_0_1_2_1 : ( ruleItWordElXx ) ;
    public final void rule__ItWord__WordAssignment_0_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12848:1: ( ( ruleItWordElXx ) )
            // InternalNLX.g:12849:2: ( ruleItWordElXx )
            {
            // InternalNLX.g:12849:2: ( ruleItWordElXx )
            // InternalNLX.g:12850:3: ruleItWordElXx
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWordElXx();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_0_1_2_1"


    // $ANTLR start "rule__ItWord__WordAssignment_1"
    // InternalNLX.g:12859:1: rule__ItWord__WordAssignment_1 : ( ruleAllSep ) ;
    public final void rule__ItWord__WordAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12863:1: ( ( ruleAllSep ) )
            // InternalNLX.g:12864:2: ( ruleAllSep )
            {
            // InternalNLX.g:12864:2: ( ruleAllSep )
            // InternalNLX.g:12865:3: ruleAllSep
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAllSep();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItWord__WordAssignment_1"


    // $ANTLR start "rule__Quote__QuoteAssignment"
    // InternalNLX.g:12874:1: rule__Quote__QuoteAssignment : ( RULE_STRING ) ;
    public final void rule__Quote__QuoteAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12878:1: ( ( RULE_STRING ) )
            // InternalNLX.g:12879:2: ( RULE_STRING )
            {
            // InternalNLX.g:12879:2: ( RULE_STRING )
            // InternalNLX.g:12880:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuoteAccess().getQuoteSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuoteAccess().getQuoteSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Quote__QuoteAssignment"


    // $ANTLR start "rule__Unit__SignatureAssignment_0"
    // InternalNLX.g:12889:1: rule__Unit__SignatureAssignment_0 : ( RULE_MINUS ) ;
    public final void rule__Unit__SignatureAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12893:1: ( ( RULE_MINUS ) )
            // InternalNLX.g:12894:2: ( RULE_MINUS )
            {
            // InternalNLX.g:12894:2: ( RULE_MINUS )
            // InternalNLX.g:12895:3: RULE_MINUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSignatureMINUSTerminalRuleCall_0_0()); 
            }
            match(input,RULE_MINUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSignatureMINUSTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__SignatureAssignment_0"


    // $ANTLR start "rule__Unit__ValueAssignment_1"
    // InternalNLX.g:12904:1: rule__Unit__ValueAssignment_1 : ( ruleNumber ) ;
    public final void rule__Unit__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12908:1: ( ( ruleNumber ) )
            // InternalNLX.g:12909:2: ( ruleNumber )
            {
            // InternalNLX.g:12909:2: ( ruleNumber )
            // InternalNLX.g:12910:3: ruleNumber
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getValueNumberParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getValueNumberParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ValueAssignment_1"


    // $ANTLR start "rule__Unit__UnitAssignment_2_0"
    // InternalNLX.g:12919:1: rule__Unit__UnitAssignment_2_0 : ( RULE_CURRENCY ) ;
    public final void rule__Unit__UnitAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12923:1: ( ( RULE_CURRENCY ) )
            // InternalNLX.g:12924:2: ( RULE_CURRENCY )
            {
            // InternalNLX.g:12924:2: ( RULE_CURRENCY )
            // InternalNLX.g:12925:3: RULE_CURRENCY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnitCURRENCYTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_CURRENCY,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnitCURRENCYTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnitAssignment_2_0"


    // $ANTLR start "rule__Unit__UnitAssignment_2_1"
    // InternalNLX.g:12934:1: rule__Unit__UnitAssignment_2_1 : ( RULE_ID ) ;
    public final void rule__Unit__UnitAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12938:1: ( ( RULE_ID ) )
            // InternalNLX.g:12939:2: ( RULE_ID )
            {
            // InternalNLX.g:12939:2: ( RULE_ID )
            // InternalNLX.g:12940:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnitIDTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnitIDTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnitAssignment_2_1"


    // $ANTLR start "rule__Unit__UnitAssignment_2_2"
    // InternalNLX.g:12949:1: rule__Unit__UnitAssignment_2_2 : ( RULE_PERCENT ) ;
    public final void rule__Unit__UnitAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12953:1: ( ( RULE_PERCENT ) )
            // InternalNLX.g:12954:2: ( RULE_PERCENT )
            {
            // InternalNLX.g:12954:2: ( RULE_PERCENT )
            // InternalNLX.g:12955:3: RULE_PERCENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnitPERCENTTerminalRuleCall_2_2_0()); 
            }
            match(input,RULE_PERCENT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnitPERCENTTerminalRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnitAssignment_2_2"


    // $ANTLR start "rule__SimpleUnit__ValueAssignment_0_1"
    // InternalNLX.g:12964:1: rule__SimpleUnit__ValueAssignment_0_1 : ( rulechapterNum ) ;
    public final void rule__SimpleUnit__ValueAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12968:1: ( ( rulechapterNum ) )
            // InternalNLX.g:12969:2: ( rulechapterNum )
            {
            // InternalNLX.g:12969:2: ( rulechapterNum )
            // InternalNLX.g:12970:3: rulechapterNum
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleUnitAccess().getValueChapterNumParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulechapterNum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleUnitAccess().getValueChapterNumParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleUnit__ValueAssignment_0_1"


    // $ANTLR start "rule__SimpleUnit__ValueAssignment_1"
    // InternalNLX.g:12979:1: rule__SimpleUnit__ValueAssignment_1 : ( ruleItNum ) ;
    public final void rule__SimpleUnit__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12983:1: ( ( ruleItNum ) )
            // InternalNLX.g:12984:2: ( ruleItNum )
            {
            // InternalNLX.g:12984:2: ( ruleItNum )
            // InternalNLX.g:12985:3: ruleItNum
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleUnitAccess().getValueItNumParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItNum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleUnitAccess().getValueItNumParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleUnit__ValueAssignment_1"


    // $ANTLR start "rule__SimpleUnit__ValueAssignment_2"
    // InternalNLX.g:12994:1: rule__SimpleUnit__ValueAssignment_2 : ( RULE_HEX_NUMBER ) ;
    public final void rule__SimpleUnit__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:12998:1: ( ( RULE_HEX_NUMBER ) )
            // InternalNLX.g:12999:2: ( RULE_HEX_NUMBER )
            {
            // InternalNLX.g:12999:2: ( RULE_HEX_NUMBER )
            // InternalNLX.g:13000:3: RULE_HEX_NUMBER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleUnitAccess().getValueHEX_NUMBERTerminalRuleCall_2_0()); 
            }
            match(input,RULE_HEX_NUMBER,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleUnitAccess().getValueHEX_NUMBERTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleUnit__ValueAssignment_2"


    // $ANTLR start "rule__Chapter_Unit_HI__ValueAssignment_1"
    // InternalNLX.g:13009:1: rule__Chapter_Unit_HI__ValueAssignment_1 : ( rulechapterNum ) ;
    public final void rule__Chapter_Unit_HI__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13013:1: ( ( rulechapterNum ) )
            // InternalNLX.g:13014:2: ( rulechapterNum )
            {
            // InternalNLX.g:13014:2: ( rulechapterNum )
            // InternalNLX.g:13015:3: rulechapterNum
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_HIAccess().getValueChapterNumParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulechapterNum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_HIAccess().getValueChapterNumParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_HI__ValueAssignment_1"


    // $ANTLR start "rule__Chapter_Unit_Low__ValueAssignment_1"
    // InternalNLX.g:13024:1: rule__Chapter_Unit_Low__ValueAssignment_1 : ( ruledecimalNumEN ) ;
    public final void rule__Chapter_Unit_Low__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13028:1: ( ( ruledecimalNumEN ) )
            // InternalNLX.g:13029:2: ( ruledecimalNumEN )
            {
            // InternalNLX.g:13029:2: ( ruledecimalNumEN )
            // InternalNLX.g:13030:3: ruledecimalNumEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapter_Unit_LowAccess().getValueDecimalNumENParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruledecimalNumEN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapter_Unit_LowAccess().getValueDecimalNumENParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Chapter_Unit_Low__ValueAssignment_1"


    // $ANTLR start "rule__HashNumber__SignAssignment_1"
    // InternalNLX.g:13039:1: rule__HashNumber__SignAssignment_1 : ( ( rule__HashNumber__SignAlternatives_1_0 ) ) ;
    public final void rule__HashNumber__SignAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13043:1: ( ( ( rule__HashNumber__SignAlternatives_1_0 ) ) )
            // InternalNLX.g:13044:2: ( ( rule__HashNumber__SignAlternatives_1_0 ) )
            {
            // InternalNLX.g:13044:2: ( ( rule__HashNumber__SignAlternatives_1_0 ) )
            // InternalNLX.g:13045:3: ( rule__HashNumber__SignAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHashNumberAccess().getSignAlternatives_1_0()); 
            }
            // InternalNLX.g:13046:3: ( rule__HashNumber__SignAlternatives_1_0 )
            // InternalNLX.g:13046:4: rule__HashNumber__SignAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HashNumber__SignAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHashNumberAccess().getSignAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HashNumber__SignAssignment_1"


    // $ANTLR start "rule__HashNumber__ValueAssignment_2"
    // InternalNLX.g:13054:1: rule__HashNumber__ValueAssignment_2 : ( ruleNumber ) ;
    public final void rule__HashNumber__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13058:1: ( ( ruleNumber ) )
            // InternalNLX.g:13059:2: ( ruleNumber )
            {
            // InternalNLX.g:13059:2: ( ruleNumber )
            // InternalNLX.g:13060:3: ruleNumber
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHashNumberAccess().getValueNumberParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHashNumberAccess().getValueNumberParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HashNumber__ValueAssignment_2"


    // $ANTLR start "rule__ChapterAlpha__ValueAssignment_1_0"
    // InternalNLX.g:13069:1: rule__ChapterAlpha__ValueAssignment_1_0 : ( RULE_ID_C ) ;
    public final void rule__ChapterAlpha__ValueAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13073:1: ( ( RULE_ID_C ) )
            // InternalNLX.g:13074:2: ( RULE_ID_C )
            {
            // InternalNLX.g:13074:2: ( RULE_ID_C )
            // InternalNLX.g:13075:3: RULE_ID_C
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getValueID_CTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID_C,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getValueID_CTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__ValueAssignment_1_0"


    // $ANTLR start "rule__ChapterAlpha__ValueAssignment_1_1"
    // InternalNLX.g:13084:1: rule__ChapterAlpha__ValueAssignment_1_1 : ( RULE_ALL_ALPHA ) ;
    public final void rule__ChapterAlpha__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13088:1: ( ( RULE_ALL_ALPHA ) )
            // InternalNLX.g:13089:2: ( RULE_ALL_ALPHA )
            {
            // InternalNLX.g:13089:2: ( RULE_ALL_ALPHA )
            // InternalNLX.g:13090:3: RULE_ALL_ALPHA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getValueALL_ALPHATerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ALL_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getValueALL_ALPHATerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__ValueAssignment_1_1"


    // $ANTLR start "rule__ChapterAlpha__ValueAssignment_2"
    // InternalNLX.g:13099:1: rule__ChapterAlpha__ValueAssignment_2 : ( RULE_DOT ) ;
    public final void rule__ChapterAlpha__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13103:1: ( ( RULE_DOT ) )
            // InternalNLX.g:13104:2: ( RULE_DOT )
            {
            // InternalNLX.g:13104:2: ( RULE_DOT )
            // InternalNLX.g:13105:3: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getValueDOTTerminalRuleCall_2_0()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getValueDOTTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__ValueAssignment_2"


    // $ANTLR start "rule__ChapterAlpha__ValueAssignment_3"
    // InternalNLX.g:13114:1: rule__ChapterAlpha__ValueAssignment_3 : ( ruleChapterIntermediate ) ;
    public final void rule__ChapterAlpha__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13118:1: ( ( ruleChapterIntermediate ) )
            // InternalNLX.g:13119:2: ( ruleChapterIntermediate )
            {
            // InternalNLX.g:13119:2: ( ruleChapterIntermediate )
            // InternalNLX.g:13120:3: ruleChapterIntermediate
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getValueChapterIntermediateParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleChapterIntermediate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getValueChapterIntermediateParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__ValueAssignment_3"


    // $ANTLR start "rule__ChapterAlpha__ValueAssignment_4_0_0"
    // InternalNLX.g:13129:1: rule__ChapterAlpha__ValueAssignment_4_0_0 : ( RULE_DOT ) ;
    public final void rule__ChapterAlpha__ValueAssignment_4_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13133:1: ( ( RULE_DOT ) )
            // InternalNLX.g:13134:2: ( RULE_DOT )
            {
            // InternalNLX.g:13134:2: ( RULE_DOT )
            // InternalNLX.g:13135:3: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getValueDOTTerminalRuleCall_4_0_0_0()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getValueDOTTerminalRuleCall_4_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__ValueAssignment_4_0_0"


    // $ANTLR start "rule__ChapterAlpha__ValueAssignment_4_0_1"
    // InternalNLX.g:13144:1: rule__ChapterAlpha__ValueAssignment_4_0_1 : ( RULE_MINUS ) ;
    public final void rule__ChapterAlpha__ValueAssignment_4_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13148:1: ( ( RULE_MINUS ) )
            // InternalNLX.g:13149:2: ( RULE_MINUS )
            {
            // InternalNLX.g:13149:2: ( RULE_MINUS )
            // InternalNLX.g:13150:3: RULE_MINUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getValueMINUSTerminalRuleCall_4_0_1_0()); 
            }
            match(input,RULE_MINUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getValueMINUSTerminalRuleCall_4_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__ValueAssignment_4_0_1"


    // $ANTLR start "rule__ChapterAlpha__ValueAssignment_4_1"
    // InternalNLX.g:13159:1: rule__ChapterAlpha__ValueAssignment_4_1 : ( ruleChapterIntermediate ) ;
    public final void rule__ChapterAlpha__ValueAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13163:1: ( ( ruleChapterIntermediate ) )
            // InternalNLX.g:13164:2: ( ruleChapterIntermediate )
            {
            // InternalNLX.g:13164:2: ( ruleChapterIntermediate )
            // InternalNLX.g:13165:3: ruleChapterIntermediate
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChapterAlphaAccess().getValueChapterIntermediateParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleChapterIntermediate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChapterAlphaAccess().getValueChapterIntermediateParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChapterAlpha__ValueAssignment_4_1"


    // $ANTLR start "rule__SymbolsX__SymbolAssignment_1"
    // InternalNLX.g:13174:1: rule__SymbolsX__SymbolAssignment_1 : ( ruleSpecialSymbols ) ;
    public final void rule__SymbolsX__SymbolAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13178:1: ( ( ruleSpecialSymbols ) )
            // InternalNLX.g:13179:2: ( ruleSpecialSymbols )
            {
            // InternalNLX.g:13179:2: ( ruleSpecialSymbols )
            // InternalNLX.g:13180:3: ruleSpecialSymbols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSymbolsXAccess().getSymbolSpecialSymbolsParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSpecialSymbols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSymbolsXAccess().getSymbolSpecialSymbolsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SymbolsX__SymbolAssignment_1"


    // $ANTLR start "rule__Symbols__SymbolAssignment_1"
    // InternalNLX.g:13189:1: rule__Symbols__SymbolAssignment_1 : ( ruleSpecialCh ) ;
    public final void rule__Symbols__SymbolAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13193:1: ( ( ruleSpecialCh ) )
            // InternalNLX.g:13194:2: ( ruleSpecialCh )
            {
            // InternalNLX.g:13194:2: ( ruleSpecialCh )
            // InternalNLX.g:13195:3: ruleSpecialCh
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSymbolsAccess().getSymbolSpecialChParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSpecialCh();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSymbolsAccess().getSymbolSpecialChParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Symbols__SymbolAssignment_1"


    // $ANTLR start "rule__ShortcutGen__WordAssignment_1_0"
    // InternalNLX.g:13204:1: rule__ShortcutGen__WordAssignment_1_0 : ( RULE_ALL_ALPHA ) ;
    public final void rule__ShortcutGen__WordAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13208:1: ( ( RULE_ALL_ALPHA ) )
            // InternalNLX.g:13209:2: ( RULE_ALL_ALPHA )
            {
            // InternalNLX.g:13209:2: ( RULE_ALL_ALPHA )
            // InternalNLX.g:13210:3: RULE_ALL_ALPHA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getWordALL_ALPHATerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ALL_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getWordALL_ALPHATerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__WordAssignment_1_0"


    // $ANTLR start "rule__ShortcutGen__WordAssignment_1_1"
    // InternalNLX.g:13219:1: rule__ShortcutGen__WordAssignment_1_1 : ( RULE_ALPHA ) ;
    public final void rule__ShortcutGen__WordAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13223:1: ( ( RULE_ALPHA ) )
            // InternalNLX.g:13224:2: ( RULE_ALPHA )
            {
            // InternalNLX.g:13224:2: ( RULE_ALPHA )
            // InternalNLX.g:13225:3: RULE_ALPHA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getWordALPHATerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getWordALPHATerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__WordAssignment_1_1"


    // $ANTLR start "rule__ShortcutGen__WordAssignment_2_0"
    // InternalNLX.g:13234:1: rule__ShortcutGen__WordAssignment_2_0 : ( RULE_DOT ) ;
    public final void rule__ShortcutGen__WordAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13238:1: ( ( RULE_DOT ) )
            // InternalNLX.g:13239:2: ( RULE_DOT )
            {
            // InternalNLX.g:13239:2: ( RULE_DOT )
            // InternalNLX.g:13240:3: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getWordDOTTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getWordDOTTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__WordAssignment_2_0"


    // $ANTLR start "rule__ShortcutGen__WordAssignment_2_1_0"
    // InternalNLX.g:13249:1: rule__ShortcutGen__WordAssignment_2_1_0 : ( RULE_ALL_ALPHA ) ;
    public final void rule__ShortcutGen__WordAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13253:1: ( ( RULE_ALL_ALPHA ) )
            // InternalNLX.g:13254:2: ( RULE_ALL_ALPHA )
            {
            // InternalNLX.g:13254:2: ( RULE_ALL_ALPHA )
            // InternalNLX.g:13255:3: RULE_ALL_ALPHA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getWordALL_ALPHATerminalRuleCall_2_1_0_0()); 
            }
            match(input,RULE_ALL_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getWordALL_ALPHATerminalRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__WordAssignment_2_1_0"


    // $ANTLR start "rule__ShortcutGen__WordAssignment_2_1_1"
    // InternalNLX.g:13264:1: rule__ShortcutGen__WordAssignment_2_1_1 : ( RULE_ALPHA ) ;
    public final void rule__ShortcutGen__WordAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13268:1: ( ( RULE_ALPHA ) )
            // InternalNLX.g:13269:2: ( RULE_ALPHA )
            {
            // InternalNLX.g:13269:2: ( RULE_ALPHA )
            // InternalNLX.g:13270:3: RULE_ALPHA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getWordALPHATerminalRuleCall_2_1_1_0()); 
            }
            match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getWordALPHATerminalRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__WordAssignment_2_1_1"


    // $ANTLR start "rule__ShortcutGen__WordAssignment_3"
    // InternalNLX.g:13279:1: rule__ShortcutGen__WordAssignment_3 : ( RULE_DOT ) ;
    public final void rule__ShortcutGen__WordAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13283:1: ( ( RULE_DOT ) )
            // InternalNLX.g:13284:2: ( RULE_DOT )
            {
            // InternalNLX.g:13284:2: ( RULE_DOT )
            // InternalNLX.g:13285:3: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutGenAccess().getWordDOTTerminalRuleCall_3_0()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutGenAccess().getWordDOTTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutGen__WordAssignment_3"


    // $ANTLR start "rule__ShortcutLib__ShortcutAssignment_1"
    // InternalNLX.g:13294:1: rule__ShortcutLib__ShortcutAssignment_1 : ( RULE_SHORTCUTS ) ;
    public final void rule__ShortcutLib__ShortcutAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13298:1: ( ( RULE_SHORTCUTS ) )
            // InternalNLX.g:13299:2: ( RULE_SHORTCUTS )
            {
            // InternalNLX.g:13299:2: ( RULE_SHORTCUTS )
            // InternalNLX.g:13300:3: RULE_SHORTCUTS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortcutLibAccess().getShortcutSHORTCUTSTerminalRuleCall_1_0()); 
            }
            match(input,RULE_SHORTCUTS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortcutLibAccess().getShortcutSHORTCUTSTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortcutLib__ShortcutAssignment_1"


    // $ANTLR start "rule__ShortCut__ShortcutAssignment_0"
    // InternalNLX.g:13309:1: rule__ShortCut__ShortcutAssignment_0 : ( ruleShortcutLib ) ;
    public final void rule__ShortCut__ShortcutAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13313:1: ( ( ruleShortcutLib ) )
            // InternalNLX.g:13314:2: ( ruleShortcutLib )
            {
            // InternalNLX.g:13314:2: ( ruleShortcutLib )
            // InternalNLX.g:13315:3: ruleShortcutLib
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortCutAccess().getShortcutShortcutLibParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShortcutLib();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortCutAccess().getShortcutShortcutLibParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortCut__ShortcutAssignment_0"


    // $ANTLR start "rule__ShortCut__ShortcutAssignment_1"
    // InternalNLX.g:13324:1: rule__ShortCut__ShortcutAssignment_1 : ( ruleShortcutGen ) ;
    public final void rule__ShortCut__ShortcutAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13328:1: ( ( ruleShortcutGen ) )
            // InternalNLX.g:13329:2: ( ruleShortcutGen )
            {
            // InternalNLX.g:13329:2: ( ruleShortcutGen )
            // InternalNLX.g:13330:3: ruleShortcutGen
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortCutAccess().getShortcutShortcutGenParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShortcutGen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortCutAccess().getShortcutShortcutGenParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortCut__ShortcutAssignment_1"


    // $ANTLR start "rule__IgnoredText__IgnoredAssignment"
    // InternalNLX.g:13339:1: rule__IgnoredText__IgnoredAssignment : ( RULE_IGNORED ) ;
    public final void rule__IgnoredText__IgnoredAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13343:1: ( ( RULE_IGNORED ) )
            // InternalNLX.g:13344:2: ( RULE_IGNORED )
            {
            // InternalNLX.g:13344:2: ( RULE_IGNORED )
            // InternalNLX.g:13345:3: RULE_IGNORED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIgnoredTextAccess().getIgnoredIGNOREDTerminalRuleCall_0()); 
            }
            match(input,RULE_IGNORED,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIgnoredTextAccess().getIgnoredIGNOREDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IgnoredText__IgnoredAssignment"


    // $ANTLR start "rule__UrlAdress__ProtocolAssignment_0"
    // InternalNLX.g:13354:1: rule__UrlAdress__ProtocolAssignment_0 : ( RULE_URL_PROTOCOL ) ;
    public final void rule__UrlAdress__ProtocolAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13358:1: ( ( RULE_URL_PROTOCOL ) )
            // InternalNLX.g:13359:2: ( RULE_URL_PROTOCOL )
            {
            // InternalNLX.g:13359:2: ( RULE_URL_PROTOCOL )
            // InternalNLX.g:13360:3: RULE_URL_PROTOCOL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getProtocolURL_PROTOCOLTerminalRuleCall_0_0()); 
            }
            match(input,RULE_URL_PROTOCOL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getProtocolURL_PROTOCOLTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__ProtocolAssignment_0"


    // $ANTLR start "rule__UrlAdress__UrlAssignment_1"
    // InternalNLX.g:13369:1: rule__UrlAdress__UrlAssignment_1 : ( ruleItWordElurl ) ;
    public final void rule__UrlAdress__UrlAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13373:1: ( ( ruleItWordElurl ) )
            // InternalNLX.g:13374:2: ( ruleItWordElurl )
            {
            // InternalNLX.g:13374:2: ( ruleItWordElurl )
            // InternalNLX.g:13375:3: ruleItWordElurl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getUrlItWordElurlParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWordElurl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getUrlItWordElurlParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__UrlAssignment_1"


    // $ANTLR start "rule__UrlAdress__UrlAssignment_2_0"
    // InternalNLX.g:13384:1: rule__UrlAdress__UrlAssignment_2_0 : ( ruleAllSep ) ;
    public final void rule__UrlAdress__UrlAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13388:1: ( ( ruleAllSep ) )
            // InternalNLX.g:13389:2: ( ruleAllSep )
            {
            // InternalNLX.g:13389:2: ( ruleAllSep )
            // InternalNLX.g:13390:3: ruleAllSep
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getUrlAllSepParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAllSep();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getUrlAllSepParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__UrlAssignment_2_0"


    // $ANTLR start "rule__UrlAdress__UrlAssignment_2_1_0"
    // InternalNLX.g:13399:1: rule__UrlAdress__UrlAssignment_2_1_0 : ( ruleItWordElXx ) ;
    public final void rule__UrlAdress__UrlAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13403:1: ( ( ruleItWordElXx ) )
            // InternalNLX.g:13404:2: ( ruleItWordElXx )
            {
            // InternalNLX.g:13404:2: ( ruleItWordElXx )
            // InternalNLX.g:13405:3: ruleItWordElXx
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getUrlItWordElXxParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWordElXx();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getUrlItWordElXxParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__UrlAssignment_2_1_0"


    // $ANTLR start "rule__UrlAdress__UrlAssignment_2_1_1"
    // InternalNLX.g:13414:1: rule__UrlAdress__UrlAssignment_2_1_1 : ( rulesimpleNum ) ;
    public final void rule__UrlAdress__UrlAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13418:1: ( ( rulesimpleNum ) )
            // InternalNLX.g:13419:2: ( rulesimpleNum )
            {
            // InternalNLX.g:13419:2: ( rulesimpleNum )
            // InternalNLX.g:13420:3: rulesimpleNum
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getUrlSimpleNumParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulesimpleNum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getUrlSimpleNumParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__UrlAssignment_2_1_1"


    // $ANTLR start "rule__UrlAdress__UrlAssignment_2_1_2"
    // InternalNLX.g:13429:1: rule__UrlAdress__UrlAssignment_2_1_2 : ( ruleFragment ) ;
    public final void rule__UrlAdress__UrlAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13433:1: ( ( ruleFragment ) )
            // InternalNLX.g:13434:2: ( ruleFragment )
            {
            // InternalNLX.g:13434:2: ( ruleFragment )
            // InternalNLX.g:13435:3: ruleFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getUrlFragmentParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getUrlFragmentParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__UrlAssignment_2_1_2"


    // $ANTLR start "rule__UrlAdress__UrlAssignment_3"
    // InternalNLX.g:13444:1: rule__UrlAdress__UrlAssignment_3 : ( ruleAllSep ) ;
    public final void rule__UrlAdress__UrlAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13448:1: ( ( ruleAllSep ) )
            // InternalNLX.g:13449:2: ( ruleAllSep )
            {
            // InternalNLX.g:13449:2: ( ruleAllSep )
            // InternalNLX.g:13450:3: ruleAllSep
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUrlAdressAccess().getUrlAllSepParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAllSep();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUrlAdressAccess().getUrlAllSepParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UrlAdress__UrlAssignment_3"


    // $ANTLR start "rule__EmailAT__EmailAssignment"
    // InternalNLX.g:13459:1: rule__EmailAT__EmailAssignment : ( RULE_AT ) ;
    public final void rule__EmailAT__EmailAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13463:1: ( ( RULE_AT ) )
            // InternalNLX.g:13464:2: ( RULE_AT )
            {
            // InternalNLX.g:13464:2: ( RULE_AT )
            // InternalNLX.g:13465:3: RULE_AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmailATAccess().getEmailATTerminalRuleCall_0()); 
            }
            match(input,RULE_AT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmailATAccess().getEmailATTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmailAT__EmailAssignment"

}

@SuppressWarnings("all")
abstract class InternalNLXParser11 extends InternalNLXParser10 {

        InternalNLXParser11(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalNLXParser11(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__MailAdress__EmailAssignment_0_0"
    // InternalNLX.g:13474:1: rule__MailAdress__EmailAssignment_0_0 : ( ruleItWord ) ;
    public final void rule__MailAdress__EmailAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13478:1: ( ( ruleItWord ) )
            // InternalNLX.g:13479:2: ( ruleItWord )
            {
            // InternalNLX.g:13479:2: ( ruleItWord )
            // InternalNLX.g:13480:3: ruleItWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMailAdressAccess().getEmailItWordParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMailAdressAccess().getEmailItWordParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MailAdress__EmailAssignment_0_0"


    // $ANTLR start "rule__MailAdress__EmailAssignment_0_1"
    // InternalNLX.g:13489:1: rule__MailAdress__EmailAssignment_0_1 : ( ruleWord ) ;
    public final void rule__MailAdress__EmailAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13493:1: ( ( ruleWord ) )
            // InternalNLX.g:13494:2: ( ruleWord )
            {
            // InternalNLX.g:13494:2: ( ruleWord )
            // InternalNLX.g:13495:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMailAdressAccess().getEmailWordParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMailAdressAccess().getEmailWordParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MailAdress__EmailAssignment_0_1"


    // $ANTLR start "rule__MailAdress__EmailAssignment_1"
    // InternalNLX.g:13504:1: rule__MailAdress__EmailAssignment_1 : ( ruleEmailAT ) ;
    public final void rule__MailAdress__EmailAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13508:1: ( ( ruleEmailAT ) )
            // InternalNLX.g:13509:2: ( ruleEmailAT )
            {
            // InternalNLX.g:13509:2: ( ruleEmailAT )
            // InternalNLX.g:13510:3: ruleEmailAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMailAdressAccess().getEmailEmailATParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEmailAT();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMailAdressAccess().getEmailEmailATParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MailAdress__EmailAssignment_1"


    // $ANTLR start "rule__MailAdress__EmailAssignment_2"
    // InternalNLX.g:13519:1: rule__MailAdress__EmailAssignment_2 : ( ruleItWord ) ;
    public final void rule__MailAdress__EmailAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13523:1: ( ( ruleItWord ) )
            // InternalNLX.g:13524:2: ( ruleItWord )
            {
            // InternalNLX.g:13524:2: ( ruleItWord )
            // InternalNLX.g:13525:3: ruleItWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMailAdressAccess().getEmailItWordParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMailAdressAccess().getEmailItWordParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MailAdress__EmailAssignment_2"


    // $ANTLR start "rule__Formula__NameAssignment_0"
    // InternalNLX.g:13534:1: rule__Formula__NameAssignment_0 : ( ruleEmailAT ) ;
    public final void rule__Formula__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13538:1: ( ( ruleEmailAT ) )
            // InternalNLX.g:13539:2: ( ruleEmailAT )
            {
            // InternalNLX.g:13539:2: ( ruleEmailAT )
            // InternalNLX.g:13540:3: ruleEmailAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getNameEmailATParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEmailAT();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getNameEmailATParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__NameAssignment_0"


    // $ANTLR start "rule__Formula__NameAssignment_1_0"
    // InternalNLX.g:13549:1: rule__Formula__NameAssignment_1_0 : ( ruleItWord ) ;
    public final void rule__Formula__NameAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13553:1: ( ( ruleItWord ) )
            // InternalNLX.g:13554:2: ( ruleItWord )
            {
            // InternalNLX.g:13554:2: ( ruleItWord )
            // InternalNLX.g:13555:3: ruleItWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getNameItWordParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getNameItWordParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__NameAssignment_1_0"


    // $ANTLR start "rule__Formula__NameAssignment_1_1"
    // InternalNLX.g:13564:1: rule__Formula__NameAssignment_1_1 : ( ruleWord ) ;
    public final void rule__Formula__NameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13568:1: ( ( ruleWord ) )
            // InternalNLX.g:13569:2: ( ruleWord )
            {
            // InternalNLX.g:13569:2: ( ruleWord )
            // InternalNLX.g:13570:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getNameWordParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getNameWordParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__NameAssignment_1_1"


    // $ANTLR start "rule__Formula__ParametersAssignment_2"
    // InternalNLX.g:13579:1: rule__Formula__ParametersAssignment_2 : ( ruleBracketSentence ) ;
    public final void rule__Formula__ParametersAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13583:1: ( ( ruleBracketSentence ) )
            // InternalNLX.g:13584:2: ( ruleBracketSentence )
            {
            // InternalNLX.g:13584:2: ( ruleBracketSentence )
            // InternalNLX.g:13585:3: ruleBracketSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getParametersBracketSentenceParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBracketSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getParametersBracketSentenceParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__ParametersAssignment_2"


    // $ANTLR start "rule__Formula__NameAssignment_3_1_0"
    // InternalNLX.g:13594:1: rule__Formula__NameAssignment_3_1_0 : ( ruleItWord ) ;
    public final void rule__Formula__NameAssignment_3_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13598:1: ( ( ruleItWord ) )
            // InternalNLX.g:13599:2: ( ruleItWord )
            {
            // InternalNLX.g:13599:2: ( ruleItWord )
            // InternalNLX.g:13600:3: ruleItWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getNameItWordParserRuleCall_3_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getNameItWordParserRuleCall_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__NameAssignment_3_1_0"


    // $ANTLR start "rule__Formula__NameAssignment_3_1_1"
    // InternalNLX.g:13609:1: rule__Formula__NameAssignment_3_1_1 : ( ruleWord ) ;
    public final void rule__Formula__NameAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13613:1: ( ( ruleWord ) )
            // InternalNLX.g:13614:2: ( ruleWord )
            {
            // InternalNLX.g:13614:2: ( ruleWord )
            // InternalNLX.g:13615:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getNameWordParserRuleCall_3_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getNameWordParserRuleCall_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__NameAssignment_3_1_1"


    // $ANTLR start "rule__Formula__ParametersAssignment_3_2"
    // InternalNLX.g:13624:1: rule__Formula__ParametersAssignment_3_2 : ( ruleBracketSentence ) ;
    public final void rule__Formula__ParametersAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13628:1: ( ( ruleBracketSentence ) )
            // InternalNLX.g:13629:2: ( ruleBracketSentence )
            {
            // InternalNLX.g:13629:2: ( ruleBracketSentence )
            // InternalNLX.g:13630:3: ruleBracketSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormulaAccess().getParametersBracketSentenceParserRuleCall_3_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBracketSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormulaAccess().getParametersBracketSentenceParserRuleCall_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formula__ParametersAssignment_3_2"


    // $ANTLR start "rule__Array__NameAssignment_0_0"
    // InternalNLX.g:13639:1: rule__Array__NameAssignment_0_0 : ( ruleItWord ) ;
    public final void rule__Array__NameAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13643:1: ( ( ruleItWord ) )
            // InternalNLX.g:13644:2: ( ruleItWord )
            {
            // InternalNLX.g:13644:2: ( ruleItWord )
            // InternalNLX.g:13645:3: ruleItWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayAccess().getNameItWordParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleItWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayAccess().getNameItWordParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__NameAssignment_0_0"


    // $ANTLR start "rule__Array__NameAssignment_0_1"
    // InternalNLX.g:13654:1: rule__Array__NameAssignment_0_1 : ( ruleWord ) ;
    public final void rule__Array__NameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13658:1: ( ( ruleWord ) )
            // InternalNLX.g:13659:2: ( ruleWord )
            {
            // InternalNLX.g:13659:2: ( ruleWord )
            // InternalNLX.g:13660:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayAccess().getNameWordParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayAccess().getNameWordParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__NameAssignment_0_1"


    // $ANTLR start "rule__Array__ParametersAssignment_1"
    // InternalNLX.g:13669:1: rule__Array__ParametersAssignment_1 : ( ruleExtBracketSentence ) ;
    public final void rule__Array__ParametersAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13673:1: ( ( ruleExtBracketSentence ) )
            // InternalNLX.g:13674:2: ( ruleExtBracketSentence )
            {
            // InternalNLX.g:13674:2: ( ruleExtBracketSentence )
            // InternalNLX.g:13675:3: ruleExtBracketSentence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayAccess().getParametersExtBracketSentenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtBracketSentence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayAccess().getParametersExtBracketSentenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__ParametersAssignment_1"


    // $ANTLR start "rule__New_Line__NlAssignment_1"
    // InternalNLX.g:13684:1: rule__New_Line__NlAssignment_1 : ( RULE_NEWLINE ) ;
    public final void rule__New_Line__NlAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNLX.g:13688:1: ( ( RULE_NEWLINE ) )
            // InternalNLX.g:13689:2: ( RULE_NEWLINE )
            {
            // InternalNLX.g:13689:2: ( RULE_NEWLINE )
            // InternalNLX.g:13690:3: RULE_NEWLINE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNew_LineAccess().getNlNEWLINETerminalRuleCall_1_0()); 
            }
            match(input,RULE_NEWLINE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNew_LineAccess().getNlNEWLINETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__New_Line__NlAssignment_1"

    // $ANTLR start synpred4_InternalNLX
    public final void synpred4_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2303:2: ( ( ( ruleChapterSentence ) ) )
        // InternalNLX.g:2303:2: ( ( ruleChapterSentence ) )
        {
        // InternalNLX.g:2303:2: ( ( ruleChapterSentence ) )
        // InternalNLX.g:2304:3: ( ruleChapterSentence )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSentenceTypeAccess().getChapterSentenceParserRuleCall_1_0()); 
        }
        // InternalNLX.g:2305:3: ( ruleChapterSentence )
        // InternalNLX.g:2305:4: ruleChapterSentence
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleChapterSentence();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred4_InternalNLX

    // $ANTLR start synpred5_InternalNLX
    public final void synpred5_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2309:2: ( ( ruleParagraphBlock ) )
        // InternalNLX.g:2309:2: ( ruleParagraphBlock )
        {
        // InternalNLX.g:2309:2: ( ruleParagraphBlock )
        // InternalNLX.g:2310:3: ruleParagraphBlock
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSentenceTypeAccess().getParagraphBlockParserRuleCall_1_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleParagraphBlock();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalNLX

    // $ANTLR start synpred6_InternalNLX
    public final void synpred6_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2338:5: ( RULE_NEWLINE )
        // InternalNLX.g:2338:5: RULE_NEWLINE
        {
        match(input,RULE_NEWLINE,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_InternalNLX

    // $ANTLR start synpred8_InternalNLX
    public final void synpred8_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2358:2: ( ( ruleSentenceChain ) )
        // InternalNLX.g:2358:2: ( ruleSentenceChain )
        {
        // InternalNLX.g:2358:2: ( ruleSentenceChain )
        // InternalNLX.g:2359:3: ruleSentenceChain
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBlockElementAccess().getSentenceChainParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSentenceChain();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalNLX

    // $ANTLR start synpred9_InternalNLX
    public final void synpred9_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2364:2: ( ( ruleIgnoredText ) )
        // InternalNLX.g:2364:2: ( ruleIgnoredText )
        {
        // InternalNLX.g:2364:2: ( ruleIgnoredText )
        // InternalNLX.g:2365:3: ruleIgnoredText
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBlockElementAccess().getIgnoredTextParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleIgnoredText();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalNLX

    // $ANTLR start synpred10_InternalNLX
    public final void synpred10_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2370:2: ( ( ruleFootNote ) )
        // InternalNLX.g:2370:2: ( ruleFootNote )
        {
        // InternalNLX.g:2370:2: ( ruleFootNote )
        // InternalNLX.g:2371:3: ruleFootNote
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBlockElementAccess().getFootNoteParserRuleCall_2()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFootNote();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred10_InternalNLX

    // $ANTLR start synpred16_InternalNLX
    public final void synpred16_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2481:2: ( ( ( rule__ChapterSentence__ChapterNumberAssignment_0_0 ) ) )
        // InternalNLX.g:2481:2: ( ( rule__ChapterSentence__ChapterNumberAssignment_0_0 ) )
        {
        // InternalNLX.g:2481:2: ( ( rule__ChapterSentence__ChapterNumberAssignment_0_0 ) )
        // InternalNLX.g:2482:3: ( rule__ChapterSentence__ChapterNumberAssignment_0_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getChapterSentenceAccess().getChapterNumberAssignment_0_0()); 
        }
        // InternalNLX.g:2483:3: ( rule__ChapterSentence__ChapterNumberAssignment_0_0 )
        // InternalNLX.g:2483:4: rule__ChapterSentence__ChapterNumberAssignment_0_0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ChapterSentence__ChapterNumberAssignment_0_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred16_InternalNLX

    // $ANTLR start synpred18_InternalNLX
    public final void synpred18_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2508:2: ( ( ( rule__SubSentence__Group_1_0__0 ) ) )
        // InternalNLX.g:2508:2: ( ( rule__SubSentence__Group_1_0__0 ) )
        {
        // InternalNLX.g:2508:2: ( ( rule__SubSentence__Group_1_0__0 ) )
        // InternalNLX.g:2509:3: ( rule__SubSentence__Group_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubSentenceAccess().getGroup_1_0()); 
        }
        // InternalNLX.g:2510:3: ( rule__SubSentence__Group_1_0__0 )
        // InternalNLX.g:2510:4: rule__SubSentence__Group_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SubSentence__Group_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred18_InternalNLX

    // $ANTLR start synpred33_InternalNLX
    public final void synpred33_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2718:2: ( ( ruleShortCut ) )
        // InternalNLX.g:2718:2: ( ruleShortCut )
        {
        // InternalNLX.g:2718:2: ( ruleShortCut )
        // InternalNLX.g:2719:3: ruleShortCut
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getNoNElementAccess().getShortCutParserRuleCall_5()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleShortCut();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalNLX

    // $ANTLR start synpred34_InternalNLX
    public final void synpred34_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2724:2: ( ( ruleHashNumber ) )
        // InternalNLX.g:2724:2: ( ruleHashNumber )
        {
        // InternalNLX.g:2724:2: ( ruleHashNumber )
        // InternalNLX.g:2725:3: ruleHashNumber
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getNoNElementAccess().getHashNumberParserRuleCall_6()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleHashNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalNLX

    // $ANTLR start synpred42_InternalNLX
    public final void synpred42_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2817:2: ( ( ruleSimpleUnit ) )
        // InternalNLX.g:2817:2: ( ruleSimpleUnit )
        {
        // InternalNLX.g:2817:2: ( ruleSimpleUnit )
        // InternalNLX.g:2818:3: ruleSimpleUnit
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getNoNElementX2Access().getSimpleUnitParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSimpleUnit();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred42_InternalNLX

    // $ANTLR start synpred43_InternalNLX
    public final void synpred43_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2823:2: ( ( ruleUnit ) )
        // InternalNLX.g:2823:2: ( ruleUnit )
        {
        // InternalNLX.g:2823:2: ( ruleUnit )
        // InternalNLX.g:2824:3: ruleUnit
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getNoNElementX2Access().getUnitParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleUnit();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalNLX

    // $ANTLR start synpred44_InternalNLX
    public final void synpred44_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:2829:2: ( ( ruleNoNElement ) )
        // InternalNLX.g:2829:2: ( ruleNoNElement )
        {
        // InternalNLX.g:2829:2: ( ruleNoNElement )
        // InternalNLX.g:2830:3: ruleNoNElement
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getNoNElementX2Access().getNoNElementParserRuleCall_2()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleNoNElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred44_InternalNLX

    // $ANTLR start synpred62_InternalNLX
    public final void synpred62_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:3117:2: ( ( ( rule__ItWord__Group_0_0__0 ) ) )
        // InternalNLX.g:3117:2: ( ( rule__ItWord__Group_0_0__0 ) )
        {
        // InternalNLX.g:3117:2: ( ( rule__ItWord__Group_0_0__0 ) )
        // InternalNLX.g:3118:3: ( rule__ItWord__Group_0_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getItWordAccess().getGroup_0_0()); 
        }
        // InternalNLX.g:3119:3: ( rule__ItWord__Group_0_0__0 )
        // InternalNLX.g:3119:4: rule__ItWord__Group_0_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ItWord__Group_0_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred62_InternalNLX

    // $ANTLR start synpred68_InternalNLX
    public final void synpred68_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:3199:2: ( ( ( rule__ItWord__WordAssignment_0_0_0_0_1_0 ) ) )
        // InternalNLX.g:3199:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_1_0 ) )
        {
        // InternalNLX.g:3199:2: ( ( rule__ItWord__WordAssignment_0_0_0_0_1_0 ) )
        // InternalNLX.g:3200:3: ( rule__ItWord__WordAssignment_0_0_0_0_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getItWordAccess().getWordAssignment_0_0_0_0_1_0()); 
        }
        // InternalNLX.g:3201:3: ( rule__ItWord__WordAssignment_0_0_0_0_1_0 )
        // InternalNLX.g:3201:4: rule__ItWord__WordAssignment_0_0_0_0_1_0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ItWord__WordAssignment_0_0_0_0_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred68_InternalNLX

    // $ANTLR start synpred72_InternalNLX
    public final void synpred72_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:3268:2: ( ( ( rule__ItWord__Group_0_1_1_0__0 ) ) )
        // InternalNLX.g:3268:2: ( ( rule__ItWord__Group_0_1_1_0__0 ) )
        {
        // InternalNLX.g:3268:2: ( ( rule__ItWord__Group_0_1_1_0__0 ) )
        // InternalNLX.g:3269:3: ( rule__ItWord__Group_0_1_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getItWordAccess().getGroup_0_1_1_0()); 
        }
        // InternalNLX.g:3270:3: ( rule__ItWord__Group_0_1_1_0__0 )
        // InternalNLX.g:3270:4: rule__ItWord__Group_0_1_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ItWord__Group_0_1_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred72_InternalNLX

    // $ANTLR start synpred80_InternalNLX
    public final void synpred80_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:3391:2: ( ( RULE_ALL_ALPHA ) )
        // InternalNLX.g:3391:2: ( RULE_ALL_ALPHA )
        {
        // InternalNLX.g:3391:2: ( RULE_ALL_ALPHA )
        // InternalNLX.g:3392:3: RULE_ALL_ALPHA
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getItWordElXxAccess().getALL_ALPHATerminalRuleCall_0()); 
        }
        match(input,RULE_ALL_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred80_InternalNLX

    // $ANTLR start synpred81_InternalNLX
    public final void synpred81_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:3397:2: ( ( RULE_ALPHA ) )
        // InternalNLX.g:3397:2: ( RULE_ALPHA )
        {
        // InternalNLX.g:3397:2: ( RULE_ALPHA )
        // InternalNLX.g:3398:3: RULE_ALPHA
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getItWordElXxAccess().getALPHATerminalRuleCall_1()); 
        }
        match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred81_InternalNLX

    // $ANTLR start synpred82_InternalNLX
    public final void synpred82_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:3403:2: ( ( ( ruleItWordElX ) ) )
        // InternalNLX.g:3403:2: ( ( ruleItWordElX ) )
        {
        // InternalNLX.g:3403:2: ( ( ruleItWordElX ) )
        // InternalNLX.g:3404:3: ( ruleItWordElX )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getItWordElXxAccess().getItWordElXParserRuleCall_2()); 
        }
        // InternalNLX.g:3405:3: ( ruleItWordElX )
        // InternalNLX.g:3405:4: ruleItWordElX
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleItWordElX();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred82_InternalNLX

    // $ANTLR start synpred83_InternalNLX
    public final void synpred83_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:3409:2: ( ( ruleFragment ) )
        // InternalNLX.g:3409:2: ( ruleFragment )
        {
        // InternalNLX.g:3409:2: ( ruleFragment )
        // InternalNLX.g:3410:3: ruleFragment
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getItWordElXxAccess().getFragmentParserRuleCall_3()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFragment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred83_InternalNLX

    // $ANTLR start synpred84_InternalNLX
    public final void synpred84_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:3415:2: ( ( ruleAsterisk ) )
        // InternalNLX.g:3415:2: ( ruleAsterisk )
        {
        // InternalNLX.g:3415:2: ( ruleAsterisk )
        // InternalNLX.g:3416:3: ruleAsterisk
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getItWordElXxAccess().getAsteriskParserRuleCall_4()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAsterisk();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred84_InternalNLX

    // $ANTLR start synpred85_InternalNLX
    public final void synpred85_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:3421:2: ( ( RULE_ID_C ) )
        // InternalNLX.g:3421:2: ( RULE_ID_C )
        {
        // InternalNLX.g:3421:2: ( RULE_ID_C )
        // InternalNLX.g:3422:3: RULE_ID_C
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getItWordElXxAccess().getID_CTerminalRuleCall_5()); 
        }
        match(input,RULE_ID_C,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred85_InternalNLX

    // $ANTLR start synpred121_InternalNLX
    public final void synpred121_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:3892:2: ( ( ( rule__UrlAdress__UrlAssignment_2_1_0 ) ) )
        // InternalNLX.g:3892:2: ( ( rule__UrlAdress__UrlAssignment_2_1_0 ) )
        {
        // InternalNLX.g:3892:2: ( ( rule__UrlAdress__UrlAssignment_2_1_0 ) )
        // InternalNLX.g:3893:3: ( rule__UrlAdress__UrlAssignment_2_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_1_0()); 
        }
        // InternalNLX.g:3894:3: ( rule__UrlAdress__UrlAssignment_2_1_0 )
        // InternalNLX.g:3894:4: rule__UrlAdress__UrlAssignment_2_1_0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__UrlAdress__UrlAssignment_2_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred121_InternalNLX

    // $ANTLR start synpred122_InternalNLX
    public final void synpred122_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:3898:2: ( ( ( rule__UrlAdress__UrlAssignment_2_1_1 ) ) )
        // InternalNLX.g:3898:2: ( ( rule__UrlAdress__UrlAssignment_2_1_1 ) )
        {
        // InternalNLX.g:3898:2: ( ( rule__UrlAdress__UrlAssignment_2_1_1 ) )
        // InternalNLX.g:3899:3: ( rule__UrlAdress__UrlAssignment_2_1_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUrlAdressAccess().getUrlAssignment_2_1_1()); 
        }
        // InternalNLX.g:3900:3: ( rule__UrlAdress__UrlAssignment_2_1_1 )
        // InternalNLX.g:3900:4: rule__UrlAdress__UrlAssignment_2_1_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__UrlAdress__UrlAssignment_2_1_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred122_InternalNLX

    // $ANTLR start synpred138_InternalNLX
    public final void synpred138_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:5272:3: ( rule__Sentence__Group_2__0 )
        // InternalNLX.g:5272:3: rule__Sentence__Group_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Sentence__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred138_InternalNLX

    // $ANTLR start synpred141_InternalNLX
    public final void synpred141_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:5677:3: ( rule__SentenceX__Group_2__0 )
        // InternalNLX.g:5677:3: rule__SentenceX__Group_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SentenceX__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalNLX

    // $ANTLR start synpred142_InternalNLX
    public final void synpred142_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:5921:3: ( rule__SubSentence__Group_2__0 )
        // InternalNLX.g:5921:3: rule__SubSentence__Group_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SubSentence__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred142_InternalNLX

    // $ANTLR start synpred151_InternalNLX
    public final void synpred151_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:6521:3: ( rule__TrailSubSentence__Group_1_2__0 )
        // InternalNLX.g:6521:3: rule__TrailSubSentence__Group_1_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__TrailSubSentence__Group_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalNLX

    // $ANTLR start synpred155_InternalNLX
    public final void synpred155_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:6819:3: ( rule__FreeSubSentence__Alternatives_1 )
        // InternalNLX.g:6819:3: rule__FreeSubSentence__Alternatives_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__FreeSubSentence__Alternatives_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred155_InternalNLX

    // $ANTLR start synpred156_InternalNLX
    public final void synpred156_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:6873:3: ( rule__FreeSubSentence__Group_3__0 )
        // InternalNLX.g:6873:3: rule__FreeSubSentence__Group_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__FreeSubSentence__Group_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_InternalNLX

    // $ANTLR start synpred157_InternalNLX
    public final void synpred157_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:6899:3: ( rule__FreeSubSentence__Alternatives_4 )
        // InternalNLX.g:6899:3: rule__FreeSubSentence__Alternatives_4
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__FreeSubSentence__Alternatives_4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred157_InternalNLX

    // $ANTLR start synpred158_InternalNLX
    public final void synpred158_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:6933:4: ( rule__FreeSubSentence__Alternatives_3_0 )
        // InternalNLX.g:6933:4: rule__FreeSubSentence__Alternatives_3_0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__FreeSubSentence__Alternatives_3_0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred158_InternalNLX

    // $ANTLR start synpred161_InternalNLX
    public final void synpred161_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:7474:3: ( rule__BracketSentence__Group_2__0 )
        // InternalNLX.g:7474:3: rule__BracketSentence__Group_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__BracketSentence__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred161_InternalNLX

    // $ANTLR start synpred163_InternalNLX
    public final void synpred163_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:7528:3: ( rule__BracketSentence__Alternatives_4 )
        // InternalNLX.g:7528:3: rule__BracketSentence__Alternatives_4
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__BracketSentence__Alternatives_4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred163_InternalNLX

    // $ANTLR start synpred165_InternalNLX
    public final void synpred165_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:7635:3: ( rule__BracketSentence__Group_2_1__0 )
        // InternalNLX.g:7635:3: rule__BracketSentence__Group_2_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__BracketSentence__Group_2_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred165_InternalNLX

    // $ANTLR start synpred176_InternalNLX
    public final void synpred176_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:8533:3: ( RULE_MULTI )
        // InternalNLX.g:8533:3: RULE_MULTI
        {
        match(input,RULE_MULTI,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred176_InternalNLX

    // $ANTLR start synpred177_InternalNLX
    public final void synpred177_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:8695:3: ( rule__ItWord__WordAssignment_1 )
        // InternalNLX.g:8695:3: rule__ItWord__WordAssignment_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ItWord__WordAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred177_InternalNLX

    // $ANTLR start synpred194_InternalNLX
    public final void synpred194_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:10606:4: ( rule__ChapterNum__Group_1__0 )
        // InternalNLX.g:10606:4: rule__ChapterNum__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ChapterNum__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred194_InternalNLX

    // $ANTLR start synpred196_InternalNLX
    public final void synpred196_InternalNLX_fragment() throws RecognitionException {   
        // InternalNLX.g:10769:3: ( rule__UrlAdress__UrlAssignment_3 )
        // InternalNLX.g:10769:3: rule__UrlAdress__UrlAssignment_3
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__UrlAdress__UrlAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred196_InternalNLX

}

@SuppressWarnings("all")
public class InternalNLXParser extends InternalNLXParser11 {



        public InternalNLXParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalNLXParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        


}
