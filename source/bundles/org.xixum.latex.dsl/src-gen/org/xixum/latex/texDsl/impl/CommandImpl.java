/**
 * generated by Xtext 2.33.0
 */
package org.xixum.latex.texDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xixum.latex.texDsl.Command;
import org.xixum.latex.texDsl.CommandName;
import org.xixum.latex.texDsl.CommandParameters;
import org.xixum.latex.texDsl.SubCommand;
import org.xixum.latex.texDsl.TexDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Command</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xixum.latex.texDsl.impl.CommandImpl#getCommand <em>Command</em>}</li>
 *   <li>{@link org.xixum.latex.texDsl.impl.CommandImpl#getParameters <em>Parameters</em>}</li>
 *   <li>{@link org.xixum.latex.texDsl.impl.CommandImpl#getSubCommand <em>Sub Command</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CommandImpl extends MinimalEObjectImpl.Container implements Command
{
  /**
   * The cached value of the '{@link #getCommand() <em>Command</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommand()
   * @generated
   * @ordered
   */
  protected CommandName command;

  /**
   * The cached value of the '{@link #getParameters() <em>Parameters</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameters()
   * @generated
   * @ordered
   */
  protected CommandParameters parameters;

  /**
   * The cached value of the '{@link #getSubCommand() <em>Sub Command</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubCommand()
   * @generated
   * @ordered
   */
  protected SubCommand subCommand;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CommandImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TexDslPackage.Literals.COMMAND;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CommandName getCommand()
  {
    return command;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCommand(CommandName newCommand, NotificationChain msgs)
  {
    CommandName oldCommand = command;
    command = newCommand;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TexDslPackage.COMMAND__COMMAND, oldCommand, newCommand);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCommand(CommandName newCommand)
  {
    if (newCommand != command)
    {
      NotificationChain msgs = null;
      if (command != null)
        msgs = ((InternalEObject)command).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TexDslPackage.COMMAND__COMMAND, null, msgs);
      if (newCommand != null)
        msgs = ((InternalEObject)newCommand).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TexDslPackage.COMMAND__COMMAND, null, msgs);
      msgs = basicSetCommand(newCommand, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TexDslPackage.COMMAND__COMMAND, newCommand, newCommand));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CommandParameters getParameters()
  {
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameters(CommandParameters newParameters, NotificationChain msgs)
  {
    CommandParameters oldParameters = parameters;
    parameters = newParameters;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TexDslPackage.COMMAND__PARAMETERS, oldParameters, newParameters);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParameters(CommandParameters newParameters)
  {
    if (newParameters != parameters)
    {
      NotificationChain msgs = null;
      if (parameters != null)
        msgs = ((InternalEObject)parameters).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TexDslPackage.COMMAND__PARAMETERS, null, msgs);
      if (newParameters != null)
        msgs = ((InternalEObject)newParameters).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TexDslPackage.COMMAND__PARAMETERS, null, msgs);
      msgs = basicSetParameters(newParameters, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TexDslPackage.COMMAND__PARAMETERS, newParameters, newParameters));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SubCommand getSubCommand()
  {
    return subCommand;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSubCommand(SubCommand newSubCommand, NotificationChain msgs)
  {
    SubCommand oldSubCommand = subCommand;
    subCommand = newSubCommand;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TexDslPackage.COMMAND__SUB_COMMAND, oldSubCommand, newSubCommand);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSubCommand(SubCommand newSubCommand)
  {
    if (newSubCommand != subCommand)
    {
      NotificationChain msgs = null;
      if (subCommand != null)
        msgs = ((InternalEObject)subCommand).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TexDslPackage.COMMAND__SUB_COMMAND, null, msgs);
      if (newSubCommand != null)
        msgs = ((InternalEObject)newSubCommand).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TexDslPackage.COMMAND__SUB_COMMAND, null, msgs);
      msgs = basicSetSubCommand(newSubCommand, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TexDslPackage.COMMAND__SUB_COMMAND, newSubCommand, newSubCommand));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TexDslPackage.COMMAND__COMMAND:
        return basicSetCommand(null, msgs);
      case TexDslPackage.COMMAND__PARAMETERS:
        return basicSetParameters(null, msgs);
      case TexDslPackage.COMMAND__SUB_COMMAND:
        return basicSetSubCommand(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TexDslPackage.COMMAND__COMMAND:
        return getCommand();
      case TexDslPackage.COMMAND__PARAMETERS:
        return getParameters();
      case TexDslPackage.COMMAND__SUB_COMMAND:
        return getSubCommand();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TexDslPackage.COMMAND__COMMAND:
        setCommand((CommandName)newValue);
        return;
      case TexDslPackage.COMMAND__PARAMETERS:
        setParameters((CommandParameters)newValue);
        return;
      case TexDslPackage.COMMAND__SUB_COMMAND:
        setSubCommand((SubCommand)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TexDslPackage.COMMAND__COMMAND:
        setCommand((CommandName)null);
        return;
      case TexDslPackage.COMMAND__PARAMETERS:
        setParameters((CommandParameters)null);
        return;
      case TexDslPackage.COMMAND__SUB_COMMAND:
        setSubCommand((SubCommand)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TexDslPackage.COMMAND__COMMAND:
        return command != null;
      case TexDslPackage.COMMAND__PARAMETERS:
        return parameters != null;
      case TexDslPackage.COMMAND__SUB_COMMAND:
        return subCommand != null;
    }
    return super.eIsSet(featureID);
  }

} //CommandImpl
