/**
 * generated by Xtext 2.33.0
 */
package org.xixum.latex.texDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xixum.latex.texDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class TexDslFactoryImpl extends EFactoryImpl implements TexDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static TexDslFactory init()
  {
    try
    {
      TexDslFactory theTexDslFactory = (TexDslFactory)EPackage.Registry.INSTANCE.getEFactory(TexDslPackage.eNS_URI);
      if (theTexDslFactory != null)
      {
        return theTexDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new TexDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TexDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case TexDslPackage.MODEL: return createModel();
      case TexDslPackage.ELEMENT: return createElement();
      case TexDslPackage.COMMAND: return createCommand();
      case TexDslPackage.OPTIONAL_ARGUMENT: return createOptionalArgument();
      case TexDslPackage.MANDATORY_ARGUMENT: return createMandatoryArgument();
      case TexDslPackage.ARGUMENT_CONTENT: return createArgumentContent();
      case TexDslPackage.TEXT_CONTAINER: return createTextContainer();
      case TexDslPackage.TEXT_CONTENT: return createTextContent();
      case TexDslPackage.IDENTIFIERS: return createIdentifiers();
      case TexDslPackage.NUMBERS: return createNumbers();
      case TexDslPackage.OPERATORS: return createOperators();
      case TexDslPackage.MATH_EXPRESSION: return createMathExpression();
      case TexDslPackage.INLINE_MATH: return createInlineMath();
      case TexDslPackage.DISPLAY_MATH: return createDisplayMath();
      case TexDslPackage.MATH_CONTENT: return createMathContent();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Element createElement()
  {
    ElementImpl element = new ElementImpl();
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Command createCommand()
  {
    CommandImpl command = new CommandImpl();
    return command;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OptionalArgument createOptionalArgument()
  {
    OptionalArgumentImpl optionalArgument = new OptionalArgumentImpl();
    return optionalArgument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MandatoryArgument createMandatoryArgument()
  {
    MandatoryArgumentImpl mandatoryArgument = new MandatoryArgumentImpl();
    return mandatoryArgument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArgumentContent createArgumentContent()
  {
    ArgumentContentImpl argumentContent = new ArgumentContentImpl();
    return argumentContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TextContainer createTextContainer()
  {
    TextContainerImpl textContainer = new TextContainerImpl();
    return textContainer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TextContent createTextContent()
  {
    TextContentImpl textContent = new TextContentImpl();
    return textContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Identifiers createIdentifiers()
  {
    IdentifiersImpl identifiers = new IdentifiersImpl();
    return identifiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Numbers createNumbers()
  {
    NumbersImpl numbers = new NumbersImpl();
    return numbers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Operators createOperators()
  {
    OperatorsImpl operators = new OperatorsImpl();
    return operators;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MathExpression createMathExpression()
  {
    MathExpressionImpl mathExpression = new MathExpressionImpl();
    return mathExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InlineMath createInlineMath()
  {
    InlineMathImpl inlineMath = new InlineMathImpl();
    return inlineMath;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DisplayMath createDisplayMath()
  {
    DisplayMathImpl displayMath = new DisplayMathImpl();
    return displayMath;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MathContent createMathContent()
  {
    MathContentImpl mathContent = new MathContentImpl();
    return mathContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TexDslPackage getTexDslPackage()
  {
    return (TexDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static TexDslPackage getPackage()
  {
    return TexDslPackage.eINSTANCE;
  }

} //TexDslFactoryImpl
